{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json({\n  limit: '50mb',\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].urlencoded({\n  limit: '50mb',\n  extended: true\n}));\napp.get('/', _routes[\"default\"].home);\napp.patch('/', _routes[\"default\"].addView);\napp.post('/register', _routes[\"default\"].registration);\napp.post('/login', _routes[\"default\"].login);\napp.patch('/register', [_auth[\"default\"].isValidUser], _routes[\"default\"].changePassword); //register? bolje change_password, ali onda je to nova ruta\n\napp.patch('/journal', _routes[\"default\"].submitJournal);\napp.post('/application_form', _routes[\"default\"].applicationForm); //prijavnica samo jednom, ili više pa da je patch?\n\napp.get('/instructions', _routes[\"default\"].getInstructions);\napp.patch('/instructions', _routes[\"default\"].changeInstructions);\napp.patch('/template', _routes[\"default\"].uploadTemplate);\napp.get('/template', _routes[\"default\"].getTemplate);\napp.patch('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo);\napp[\"delete\"]('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo); //students\n//app.get('/students/:id', routes.getOneStudent)\n\napp.get('/students', _routes[\"default\"].getStudents);\napp.get('/journal/:id', _routes[\"default\"].getJournal); //projects\n\napp.get('/projects', _routes[\"default\"].getProjects);\napp.post('/projects', _routes[\"default\"].addProject);\napp.get('/projects/:id', _routes[\"default\"].getOneProject);\napp.put('/projects/:id', _routes[\"default\"].changeProjectInfo);\napp[\"delete\"]('/projects/:id', _routes[\"default\"].changeProjectInfo);\napp.patch('/chosen_projects', _routes[\"default\"].submitChosenProjects);\napp.get('/approved_project', _routes[\"default\"].getApprovedProject);\napp.get('/check_if_partner', _routes[\"default\"].checkIfPartner);\napp.get('/chosen_projects', _routes[\"default\"].getChosenProjects); //partners\n\napp.get('/partners', _routes[\"default\"].getPartners);\napp.get('/partners/:id', _routes[\"default\"].getOnePartner);\napp.put('/partners/:id', _routes[\"default\"].changePartnerInfo); //promijeniti u 'partner'? i maknuti drugi parametar?\n\napp[\"delete\"]('/partners/:id', _routes[\"default\"].changePartnerInfo);\napp.get('/partner_projects/:id', _routes[\"default\"].getPartnerProjects);\napp.post('/partners', _routes[\"default\"].createPartner); // //projects\n// app.get('/projects', routes.getProjects)\n// app.post('/projects',[auth.isValidUser], [auth.isPartner], routes.addProject)\n// app.get('/projects/:id', routes.getOneProject)\n// app.patch('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo)\n// app.delete('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \n// app.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\n// app.get('/approved_project', routes.getApprovedProject)\n// //partners\n// app.get('/partners', routes.getPartners)\n// app.get('/partners/:id', routes.getOnePartner)\n// app.patch('/partners/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) //promijeniti u 'partner'?\n// app.delete('/partners/:id/:update', [auth.isValidUser], [auth.isPartner],  routes.changePartnerInfo)\n// app.get('/partner_projects/:id', routes.getPartnerProjects)\n// app.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) \n\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "limit",
        "extended",
        "urlencoded",
        "get",
        "routes",
        "home",
        "patch",
        "addView",
        "post",
        "registration",
        "login",
        "auth",
        "isValidUser",
        "changePassword",
        "submitJournal",
        "applicationForm",
        "getInstructions",
        "changeInstructions",
        "uploadTemplate",
        "getTemplate",
        "changeUserInfo",
        "getStudents",
        "getJournal",
        "getProjects",
        "addProject",
        "getOneProject",
        "put",
        "changeProjectInfo",
        "submitChosenProjects",
        "getApprovedProject",
        "checkIfPartner",
        "getChosenProjects",
        "getPartners",
        "getOnePartner",
        "changePartnerInfo",
        "getPartnerProjects",
        "createPartner",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport routes from './routes'; \r\nimport cors from 'cors'\r\nimport auth from './auth.js'\r\n\r\n\r\nconst app = express() // instanciranje aplikacije\r\nconst port = 3000 // port na kojem će web server slušati\r\n\r\napp.use(cors())\r\n\r\napp.use(bodyParser.json({limit: '50mb', extended: true}))\r\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}))\r\n\r\n\r\n\r\napp.get('/', routes.home)\r\napp.patch('/', routes.addView)\r\napp.post('/register', routes.registration)\r\napp.post('/login', routes.login)\r\napp.patch('/register', [auth.isValidUser], routes.changePassword) //register? bolje change_password, ali onda je to nova ruta\r\napp.patch('/journal', routes.submitJournal) \r\napp.post('/application_form', routes.applicationForm)  //prijavnica samo jednom, ili više pa da je patch?\r\napp.get('/instructions', routes.getInstructions) \r\napp.patch('/instructions', routes.changeInstructions) \r\napp.patch('/template', routes.uploadTemplate) \r\napp.get('/template', routes.getTemplate)\r\napp.patch('/user', [auth.isValidUser], routes.changeUserInfo) \r\napp.delete('/user', [auth.isValidUser], routes.changeUserInfo)\r\n\r\n\r\n//students\r\n//app.get('/students/:id', routes.getOneStudent)\r\napp.get('/students', routes.getStudents)\r\napp.get('/journal/:id', routes.getJournal)\r\n\r\n//projects\r\napp.get('/projects', routes.getProjects)\r\napp.post('/projects', routes.addProject)\r\napp.get('/projects/:id', routes.getOneProject)\r\napp.put('/projects/:id',  routes.changeProjectInfo) \r\napp.delete('/projects/:id',  routes.changeProjectInfo) \r\napp.patch('/chosen_projects', routes.submitChosenProjects) \r\napp.get('/approved_project', routes.getApprovedProject)\r\napp.get('/check_if_partner', routes.checkIfPartner)\r\napp.get('/chosen_projects', routes.getChosenProjects)\r\n\r\n\r\n//partners\r\napp.get('/partners', routes.getPartners)\r\napp.get('/partners/:id', routes.getOnePartner)\r\napp.put('/partners/:id', routes.changePartnerInfo) //promijeniti u 'partner'? i maknuti drugi parametar?\r\napp.delete('/partners/:id', routes.changePartnerInfo)   \r\napp.get('/partner_projects/:id', routes.getPartnerProjects)\r\napp.post('/partners',  routes.createPartner) \r\n\r\n\r\n// //projects\r\n// app.get('/projects', routes.getProjects)\r\n// app.post('/projects',[auth.isValidUser], [auth.isPartner], routes.addProject)\r\n// app.get('/projects/:id', routes.getOneProject)\r\n// app.patch('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo)\r\n// app.delete('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \r\n// app.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\r\n// app.get('/approved_project', routes.getApprovedProject)\r\n\r\n\r\n// //partners\r\n// app.get('/partners', routes.getPartners)\r\n// app.get('/partners/:id', routes.getOnePartner)\r\n// app.patch('/partners/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) //promijeniti u 'partner'?\r\n// app.delete('/partners/:id/:update', [auth.isValidUser], [auth.isPartner],  routes.changePartnerInfo)\r\n// app.get('/partner_projects/:id', routes.getPartnerProjects)\r\n// app.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) \r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1598040850183
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _methods = _interopRequireDefault(require(\"./methods.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  getChosenProjects: function getChosenProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var studentID, db, cursor, projects, result, attributes;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              studentID = req.body.id;\n              _context.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context.sent;\n              _context.next = 6;\n              return db.collection('projects').find();\n\n            case 6:\n              cursor = _context.sent;\n              _context.next = 9;\n              return cursor.toArray();\n\n            case 9:\n              projects = _context.sent;\n              result = [];\n              attributes = ['first_priority', 'second_priority', 'third_priority'];\n              attributes.forEach(function (attribute) {\n                var match = projects.filter(function (project) {\n                  var priority = undefined;\n\n                  try {\n                    priority = project.selected_by[attribute];\n                    console.log(priority);\n\n                    if (priority.includes(studentID)) {\n                      result.push(project._id);\n                    }\n                  } catch (_unused) {}\n                });\n              });\n              console.log(result);\n              res.json(result);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //slicna kao neke funkcije, spojiti?\n  getJournal: function getJournal(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var journalID, db, journal;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              journalID = req.params.id;\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.prev = 4;\n              _context2.next = 7;\n              return db.collection(\"journals\").findOne({\n                _id: (0, _mongodb.ObjectID)(journalID)\n              });\n\n            case 7:\n              journal = _context2.sent;\n              res.json(journal);\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.log(_context2.t0);\n              res.json({\n                error: _context2.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 11]]);\n    }))();\n  },\n  //     //identicna kao getOnePartner, spojiti?\n  //     async getOneStudent (req,res) {\n  //         //ne vraca gresku kad je id nepostojeci\n  //         let id = req.params.id\n  //         //let id = req.body.id\n  //         let db = await connect()\n  //         try{\n  //             let result = await db.collection(\"users\").findOne({_id: ObjectID(id)})\n  //             result.id = result._id\n  //             delete result._id, \n  //             delete result.password\n  //             res.json(result)\n  //         }\n  //         catch(e){\n  //             if (id == null)  res.json({error: 'id is undefined'})\n  //             else  res.json({error: e.message})\n  //         }\n  // },\n  // id usera svugdje traziti preko req.jwt!!?\n  changeUserInfo: function changeUserInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var userInfo, obj, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userInfo = req.body;\n              obj = req.route.methods;\n              userInfo.method = Object.keys(obj).toString();\n              _context3.next = 5;\n              return _methods[\"default\"].changeInfo(userInfo, 'users');\n\n            case 5:\n              response = _context3.sent;\n              res.send(response);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  //skoro identicna kao getonePartner skoro, spojiti u jednu\n  checkIfPartner: function checkIfPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var id, db, data;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = req.body._id;\n              _context4.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context4.sent;\n              _context4.next = 6;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 6:\n              data = _context4.sent;\n              if (!data) res.status(401).json({\n                error: 'user is not a partner'\n              });\n              res.json(data);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  getTemplate: function getTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var db, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              _context5.next = 5;\n              return db.collection(\"content\").findOne();\n\n            case 5:\n              result = _context5.sent;\n              res.json(result.template);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  uploadTemplate: function uploadTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var db, content, data, obj, result;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context6.sent;\n              _context6.next = 5;\n              return db.collection('content').findOne();\n\n            case 5:\n              content = _context6.sent;\n              data = {\n                template: req.body,\n                id: content._id,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              data.method = Object.keys(obj).toString();\n              _context6.prev = 9;\n              _context6.next = 12;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 12:\n              result = _context6.sent;\n              res.send(\"\".concat(result, \" at changing template.\"));\n              _context6.next = 19;\n              break;\n\n            case 16:\n              _context6.prev = 16;\n              _context6.t0 = _context6[\"catch\"](9);\n              res.status(500).json({\n                error: _context6.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[9, 16]]);\n    }))();\n  },\n  changeInstructions: function changeInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var db, content, data, obj, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context7.sent;\n              _context7.next = 5;\n              return db.collection('content').findOne();\n\n            case 5:\n              content = _context7.sent;\n              data = {\n                instructions: req.body,\n                id: content._id,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              data.method = Object.keys(obj).toString();\n              _context7.prev = 9;\n              _context7.next = 12;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 12:\n              result = _context7.sent;\n              res.send(\"\".concat(result, \" at changing instructions.\"));\n              _context7.next = 19;\n              break;\n\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](9);\n              res.status(500).json({\n                error: _context7.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[9, 16]]);\n    }))();\n  },\n  getInstructions: function getInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              id = req.params.id;\n              _context8.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context8.sent;\n              _context8.next = 6;\n              return db.collection(\"content\").findOne();\n\n            case 6:\n              result = _context8.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result.instructions);\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  },\n  getApprovedProject: function getApprovedProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              //testna za sad\n              res.json({\n                message: 'here is your approved project'\n              });\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }))();\n  },\n  applicationForm: function applicationForm(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      var formData, obj, db, appExists, result;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              formData = {\n                id: req.body.userID,\n                application: req.body.form,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              formData.method = Object.keys(obj).toString();\n              _context10.next = 5;\n              return (0, _db[\"default\"])();\n\n            case 5:\n              db = _context10.sent;\n              _context10.next = 8;\n              return db.collection('users').find({\n                _id: (0, _mongodb.ObjectID)(formData.id),\n                application: {\n                  $exists: true\n                }\n              });\n\n            case 8:\n              appExists = _context10.sent;\n              _context10.prev = 9;\n\n              if (!(appExists == true)) {\n                _context10.next = 12;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting\");\n\n            case 12:\n              _context10.next = 14;\n              return _methods[\"default\"].changeInfo(formData, 'users');\n\n            case 14:\n              result = _context10.sent;\n              res.send(\"\".concat(result, \" at inserting application.\"));\n              _context10.next = 21;\n              break;\n\n            case 18:\n              _context10.prev = 18;\n              _context10.t0 = _context10[\"catch\"](9);\n              res.status(500).json({\n                error: _context10.t0.message\n              });\n\n            case 21:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[9, 18]]);\n    }))();\n  },\n  //refaktorirati\n  submitJournal: function submitJournal(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var data, db, journal, user, obj;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              data = {\n                userID: req.body.user_id,\n                journal: req.body.journal,\n                upload_date: Date.now() // Date(Date.now())\n\n              };\n              _context11.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context11.sent;\n              _context11.prev = 4;\n              _context11.next = 7;\n              return db.collection('journals').insertOne(data);\n\n            case 7:\n              journal = _context11.sent;\n              _context11.prev = 8;\n              user = {\n                id: data.userID,\n                journalID: journal.insertedId,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              user.method = Object.keys(obj).toString();\n              _context11.next = 14;\n              return _methods[\"default\"].changeInfo(user, 'users');\n\n            case 14:\n              res.json(true); //res.json({message: 'upload successful'})\n\n              _context11.next = 21;\n              break;\n\n            case 17:\n              _context11.prev = 17;\n              _context11.t0 = _context11[\"catch\"](8);\n              res.send('Error accured during connecting journal ID with user');\n              return _context11.abrupt(\"return\", false);\n\n            case 21:\n              _context11.next = 26;\n              break;\n\n            case 23:\n              _context11.prev = 23;\n              _context11.t1 = _context11[\"catch\"](4);\n              res.json(false); //res.json({error:e.message })\n\n            case 26:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[4, 23], [8, 17]]);\n    }))();\n  },\n  getOneProject: function getOneProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              id = req.params.id;\n              _context12.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context12.sent;\n              _context12.prev = 4;\n              _context12.next = 7;\n              return db.collection(\"projects\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context12.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context12.next = 16;\n              break;\n\n            case 13:\n              _context12.prev = 13;\n              _context12.t0 = _context12[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context12.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[4, 13]]);\n    }))();\n  },\n  getPartnerProjects: function getPartnerProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var partnerID, db, cursor, results;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              partnerID = req.params.id;\n              _context13.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context13.sent;\n              _context13.next = 6;\n              return db.collection(\"projects\").find({\n                partnerID: (0, _mongodb.ObjectID)(partnerID)\n              });\n\n            case 6:\n              cursor = _context13.sent;\n              _context13.next = 9;\n              return cursor.toArray();\n\n            case 9:\n              results = _context13.sent;\n              res.send(results);\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }))();\n  },\n  addView: function addView(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var data, collectionName, obj, result;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              data = req.body;\n              data.updateDoc = 'true';\n              collectionName = data.collectionName;\n              delete data.collectionName;\n              obj = req.route.methods;\n              data.method = Object.keys(obj).toString();\n              _context14.next = 8;\n              return _methods[\"default\"].changeInfo(data, collectionName);\n\n            case 8:\n              result = _context14.sent;\n              res.json(result);\n\n            case 10:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }))();\n  },\n  getOnePartner: function getOnePartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              //ne vraca gresku kad je id nepostojeci\n              id = req.params.id;\n              _context15.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context15.sent;\n              _context15.prev = 4;\n              _context15.next = 7;\n              return db.collection(\"partners\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context15.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context15.next = 16;\n              break;\n\n            case 13:\n              _context15.prev = 13;\n              _context15.t0 = _context15[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context15.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[4, 13]]);\n    }))();\n  },\n  changePassword: function changePassword(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      var data, result;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              data = req.body; //dolazi iz metode isValidUser\n\n              data.email = req.jwt.email;\n\n              if (!(data.newPassword && data.oldPassword)) {\n                _context16.next = 9;\n                break;\n              }\n\n              _context16.next = 5;\n              return _auth[\"default\"].changeUserPassword(data);\n\n            case 5:\n              result = _context16.sent;\n\n              if (result) {\n                res.status(201).send({\n                  status: 'Success'\n                });\n              } else {\n                res.status(500).json({\n                  error: 'Server error'\n                });\n              }\n\n              _context16.next = 10;\n              break;\n\n            case 9:\n              res.status(400).json({\n                error: \"Invalid input data\"\n              });\n\n            case 10:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }))();\n  },\n  login: function login(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var user, result;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              user = req.body;\n              _context17.prev = 1;\n              _context17.next = 4;\n              return _auth[\"default\"].authenticateUser(user.email, user.password);\n\n            case 4:\n              result = _context17.sent;\n              res.json(result);\n              _context17.next = 11;\n              break;\n\n            case 8:\n              _context17.prev = 8;\n              _context17.t0 = _context17[\"catch\"](1);\n              res.status(401).json({\n                error: _context17.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[1, 8]]);\n    }))();\n  },\n  registration: function registration(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var newUser, partner, result;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              newUser = req.body;\n              _context18.prev = 1;\n              _context18.next = 4;\n              return _auth[\"default\"].register(newUser);\n\n            case 4:\n              partner = _context18.sent;\n\n              if (!(newUser.account_type === ('poslodavac' || 'Poslodavac'))) {\n                _context18.next = 9;\n                break;\n              }\n\n              _context18.next = 8;\n              return _methods[\"default\"].addPartner(partner);\n\n            case 8:\n              result = _context18.sent;\n\n            case 9:\n              console.log(result);\n              res.json({\n                status: \"user with id \".concat(result, \" added\")\n              });\n              _context18.next = 16;\n              break;\n\n            case 13:\n              _context18.prev = 13;\n              _context18.t0 = _context18[\"catch\"](1);\n              res.status(500).json({\n                error: _context18.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[1, 13]]);\n    }))();\n  },\n  submitChosenProjects: function submitChosenProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      var data, db, result, selectedBy, entries, _iterator, _step, _step$value, index, _step$value$, key, value, projectID;\n\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              data = req.body;\n              _context19.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context19.sent;\n              selectedBy = {\n                first_priority: [],\n                second_priority: [],\n                third_priority: []\n              }; //destrukcija strukture\n\n              entries = Object.entries(selectedBy);\n              _iterator = _createForOfIteratorHelper(entries.entries());\n              _context19.prev = 7;\n\n              _iterator.s();\n\n            case 9:\n              if ((_step = _iterator.n()).done) {\n                _context19.next = 18;\n                break;\n              }\n\n              _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], _step$value$ = _slicedToArray(_step$value[1], 2), key = _step$value$[0], value = _step$value$[1];\n              projectID = data.selection[index];\n              /* https://stackoverflow.com/questions/30969382/mongodb-object-key-with-es6-template-string  da bi bilo moguce dinamicki updejtati*/\n              // var attributeName\n              // let query = { \"_id\": projectID }\n              // let update = { \"$addToSet\": {} }\n              // update[\"$addToSet\"][attributeName] = data.user\n              //trik za prevariti mongo kompajler\n              // ili selectedBy[key] = 'selected_by. + key\n\n              key = 'selected_by.' + key;\n              _context19.next = 15;\n              return db.collection('projects').updateOne({\n                _id: (0, _mongodb.ObjectID)(projectID)\n              }, {\n                $addToSet: _defineProperty({}, key, data.user)\n              });\n\n            case 15:\n              result = _context19.sent;\n\n            case 16:\n              _context19.next = 9;\n              break;\n\n            case 18:\n              _context19.next = 23;\n              break;\n\n            case 20:\n              _context19.prev = 20;\n              _context19.t0 = _context19[\"catch\"](7);\n\n              _iterator.e(_context19.t0);\n\n            case 23:\n              _context19.prev = 23;\n\n              _iterator.f();\n\n              return _context19.finish(23);\n\n            case 26:\n              res.json(result);\n\n            case 27:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[7, 20, 23, 26]]);\n    }))();\n  },\n  changeProjectInfo: function changeProjectInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      var projectData, project, obj, response;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              projectData = req.body;\n              delete projectData.id;\n\n              if (!projectData) {\n                _context20.next = 8;\n                break;\n              }\n\n              _context20.next = 5;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 5:\n              project = _context20.sent;\n              _context20.next = 9;\n              break;\n\n            case 8:\n              project = {};\n\n            case 9:\n              // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\n              project.id = req.params.id;\n              project.updateDoc = projectData.updateDoc; //console.log(req.route.methods[\"put\"]) pa onda true/false\n\n              obj = req.route.methods;\n              project.method = Object.keys(obj).toString();\n              console.log(project);\n              _context20.next = 16;\n              return _methods[\"default\"].changeInfo(project, 'projects');\n\n            case 16:\n              response = _context20.sent;\n              res.send(response);\n\n            case 18:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }))();\n  },\n  changePartnerInfo: function changePartnerInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      var partnerInfo, obj, response;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              partnerInfo = req.body;\n              delete partnerInfo._id;\n              partnerInfo.id = req.params.id;\n              obj = req.route.methods;\n              partnerInfo.method = Object.keys(obj).toString();\n              _context21.next = 7;\n              return _methods[\"default\"].changeInfo(partnerInfo, 'partners');\n\n            case 7:\n              response = _context21.sent;\n              res.send(response);\n\n            case 9:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }))();\n  },\n  getStudents: function getStudents(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"name\", \"surname\", \"jmbag\", \"year\", \"technology\", \"email\", \"account_type\"];\n              _context22.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'users');\n\n            case 4:\n              result = _context22.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }))();\n  },\n  getProjects: function getProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"technologies\", \"location\", \"project_description\"];\n              _context23.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'projects');\n\n            case 4:\n              result = _context23.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }))();\n  },\n  getPartners: function getPartners(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"about_us\"];\n              _context24.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'partners');\n\n            case 4:\n              result = _context24.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }))();\n  },\n  addProject: function addProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n      var projectData, project, result;\n      return regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              projectData = req.body; // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\n\n              _context25.next = 3;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 3:\n              project = _context25.sent;\n              //slika je hardcodana jer nema bas smisla imati custom sliku projekta\n              project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\";\n              project.userID = projectData.userID;\n              project.views = 0;\n              _context25.prev = 7;\n              _context25.next = 10;\n              return _methods[\"default\"].pushData(project, 'projects');\n\n            case 10:\n              result = _context25.sent;\n              res.send(\"project with id  \".concat(result, \" added.\"));\n              _context25.next = 17;\n              break;\n\n            case 14:\n              _context25.prev = 14;\n              _context25.t0 = _context25[\"catch\"](7);\n              res.status(500).json({\n                error: _context25.t0.message\n              });\n\n            case 17:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[7, 14]]);\n    }))();\n  },\n  createPartner: function createPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n      var partnerData, partnerID;\n      return regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              console.log('tu samm');\n              partnerData = req.body; // ako će trebati kad stjepan implementira\n              //let project = await methods.mapAttributes(projectData)\n              //dok stjepan ne implementira ce biti ovako hardcodano\n\n              partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"; //za raspoznavanje koji partneri su se sami kreirali, a koji ne\n\n              partnerData.created_by_admin = true;\n              _context26.prev = 4;\n              _context26.next = 7;\n              return _methods[\"default\"].pushData(partnerData, 'partners');\n\n            case 7:\n              partnerID = _context26.sent;\n              res.send(\"partner with id  \".concat(partnerID, \" added.\"));\n              _context26.next = 14;\n              break;\n\n            case 11:\n              _context26.prev = 11;\n              _context26.t0 = _context26[\"catch\"](4);\n              res.status(500).json({\n                error: _context26.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, null, [[4, 11]]);\n    }))();\n  },\n  home: function home(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27() {\n      var db, numberOfDocs;\n      return regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context27.sent;\n              numberOfDocs = {};\n              _context27.next = 6;\n              return db.collection(\"projects\").countDocuments();\n\n            case 6:\n              numberOfDocs.projectsCounter = _context27.sent;\n              _context27.next = 9;\n              return db.collection(\"partners\").countDocuments();\n\n            case 9:\n              numberOfDocs.partnersCounter = _context27.sent;\n              _context27.next = 12;\n              return db.collection(\"users\").countDocuments({\n                account_type: 'Student'\n              });\n\n            case 12:\n              numberOfDocs.studentsCounter = _context27.sent;\n              res.json(numberOfDocs);\n\n            case 14:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "getChosenProjects",
        "req",
        "res",
        "studentID",
        "body",
        "id",
        "db",
        "collection",
        "find",
        "cursor",
        "toArray",
        "projects",
        "result",
        "attributes",
        "forEach",
        "attribute",
        "match",
        "filter",
        "project",
        "priority",
        "undefined",
        "selected_by",
        "console",
        "log",
        "includes",
        "push",
        "_id",
        "json",
        "getJournal",
        "journalID",
        "params",
        "findOne",
        "journal",
        "error",
        "message",
        "changeUserInfo",
        "userInfo",
        "obj",
        "route",
        "methods",
        "method",
        "Object",
        "keys",
        "toString",
        "changeInfo",
        "response",
        "send",
        "checkIfPartner",
        "userID",
        "data",
        "status",
        "getTemplate",
        "template",
        "uploadTemplate",
        "content",
        "updateDoc",
        "changeInstructions",
        "instructions",
        "getInstructions",
        "getApprovedProject",
        "applicationForm",
        "formData",
        "application",
        "form",
        "$exists",
        "appExists",
        "Error",
        "submitJournal",
        "user_id",
        "upload_date",
        "Date",
        "now",
        "insertOne",
        "user",
        "insertedId",
        "getOneProject",
        "getPartnerProjects",
        "partnerID",
        "results",
        "addView",
        "collectionName",
        "getOnePartner",
        "changePassword",
        "email",
        "jwt",
        "newPassword",
        "oldPassword",
        "auth",
        "changeUserPassword",
        "login",
        "authenticateUser",
        "password",
        "registration",
        "newUser",
        "register",
        "partner",
        "account_type",
        "addPartner",
        "submitChosenProjects",
        "selectedBy",
        "first_priority",
        "second_priority",
        "third_priority",
        "entries",
        "index",
        "key",
        "value",
        "projectID",
        "selection",
        "updateOne",
        "$addToSet",
        "changeProjectInfo",
        "projectData",
        "mapAttributes",
        "changePartnerInfo",
        "partnerInfo",
        "getStudents",
        "query",
        "atributi",
        "search",
        "getProjects",
        "getPartners",
        "addProject",
        "img_url",
        "views",
        "pushData",
        "createPartner",
        "partnerData",
        "created_by_admin",
        "home",
        "numberOfDocs",
        "countDocuments",
        "projectsCounter",
        "partnersCounter",
        "studentsCounter"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;eAGe;AAELA,EAAAA,iBAFK,6BAEcC,GAFd,EAEkBC,GAFlB,EAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,cAAAA,SAD0B,GACdF,GAAG,CAACG,IAAJ,CAASC,EADK;AAAA;AAAA,qBAGf,qBAHe;;AAAA;AAG1BC,cAAAA,EAH0B;AAAA;AAAA,qBAIXA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BC,IAA1B,EAJW;;AAAA;AAI1BC,cAAAA,MAJ0B;AAAA;AAAA,qBAKTA,MAAM,CAACC,OAAP,EALS;;AAAA;AAK1BC,cAAAA,QAL0B;AAO1BC,cAAAA,MAP0B,GAOjB,EAPiB;AAS1BC,cAAAA,UAT0B,GASb,CAAC,gBAAD,EAAmB,iBAAnB,EAAsC,gBAAtC,CATa;AAY9BA,cAAAA,UAAU,CAACC,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAC5B,oBAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAT,CAAgB,UAAUC,OAAV,EAAmB;AAC7C,sBAAIC,QAAQ,GAAGC,SAAf;;AAEA,sBAAI;AAEAD,oBAAAA,QAAQ,GAAGD,OAAO,CAACG,WAAR,CAAoBN,SAApB,CAAX;AACAO,oBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,wBAAIA,QAAQ,CAACK,QAAT,CAAkBrB,SAAlB,CAAJ,EAAiC;AAC7BS,sBAAAA,MAAM,CAACa,IAAP,CAAYP,OAAO,CAACQ,GAApB;AACC;AAER,mBARD,CAUA,gBAAM,CAAG;AACZ,iBAda,CAAd;AAeH,eAhBD;AAiBAJ,cAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEAV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;;AA/B8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCjC,GAnCU;AAsCX;AACMgB,EAAAA,UAvCK,sBAuCO3B,GAvCP,EAuCWC,GAvCX,EAuCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB2B,cAAAA,SADmB,GACP5B,GAAG,CAAC6B,MAAJ,CAAWzB,EADJ;AAAA;AAAA,qBAGR,qBAHQ;;AAAA;AAGnBC,cAAAA,EAHmB;AAAA;AAAA;AAAA,qBAMCA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BwB,OAA1B,CAAkC;AAACL,gBAAAA,GAAG,EAAE,uBAASG,SAAT;AAAN,eAAlC,CAND;;AAAA;AAMfG,cAAAA,OANe;AAOnB9B,cAAAA,GAAG,CAACyB,IAAJ,CAASK,OAAT;AAPmB;AAAA;;AAAA;AAAA;AAAA;AAWnBV,cAAAA,OAAO,CAACC,GAAR;AACArB,cAAAA,GAAG,CAACyB,IAAJ,CAAS;AAACM,gBAAAA,KAAK,EAAE,aAAEC;AAAV,eAAT;;AAZmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc1B,GArDU;AAwDf;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEI;AACMC,EAAAA,cApFK,0BAoFWlC,GApFX,EAoFgBC,GApFhB,EAoFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzBkC,cAAAA,QAFyB,GAEdnC,GAAG,CAACG,IAFU;AAGzBiC,cAAAA,GAHyB,GAGnBpC,GAAG,CAACqC,KAAJ,CAAUC,OAHS;AAK7BH,cAAAA,QAAQ,CAACI,MAAT,GAAkBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAlB;AAL6B;AAAA,qBAORJ,oBAAQK,UAAR,CAAmBR,QAAnB,EAA6B,OAA7B,CAPQ;;AAAA;AAOzBS,cAAAA,QAPyB;AAS7B3C,cAAAA,GAAG,CAAC4C,IAAJ,CAASD,QAAT;;AAT6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhC,GA9FU;AAgGX;AACME,EAAAA,cAjGK,0BAiGU9C,GAjGV,EAiGeC,GAjGf,EAiGoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBG,cAAAA,EADmB,GACdJ,GAAG,CAACG,IAAJ,CAASsB,GADK;AAAA;AAAA,qBAGR,qBAHQ;;AAAA;AAGnBpB,cAAAA,EAHmB;AAAA;AAAA,qBAIJA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BwB,OAA1B,CAAkC;AAACiB,gBAAAA,MAAM,EAAG,uBAAS3C,EAAT;AAAV,eAAlC,CAJI;;AAAA;AAIjB4C,cAAAA,IAJiB;AAMvB,kBAAG,CAACA,IAAJ,EAAW/C,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,gBAAAA,KAAK,EAAE;AAAT,eAArB;AAEX/B,cAAAA,GAAG,CAACyB,IAAJ,CAAUsB,IAAV;;AARuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU9B,GA3GU;AA6GLE,EAAAA,WA7GK,uBA6GOlD,GA7GP,EA6GYC,GA7GZ,EA6GiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACT,qBADS;;AAAA;AACpBI,cAAAA,EADoB;AAAA;AAAA,qBAGLA,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBwB,OAAzB,EAHK;;AAAA;AAGpBnB,cAAAA,MAHoB;AAMxBV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAM,CAACwC,QAAhB;;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ3B,GArHU;AAuHLC,EAAAA,cAvHK,0BAuHUpD,GAvHV,EAuHeC,GAvHf,EAuHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGZ,qBAHY;;AAAA;AAGvBI,cAAAA,EAHuB;AAAA;AAAA,qBAIPA,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBwB,OAAzB,EAJO;;AAAA;AAIvBuB,cAAAA,OAJuB;AAMvBL,cAAAA,IANuB,GAMhB;AACPG,gBAAAA,QAAQ,EAAGnD,GAAG,CAACG,IADR;AAEPC,gBAAAA,EAAE,EAAGiD,OAAO,CAAC5B,GAFN;AAGP6B,gBAAAA,SAAS,EAAG;AAHL,eANgB;AAYvBlB,cAAAA,GAZuB,GAYjBpC,GAAG,CAACqC,KAAJ,CAAUC,OAZO;AAa3BU,cAAAA,IAAI,CAACT,MAAL,GAAcC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAd;AAb2B;AAAA;AAAA,qBAiBJJ,oBAAQK,UAAR,CAAmBK,IAAnB,EAAyB,SAAzB,CAjBI;;AAAA;AAiBnBrC,cAAAA,MAjBmB;AAmBvBV,cAAAA,GAAG,CAAC4C,IAAJ,WAAYlC,MAAZ;AAnBuB;AAAA;;AAAA;AAAA;AAAA;AAuBvBV,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,gBAAAA,KAAK,EAAE,aAAEC;AAAX,eAArB;;AAvBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0B9B,GAjJU;AAmJLsB,EAAAA,kBAnJK,8BAmJcvD,GAnJd,EAmJmBC,GAnJnB,EAmJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEhB,qBAFgB;;AAAA;AAE3BI,cAAAA,EAF2B;AAAA;AAAA,qBAGXA,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBwB,OAAzB,EAHW;;AAAA;AAG3BuB,cAAAA,OAH2B;AAK3BL,cAAAA,IAL2B,GAKpB;AACPQ,gBAAAA,YAAY,EAAGxD,GAAG,CAACG,IADZ;AAEPC,gBAAAA,EAAE,EAAGiD,OAAO,CAAC5B,GAFN;AAGP6B,gBAAAA,SAAS,EAAG;AAHL,eALoB;AAW3BlB,cAAAA,GAX2B,GAWrBpC,GAAG,CAACqC,KAAJ,CAAUC,OAXW;AAY/BU,cAAAA,IAAI,CAACT,MAAL,GAAcC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAd;AAZ+B;AAAA;AAAA,qBAiBRJ,oBAAQK,UAAR,CAAmBK,IAAnB,EAAyB,SAAzB,CAjBQ;;AAAA;AAiBvBrC,cAAAA,MAjBuB;AAmB3BV,cAAAA,GAAG,CAAC4C,IAAJ,WAAYlC,MAAZ;AAnB2B;AAAA;;AAAA;AAAA;AAAA;AAuB3BV,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,gBAAAA,KAAK,EAAE,aAAEC;AAAX,eAArB;;AAvB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BlC,GA7KU;AAgLLwB,EAAAA,eAhLK,2BAgLWzD,GAhLX,EAgLgBC,GAhLhB,EAgLqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBG,cAAAA,EADwB,GACnBJ,GAAG,CAAC6B,MAAJ,CAAWzB,EADQ;AAAA;AAAA,qBAGb,qBAHa;;AAAA;AAGxBC,cAAAA,EAHwB;AAAA;AAAA,qBAKTA,EAAE,CAACC,UAAH,CAAc,SAAd,EAAyBwB,OAAzB,EALS;;AAAA;AAKxBnB,cAAAA,MALwB;AAO5BA,cAAAA,MAAM,CAACP,EAAP,GAAYO,MAAM,CAACc,GAAnB;AACA,qBAAOd,MAAM,CAACc,GAAd;AAEAxB,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAM,CAAC6C,YAAhB;;AAV4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW/B,GA3LU;AA6LLE,EAAAA,kBA7LK,8BA6Lc1D,GA7Ld,EA6LmBC,GA7LnB,EA6LwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B;AACAA,cAAAA,GAAG,CAACyB,IAAJ,CAAS;AAACO,gBAAAA,OAAO,EAAE;AAAV,eAAT;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGlC,GAhMU;AAkML0B,EAAAA,eAlMK,2BAkMY3D,GAlMZ,EAkMiBC,GAlMjB,EAkMsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzB2D,cAAAA,QAFyB,GAEd;AACXxD,gBAAAA,EAAE,EAAGJ,GAAG,CAACG,IAAJ,CAAS4C,MADH;AAEXc,gBAAAA,WAAW,EAAG7D,GAAG,CAACG,IAAJ,CAAS2D,IAFZ;AAGXR,gBAAAA,SAAS,EAAG;AAHD,eAFc;AAQzBlB,cAAAA,GARyB,GAQnBpC,GAAG,CAACqC,KAAJ,CAAUC,OARS;AAS7BsB,cAAAA,QAAQ,CAACrB,MAAT,GAAkBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAlB;AAT6B;AAAA,qBAYd,qBAZc;;AAAA;AAYzBrC,cAAAA,EAZyB;AAAA;AAAA,qBAcPA,EAAE,CAACC,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA6B;AAAEkB,gBAAAA,GAAG,EAAE,uBAASmC,QAAQ,CAACxD,EAAlB,CAAP;AAA+ByD,gBAAAA,WAAW,EAAE;AAAEE,kBAAAA,OAAO,EAAE;AAAX;AAA5C,eAA7B,CAdO;;AAAA;AAczBC,cAAAA,SAdyB;AAAA;;AAAA,oBAiBrBA,SAAS,IAAI,IAjBQ;AAAA;AAAA;AAAA;;AAAA,oBAiBI,IAAIC,KAAJ,CAAU,gCAAV,CAjBJ;;AAAA;AAAA;AAAA,qBAmBN3B,oBAAQK,UAAR,CAAmBiB,QAAnB,EAA6B,OAA7B,CAnBM;;AAAA;AAmBrBjD,cAAAA,MAnBqB;AAqBzBV,cAAAA,GAAG,CAAC4C,IAAJ,WAAYlC,MAAZ;AArByB;AAAA;;AAAA;AAAA;AAAA;AAyBzBV,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,gBAAAA,KAAK,EAAE,cAAEC;AAAX,eAArB;;AAzByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BhC,GA9NU;AAiOX;AACMiC,EAAAA,aAlOK,yBAkOUlE,GAlOV,EAkOcC,GAlOd,EAkOmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB+C,cAAAA,IADsB,GACf;AACPD,gBAAAA,MAAM,EAAG/C,GAAG,CAACG,IAAJ,CAASgE,OADX;AAEPpC,gBAAAA,OAAO,EAAG/B,GAAG,CAACG,IAAJ,CAAS4B,OAFZ;AAGPqC,gBAAAA,WAAW,EAAIC,IAAI,CAACC,GAAL,EAHR,CAGmB;;AAHnB,eADe;AAAA;AAAA,qBAOX,qBAPW;;AAAA;AAOtBjE,cAAAA,EAPsB;AAAA;AAAA;AAAA,qBAgBNA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BiE,SAA1B,CAAoCvB,IAApC,CAhBM;;AAAA;AAgBtBjB,cAAAA,OAhBsB;AAAA;AAmBdyC,cAAAA,IAnBc,GAmBP;AACPpE,gBAAAA,EAAE,EAAG4C,IAAI,CAACD,MADH;AAEPnB,gBAAAA,SAAS,EAAGG,OAAO,CAAC0C,UAFb;AAGPnB,gBAAAA,SAAS,EAAG;AAHL,eAnBO;AAyBdlB,cAAAA,GAzBc,GAyBRpC,GAAG,CAACqC,KAAJ,CAAUC,OAzBF;AA0BlBkC,cAAAA,IAAI,CAACjC,MAAL,GAAcC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAd;AA1BkB;AAAA,qBA4BZJ,oBAAQK,UAAR,CAAmB6B,IAAnB,EAAyB,OAAzB,CA5BY;;AAAA;AA8BlBvE,cAAAA,GAAG,CAACyB,IAAJ,CAAS,IAAT,EA9BkB,CA+BlB;;AA/BkB;AAAA;;AAAA;AAAA;AAAA;AAmClBzB,cAAAA,GAAG,CAAC4C,IAAJ,CAAS,sDAAT;AAnCkB,iDAoCX,KApCW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0CtB5C,cAAAA,GAAG,CAACyB,IAAJ,CAAS,KAAT,EA1CsB,CA2CtB;;AA3CsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+C7B,GAjRU;AAoRLgD,EAAAA,aApRK,yBAoRU1E,GApRV,EAoRcC,GApRd,EAoRmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBG,cAAAA,EADsB,GACjBJ,GAAG,CAAC6B,MAAJ,CAAWzB,EADM;AAAA;AAAA,qBAGX,qBAHW;;AAAA;AAGtBC,cAAAA,EAHsB;AAAA;AAAA;AAAA,qBAOHA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BwB,OAA1B,CAAkC;AAACL,gBAAAA,GAAG,EAAE,uBAASrB,EAAT;AAAN,eAAlC,CAPG;;AAAA;AAOlBO,cAAAA,MAPkB;AAStBA,cAAAA,MAAM,CAACP,EAAP,GAAYO,MAAM,CAACc,GAAnB;AACA,qBAAOd,MAAM,CAACc,GAAd;AAEAxB,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;AAZsB;AAAA;;AAAA;AAAA;AAAA;AAgBtB,kBAAIP,EAAE,IAAI,IAAV,EAAiBH,GAAG,CAACyB,IAAJ,CAAS;AAACM,gBAAAA,KAAK,EAAE;AAAR,eAAT,EAAjB,KAEM/B,GAAG,CAACyB,IAAJ,CAAS;AAACM,gBAAAA,KAAK,EAAE,cAAEC;AAAV,eAAT;;AAlBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBjC,GAxSc;AA2SL0C,EAAAA,kBA3SK,8BA2Se3E,GA3Sf,EA2SmBC,GA3SnB,EA2SwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B2E,cAAAA,SAF2B,GAEf5E,GAAG,CAAC6B,MAAJ,CAAWzB,EAFI;AAAA;AAAA,qBAGhB,qBAHgB;;AAAA;AAG3BC,cAAAA,EAH2B;AAAA;AAAA,qBAebA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BC,IAA1B,CAA+B;AAACqE,gBAAAA,SAAS,EAAE,uBAASA,SAAT;AAAZ,eAA/B,CAfa;;AAAA;AAe3BpE,cAAAA,MAf2B;AAAA;AAAA,qBAiBVA,MAAM,CAACC,OAAP,EAjBU;;AAAA;AAiB3BoE,cAAAA,OAjB2B;AAmB/B5E,cAAAA,GAAG,CAAC4C,IAAJ,CAASgC,OAAT;;AAnB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBtC,GAhUc;AAkULC,EAAAA,OAlUK,mBAkUG9E,GAlUH,EAkUQC,GAlUR,EAkUY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACf+C,cAAAA,IADe,GACRhD,GAAG,CAACG,IADI;AAEnB6C,cAAAA,IAAI,CAACM,SAAL,GAAiB,MAAjB;AACIyB,cAAAA,cAHe,GAGE/B,IAAI,CAAC+B,cAHP;AAInB,qBAAO/B,IAAI,CAAC+B,cAAZ;AAGI3C,cAAAA,GAPe,GAOTpC,GAAG,CAACqC,KAAJ,CAAUC,OAPD;AAQnBU,cAAAA,IAAI,CAACT,MAAL,GAAcC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAd;AARmB;AAAA,qBAUAJ,oBAAQK,UAAR,CAAmBK,IAAnB,EAAyB+B,cAAzB,CAVA;;AAAA;AAUfpE,cAAAA,MAVe;AAYnBV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;;AAZmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAatB,GA/UU;AAkVLqE,EAAAA,aAlVK,yBAkVUhF,GAlVV,EAkVcC,GAlVd,EAkVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B;AAEIG,cAAAA,EAHsB,GAGjBJ,GAAG,CAAC6B,MAAJ,CAAWzB,EAHM;AAAA;AAAA,qBAKX,qBALW;;AAAA;AAKtBC,cAAAA,EALsB;AAAA;AAAA;AAAA,qBAQHA,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BwB,OAA1B,CAAkC;AAACL,gBAAAA,GAAG,EAAE,uBAASrB,EAAT;AAAN,eAAlC,CARG;;AAAA;AAQlBO,cAAAA,MARkB;AAUtBA,cAAAA,MAAM,CAACP,EAAP,GAAYO,MAAM,CAACc,GAAnB;AACA,qBAAOd,MAAM,CAACc,GAAd;AAEAxB,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;AAbsB;AAAA;;AAAA;AAAA;AAAA;AAiBtB,kBAAIP,EAAE,IAAI,IAAV,EAAiBH,GAAG,CAACyB,IAAJ,CAAS;AAACM,gBAAAA,KAAK,EAAE;AAAR,eAAT,EAAjB,KAEM/B,GAAG,CAACyB,IAAJ,CAAS;AAACM,gBAAAA,KAAK,EAAE,cAAEC;AAAV,eAAT;;AAnBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBjC,GAxWc;AA4WLgD,EAAAA,cA5WK,0BA4WWjF,GA5WX,EA4WeC,GA5Wf,EA4WoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB+C,cAAAA,IADuB,GAChBhD,GAAG,CAACG,IADY,EAG3B;;AACA6C,cAAAA,IAAI,CAACkC,KAAL,GAAalF,GAAG,CAACmF,GAAJ,CAAQD,KAArB;;AAJ2B,oBAMvBlC,IAAI,CAACoC,WAAL,IAAoBpC,IAAI,CAACqC,WANF;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOJC,iBAAKC,kBAAL,CAAwBvC,IAAxB,CAPI;;AAAA;AAOnBrC,cAAAA,MAPmB;;AAUvB,kBAAIA,MAAJ,EAAY;AACRV,gBAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAACI,kBAAAA,MAAM,EAAE;AAAT,iBAArB;AACH,eAFD,MAGK;AACDhD,gBAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,kBAAAA,KAAK,EAAE;AAAT,iBAArB;AACH;;AAfsB;AAAA;;AAAA;AAmBvB/B,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAACM,gBAAAA,KAAK,EAAG;AAAT,eAArB;;AAnBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBlC,GAjYc;AAoYLwD,EAAAA,KApYK,iBAoYCxF,GApYD,EAoYKC,GApYL,EAoYU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACbuE,cAAAA,IADa,GACNxE,GAAG,CAACG,IADE;AAAA;AAAA;AAAA,qBAIMmF,iBAAKG,gBAAL,CAAsBjB,IAAI,CAACU,KAA3B,EAAkCV,IAAI,CAACkB,QAAvC,CAJN;;AAAA;AAIT/E,cAAAA,MAJS;AAKbV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;AALa;AAAA;;AAAA;AAAA;AAAA;AAQbV,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAACM,gBAAAA,KAAK,EAAE,cAAEC;AAAV,eAArB;;AARa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUxB,GA9Yc;AAiZL0D,EAAAA,YAjZK,wBAiZS3F,GAjZT,EAiZcC,GAjZd,EAiZmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB2F,cAAAA,OADsB,GACZ5F,GAAG,CAACG,IADQ;AAAA;AAAA;AAAA,qBAIFmF,iBAAKO,QAAL,CAAcD,OAAd,CAJE;;AAAA;AAIlBE,cAAAA,OAJkB;;AAAA,oBAQlBF,OAAO,CAACG,YAAR,MAA0B,gBAAgB,YAA1C,CARkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQyDzD,oBAAQ0D,UAAR,CAAmBF,OAAnB,CARzD;;AAAA;AAQ0CnF,cAAAA,MAR1C;;AAAA;AAStBU,cAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAV,cAAAA,GAAG,CAACyB,IAAJ,CAAS;AAACuB,gBAAAA,MAAM,yBAAkBtC,MAAlB;AAAP,eAAT;AAVsB;AAAA;;AAAA;AAAA;AAAA;AAatBV,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AACjBM,gBAAAA,KAAK,EAAE,cAAEC;AADQ,eAArB;;AAbsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBjC,GAlac;AAqaLgE,EAAAA,oBAraK,gCAqaiBjG,GArajB,EAqasBC,GAratB,EAqa4B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC/B+C,cAAAA,IAD+B,GACxBhD,GAAG,CAACG,IADoB;AAAA;AAAA,qBAEpB,qBAFoB;;AAAA;AAE/BE,cAAAA,EAF+B;AAU/B6F,cAAAA,UAV+B,GAUlB;AACTC,gBAAAA,cAAc,EAAG,EADR;AAETC,gBAAAA,eAAe,EAAG,EAFT;AAGTC,gBAAAA,cAAc,EAAI;AAHT,eAVkB,EAenC;;AACIC,cAAAA,OAhB+B,GAgBrB9D,MAAM,CAAC8D,OAAP,CAAeJ,UAAf,CAhBqB;AAAA,qDAkBFI,OAAO,CAACA,OAAR,EAlBE;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,4DAkB1BC,KAlB0B,qEAkBlBC,GAlBkB,oBAkBbC,KAlBa;AAoB3BC,cAAAA,SApB2B,GAoBf1D,IAAI,CAAC2D,SAAL,CAAeJ,KAAf,CApBe;AAsB/B;AACA;AACA;AACA;AACA;AAEA;AACA;;AACAC,cAAAA,GAAG,GAAG,iBAAiBA,GAAvB;AA9B+B;AAAA,qBAgChBnG,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BsG,SAA1B,CAAqC;AAAEnF,gBAAAA,GAAG,EAAE,uBAASiF,SAAT;AAAP,eAArC,EAAkE;AAAEG,gBAAAA,SAAS,sBAAKL,GAAL,EAAYxD,IAAI,CAACwB,IAAjB;AAAX,eAAlE,CAhCgB;;AAAA;AAgC/B7D,cAAAA,MAhC+B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAqCnCV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;;AArCmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsC1C,GA3cc;AA8cLmG,EAAAA,iBA9cK,6BA8cc9G,GA9cd,EA8cmBC,GA9cnB,EA8cyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5B8G,cAAAA,WAF4B,GAEd/G,GAAG,CAACG,IAFU;AAGhC,qBAAO4G,WAAW,CAAC3G,EAAnB;;AAHgC,mBAQ5B2G,WAR4B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQCzE,oBAAQ0E,aAAR,CAAsBD,WAAtB,CARD;;AAAA;AAQf9F,cAAAA,OARe;AAAA;AAAA;;AAAA;AASnBA,cAAAA,OAAO,GAAG,EAAV;;AATmB;AAWhC;AAGAA,cAAAA,OAAO,CAACb,EAAR,GAAaJ,GAAG,CAAC6B,MAAJ,CAAWzB,EAAxB;AACAa,cAAAA,OAAO,CAACqC,SAAR,GAAoByD,WAAW,CAACzD,SAAhC,CAfgC,CAiBhC;;AACIlB,cAAAA,GAlB4B,GAkBtBpC,GAAG,CAACqC,KAAJ,CAAUC,OAlBY;AAmBhCrB,cAAAA,OAAO,CAACsB,MAAR,GAAiBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAAjB;AAEArB,cAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AArBgC;AAAA,qBAuBXqB,oBAAQK,UAAR,CAAmB1B,OAAnB,EAA4B,UAA5B,CAvBW;;AAAA;AAuB5B2B,cAAAA,QAvB4B;AAyBhC3C,cAAAA,GAAG,CAAC4C,IAAJ,CAASD,QAAT;;AAzBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BvC,GAxec;AA4eLqE,EAAAA,iBA5eK,6BA4ecjH,GA5ed,EA4emBC,GA5enB,EA4eyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BiH,cAAAA,WAD4B,GACdlH,GAAG,CAACG,IADU;AAEhC,qBAAO+G,WAAW,CAACzF,GAAnB;AACAyF,cAAAA,WAAW,CAAC9G,EAAZ,GAAiBJ,GAAG,CAAC6B,MAAJ,CAAWzB,EAA5B;AAEIgC,cAAAA,GAL4B,GAKtBpC,GAAG,CAACqC,KAAJ,CAAUC,OALY;AAMhC4E,cAAAA,WAAW,CAAC3E,MAAZ,GAAqBC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,QAAjB,EAArB;AANgC;AAAA,qBAQXJ,oBAAQK,UAAR,CAAmBuE,WAAnB,EAAgC,UAAhC,CARW;;AAAA;AAQ5BtE,cAAAA,QAR4B;AAUhC3C,cAAAA,GAAG,CAAC4C,IAAJ,CAASD,QAAT;;AAVgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWvC,GAvfc;AAyfLuE,EAAAA,WAzfK,uBAyfQnH,GAzfR,EAyfaC,GAzfb,EAyfmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBmH,cAAAA,KAFsB,GAEdpH,GAAG,CAACoH,KAFU;AAGtBC,cAAAA,QAHsB,GAGX,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,YAArC,EAAmD,OAAnD,EAA4D,cAA5D,CAHW;AAAA;AAAA,qBAKP/E,oBAAQgF,MAAR,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC,OAAhC,CALO;;AAAA;AAKtB1G,cAAAA,MALsB;AAQ1BV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;;AAR0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS7B,GAlgBU;AAqgBL4G,EAAAA,WArgBK,uBAqgBQvH,GArgBR,EAqgBaC,GArgBb,EAqgBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBmH,cAAAA,KAFsB,GAEdpH,GAAG,CAACoH,KAFU;AAGtBC,cAAAA,QAHsB,GAGX,CAAC,SAAD,EAAY,cAAZ,EAA4B,UAA5B,EAAwC,qBAAxC,CAHW;AAAA;AAAA,qBAKP/E,oBAAQgF,MAAR,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC,UAAhC,CALO;;AAAA;AAKtB1G,cAAAA,MALsB;AAO1BV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;;AAP0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ7B,GA7gBU;AAihBL6G,EAAAA,WAjhBK,uBAihBQxH,GAjhBR,EAihBaC,GAjhBb,EAihBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBmH,cAAAA,KAFqB,GAEbpH,GAAG,CAACoH,KAFS;AAGrBC,cAAAA,QAHqB,GAGV,CAAC,SAAD,EAAY,UAAZ,CAHU;AAAA;AAAA,qBAKN/E,oBAAQgF,MAAR,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC,UAAhC,CALM;;AAAA;AAKrB1G,cAAAA,MALqB;AAOzBV,cAAAA,GAAG,CAACyB,IAAJ,CAASf,MAAT;;AAPyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhC,GAzhBc;AA4hBL8G,EAAAA,UA5hBK,sBA4hBOzH,GA5hBP,EA4hBYC,GA5hBZ,EA4hBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErB8G,cAAAA,WAFqB,GAEP/G,GAAG,CAACG,IAFG,EAIzB;;AAJyB;AAAA,qBAKLmC,oBAAQ0E,aAAR,CAAsBD,WAAtB,CALK;;AAAA;AAKrB9F,cAAAA,OALqB;AAOzB;AACAA,cAAAA,OAAO,CAACyG,OAAR,GAAkB,uIAAlB;AACAzG,cAAAA,OAAO,CAAC8B,MAAR,GAAiBgE,WAAW,CAAChE,MAA7B;AACA9B,cAAAA,OAAO,CAAC0G,KAAR,GAAgB,CAAhB;AAVyB;AAAA;AAAA,qBAcFrF,oBAAQsF,QAAR,CAAiB3G,OAAjB,EAA0B,UAA1B,CAdE;;AAAA;AAcjBN,cAAAA,MAdiB;AAgBrBV,cAAAA,GAAG,CAAC4C,IAAJ,4BAA6BlC,MAA7B;AAhBqB;AAAA;;AAAA;AAAA;AAAA;AAoBrBV,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,gBAAAA,KAAK,EAAE,cAAEC;AAAX,eAArB;;AApBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsB5B,GAljBU;AAsjBL4F,EAAAA,aAtjBK,yBAsjBU7H,GAtjBV,EAsjBeC,GAtjBf,EAsjBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BoB,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACIwG,cAAAA,WAFwB,GAEV9H,GAAG,CAACG,IAFM,EAI5B;AACA;AAEA;;AACA2H,cAAAA,WAAW,CAACJ,OAAZ,GAAsB,uIAAtB,CAR4B,CAU5B;;AACAI,cAAAA,WAAW,CAACC,gBAAZ,GAA+B,IAA/B;AAX4B;AAAA;AAAA,qBAgBFzF,oBAAQsF,QAAR,CAAiBE,WAAjB,EAA8B,UAA9B,CAhBE;;AAAA;AAgBpBlD,cAAAA,SAhBoB;AAmBxB3E,cAAAA,GAAG,CAAC4C,IAAJ,4BAA6B+B,SAA7B;AAnBwB;AAAA;;AAAA;AAAA;AAAA;AAuBxB3E,cAAAA,GAAG,CAACgD,MAAJ,CAAW,GAAX,EAAgBvB,IAAhB,CAAqB;AAAEM,gBAAAA,KAAK,EAAE,cAAEC;AAAX,eAArB;;AAvBwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyB/B,GA/kBU;AAmlBL+F,EAAAA,IAnlBK,gBAmlBChI,GAnlBD,EAmlBMC,GAnlBN,EAmlBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEJ,qBAFI;;AAAA;AAEfI,cAAAA,EAFe;AAGf4H,cAAAA,YAHe,GAGA,EAHA;AAAA;AAAA,qBAKkB5H,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0B4H,cAA1B,EALlB;;AAAA;AAKnBD,cAAAA,YAAY,CAACE,eALM;AAAA;AAAA,qBAMkB9H,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0B4H,cAA1B,EANlB;;AAAA;AAMnBD,cAAAA,YAAY,CAACG,eANM;AAAA;AAAA,qBAOkB/H,EAAE,CAACC,UAAH,CAAc,OAAd,EAAuB4H,cAAvB,CAAsC;AAAEnC,gBAAAA,YAAY,EAAG;AAAjB,eAAtC,CAPlB;;AAAA;AAOnBkC,cAAAA,YAAY,CAACI,eAPM;AAWnBpI,cAAAA,GAAG,CAACyB,IAAJ,CAASuG,YAAT;;AAXmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYtB;AA/lBU,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db.js'\r\nimport auth from './auth.js'\r\nimport { ObjectID } from 'mongodb'\r\nimport methods from './methods.js'\r\n\r\n\r\nexport default {\r\n\r\n    async getChosenProjects (req,res) {\r\n        let studentID = req.body.id\r\n\r\n        let db = await connect()\r\n        let cursor = await db.collection('projects').find()\r\n        let projects = await cursor.toArray()\r\n\r\n        let result = [];\r\n        \r\n        let attributes = ['first_priority', 'second_priority', 'third_priority']\r\n\r\n\r\n        attributes.forEach(attribute => {\r\n            const match = projects.filter(function (project) {\r\n                let priority = undefined\r\n                \r\n                try {\r\n    \r\n                    priority = project.selected_by[attribute]    \r\n                    console.log(priority)\r\n                    if (priority.includes(studentID)){\r\n                        result.push(project._id);\r\n                        }\r\n    \r\n                }\r\n    \r\n                catch { }\r\n            })\r\n        })\r\n        console.log(result)\r\n\r\n        res.json(result)\r\n\r\n    },\r\n\r\n\r\n    //slicna kao neke funkcije, spojiti?\r\n    async getJournal (req,res) {\r\n        let journalID = req.params.id\r\n\r\n        let db = await connect()\r\n       \r\n        try{\r\n            let journal = await db.collection(\"journals\").findOne({_id: ObjectID(journalID)})\r\n            res.json(journal)\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e)\r\n            res.json({error: e.message})\r\n        }\r\n    },\r\n\r\n\r\n//     //identicna kao getOnePartner, spojiti?\r\n//     async getOneStudent (req,res) {\r\n//         //ne vraca gresku kad je id nepostojeci\r\n\r\n//         let id = req.params.id\r\n//         //let id = req.body.id\r\n\r\n//         let db = await connect()\r\n\r\n//         try{\r\n//             let result = await db.collection(\"users\").findOne({_id: ObjectID(id)})\r\n\r\n//             result.id = result._id\r\n//             delete result._id, \r\n//             delete result.password\r\n\r\n//             res.json(result)\r\n//         }\r\n\r\n//         catch(e){\r\n//             if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n//             else  res.json({error: e.message})\r\n//         }\r\n        \r\n// },\r\n\r\n    // id usera svugdje traziti preko req.jwt!!?\r\n    async changeUserInfo (req, res)  {\r\n\r\n        let userInfo = req.body\r\n        let obj = req.route.methods\r\n\r\n        userInfo.method = Object.keys(obj).toString()\r\n\r\n        let response = await methods.changeInfo(userInfo, 'users')\r\n\r\n        res.send(response)\r\n    },\r\n\r\n    //skoro identicna kao getonePartner skoro, spojiti u jednu\r\n    async checkIfPartner(req, res) {\r\n            let id = req.body._id\r\n\r\n            let db = await connect()\r\n            const data = await db.collection(\"partners\").findOne({userID : ObjectID(id)});\r\n\r\n            if(!data)  res.status(401).json({ error: 'user is not a partner'})\r\n\r\n            res.json (data);\r\n        \r\n    },\r\n\r\n    async getTemplate(req, res) {\r\n        let db = await connect()\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n\r\n        res.json(result.template)\r\n\r\n    },\r\n\r\n    async uploadTemplate(req, res) {\r\n        //poboljsati\r\n\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n\r\n        let data = {\r\n            template : req.body,\r\n            id : content._id,\r\n            updateDoc : 'true'\r\n        }\r\n\r\n        let obj = req.route.methods\r\n        data.method = Object.keys(obj).toString()\r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing template.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n    async changeInstructions(req, res) {\r\n        //poboljsati\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n\r\n        let data = {\r\n            instructions : req.body,\r\n            id : content._id,\r\n            updateDoc : 'true'\r\n        }\r\n\r\n        let obj = req.route.methods\r\n        data.method = Object.keys(obj).toString()\r\n        \r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing instructions.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n\r\n    async getInstructions(req, res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n        result.id = result._id\r\n        delete result._id\r\n\r\n        res.json(result.instructions)\r\n    },\r\n\r\n    async getApprovedProject(req, res) {\r\n        //testna za sad\r\n        res.json({message: 'here is your approved project'})\r\n    },\r\n\r\n    async applicationForm (req, res) {\r\n\r\n        let formData = {\r\n            id : req.body.userID,\r\n            application : req.body.form,\r\n            updateDoc : 'true'\r\n        }\r\n\r\n        let obj = req.route.methods\r\n        formData.method = Object.keys(obj).toString()\r\n        \r\n\r\n        let db = await connect()\r\n\r\n        let appExists = await db.collection('users').find( { _id: ObjectID(formData.id) , application: { $exists: true} } )\r\n\r\n        try{\r\n            if (appExists == true) throw new Error(\"Error accured during inserting\")\r\n            \r\n            let result = await methods.changeInfo(formData, 'users')\r\n            \r\n            res.send(`${result} at inserting application.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n    \r\n    },\r\n\r\n\r\n    //refaktorirati\r\n    async submitJournal (req,res) {\r\n        let data = {\r\n            userID : req.body.user_id,\r\n            journal : req.body.journal,\r\n            upload_date :  Date.now() // Date(Date.now())\r\n        }\r\n\r\n        let db = await connect()\r\n        let journal\r\n\r\n        try{\r\n            /* ako želimo da korisnik ne može više puta uploadati dnevnik */\r\n            //let checkUser = await db.collection('users').findOne({_id : ObjectID(data.userID)})\r\n            \r\n            //if (checkUser.journalID != false) throw new Error(\"Error accured during inserting\")\r\n\r\n            journal = await db.collection('journals').insertOne(data)\r\n            \r\n            try {\r\n                let user = {\r\n                    id : data.userID,\r\n                    journalID : journal.insertedId,\r\n                    updateDoc : 'true'\r\n                }\r\n\r\n                let obj = req.route.methods\r\n                user.method = Object.keys(obj).toString()\r\n\r\n                await methods.changeInfo(user, 'users')\r\n\r\n                res.json(true)\r\n                //res.json({message: 'upload successful'})\r\n            }\r\n\r\n            catch(e){\r\n                res.send('Error accured during connecting journal ID with user')\r\n                return false;\r\n            }\r\n\r\n        }\r\n        \r\n        catch(e){\r\n            res.json(false)\r\n            //res.json({error:e.message })\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n    async getOneProject (req,res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n\r\n        try{\r\n            let result = await db.collection(\"projects\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async getPartnerProjects (req,res) {\r\n\r\n        let partnerID = req.params.id\r\n        let db = await connect()\r\n\r\n        //nađi projekte koje pripadaju određenom poslodavcu\r\n        /*\r\n        let find_IDs= await db.collection(\"partners\").find({_id: ObjectID(id)})\r\n        let result =  await find_IDs.toArray()\r\n\r\n        let filtered_IDs = result[0].projects\r\n\r\n        let cursor2 = await db.collection(\"projects\").find({_id: {$in: filtered_IDs}})\r\n        let finalResult =  await cursor2.toArray()\r\n        */\r\n        let cursor= await db.collection(\"projects\").find({partnerID: ObjectID(partnerID)})\r\n\r\n        let results =  await cursor.toArray()\r\n        \r\n        res.send(results)\r\n\r\n},\r\n\r\n    async addView(req, res){\r\n        let data = req.body\r\n        data.updateDoc = 'true'\r\n        let collectionName = data.collectionName\r\n        delete data.collectionName\r\n        \r\n\r\n        let obj = req.route.methods\r\n        data.method = Object.keys(obj).toString()\r\n\r\n        let result = await methods.changeInfo(data, collectionName)\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getOnePartner (req,res) {\r\n        //ne vraca gresku kad je id nepostojeci\r\n\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        try{\r\n            let result = await db.collection(\"partners\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n        \r\n},\r\n\r\n\r\n\r\n    async changePassword (req,res) {\r\n        let data = req.body\r\n        \r\n        //dolazi iz metode isValidUser\r\n        data.email = req.jwt.email\r\n\r\n        if (data.newPassword && data.oldPassword){\r\n            let result = await auth.changeUserPassword(data)\r\n            \r\n\r\n            if (result) {\r\n                res.status(201).send({status: 'Success'});\r\n            } \r\n            else {\r\n                res.status(500).json({ error: 'Server error' });\r\n            }\r\n        }\r\n\r\n        else{\r\n            res.status(400).json({error : \"Invalid input data\"})\r\n        }\r\n},\r\n\r\n\r\n    async login(req,res) {\r\n        let user = req.body\r\n\r\n        try{\r\n            let result = await auth.authenticateUser(user.email, user.password)\r\n            res.json(result)\r\n        }\r\n        catch(e){\r\n            res.status(401).json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async registration (req, res) { \r\n        let newUser = req.body;\r\n\r\n        try {\r\n            let partner = await auth.register(newUser);\r\n            let result \r\n\r\n            //dodavanje korisnika automatski u partnere čim se registrira\r\n            if (newUser.account_type === ('poslodavac' || 'Poslodavac'))    result = await methods.addPartner(partner)\r\n            console.log(result)\r\n            res.json({status: `user with id ${result} added`})\r\n\r\n        } catch (e) {\r\n            res.status(500).json({\r\n                error: e.message,\r\n            });\r\n        }\r\n},\r\n\r\n\r\n    async submitChosenProjects (req, res)  {\r\n        let data = req.body\r\n        let db = await connect()\r\n\r\n        //ovo bi islo s .map?\r\n\r\n        // {first_priority: [id1, id2, id2], second_priority:[...], third_priority:[...]}\r\n        \r\n        let result\r\n\r\n        let selectedBy = {\r\n                first_priority : [],\r\n                second_priority : [],\r\n                third_priority  : []\r\n        }\r\n        //destrukcija strukture\r\n        let entries = Object.entries(selectedBy);\r\n\r\n        for(let [index, [key, value]] of entries.entries()){\r\n\r\n            let projectID = data.selection[index]\r\n       \r\n            /* https://stackoverflow.com/questions/30969382/mongodb-object-key-with-es6-template-string  da bi bilo moguce dinamicki updejtati*/\r\n            // var attributeName\r\n            // let query = { \"_id\": projectID }\r\n            // let update = { \"$addToSet\": {} }\r\n            // update[\"$addToSet\"][attributeName] = data.user\r\n\r\n            //trik za prevariti mongo kompajler\r\n            // ili selectedBy[key] = 'selected_by. + key\r\n            key = 'selected_by.' + key\r\n\r\n            result = await db.collection('projects').updateOne( { _id: ObjectID(projectID) },{ $addToSet: { [key] : data.user }})\r\n     \r\n        }\r\n                                                                                       \r\n        \r\n        res.json(result)\r\n},\r\n\r\n\r\n    async changeProjectInfo (req, res)  {\r\n\r\n        let projectData = req.body \r\n        delete projectData.id;\r\n        let project\r\n\r\n\r\n        //ako nema podataka u body, znači da se traži delete pa inicijaliziramo prazan objekt u koji stavljamo jedino podatke potrebne za delete, inače ide update\r\n        if (projectData) project = await methods.mapAttributes(projectData)\r\n        else         project = {}\r\n\r\n        // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\r\n    \r\n\r\n        project.id = req.params.id;\r\n        project.updateDoc = projectData.updateDoc\r\n\r\n        //console.log(req.route.methods[\"put\"]) pa onda true/false\r\n        let obj = req.route.methods\r\n        project.method = Object.keys(obj).toString()\r\n\r\n        console.log(project)\r\n        \r\n        let response = await methods.changeInfo(project, 'projects')\r\n        \r\n        res.send(response)\r\n},\r\n\r\n\r\n\r\n    async changePartnerInfo (req, res)  {\r\n        let partnerInfo = req.body\r\n        delete partnerInfo._id;\r\n        partnerInfo.id = req.params.id;\r\n\r\n        let obj = req.route.methods\r\n        partnerInfo.method = Object.keys(obj).toString()\r\n\r\n        let response = await methods.changeInfo(partnerInfo, 'partners')\r\n\r\n        res.send(response)\r\n},\r\n\r\n    async getStudents (req, res)  {\r\n            \r\n        let query = req.query\r\n        let atributi = [\"name\", \"surname\", \"jmbag\", \"year\", \"technology\", \"email\", \"account_type\"] \r\n\r\n        let result = await methods.search(query, atributi, 'users')\r\n        \r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getProjects (req, res)  {\r\n        \r\n        let query = req.query\r\n        let atributi = [\"company\", \"technologies\", \"location\", \"project_description\"] \r\n\r\n        let result = await methods.search(query, atributi, 'projects')\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n\r\n    async getPartners (req, res) {\r\n\r\n        let query = req.query\r\n        let atributi = [\"company\", \"about_us\"] \r\n\r\n        let result = await methods.search(query, atributi, 'partners')\r\n\r\n        res.json(result)\r\n},\r\n\r\n\r\n    async addProject (req, res)  {\r\n\r\n        let projectData = req.body\r\n \r\n        // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\r\n        let project = await methods.mapAttributes(projectData)\r\n        \r\n        //slika je hardcodana jer nema bas smisla imati custom sliku projekta\r\n        project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        project.userID = projectData.userID\r\n        project.views = 0\r\n        \r\n        try{\r\n            \r\n            let result = await methods.pushData(project, 'projects')\r\n            \r\n            res.send(`project with id  ${result} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n\r\n    async createPartner (req, res)  {\r\n        console.log('tu samm')\r\n        let partnerData = req.body\r\n        \r\n        // ako će trebati kad stjepan implementira\r\n        //let project = await methods.mapAttributes(projectData)\r\n        \r\n        //dok stjepan ne implementira ce biti ovako hardcodano\r\n        partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        \r\n        //za raspoznavanje koji partneri su se sami kreirali, a koji ne\r\n        partnerData.created_by_admin = true\r\n        \r\n\r\n        try{\r\n            \r\n            let partnerID = await methods.pushData(partnerData, 'partners')\r\n            \r\n            \r\n            res.send(`partner with id  ${partnerID} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n    \r\n\r\n\r\n    async home (req, res)  {\r\n\r\n        let db = await connect()\r\n        let numberOfDocs = {}\r\n\r\n        numberOfDocs.projectsCounter = await db.collection(\"projects\").countDocuments();\r\n        numberOfDocs.partnersCounter = await db.collection(\"partners\").countDocuments();\r\n        numberOfDocs.studentsCounter = await db.collection(\"users\").countDocuments({ account_type : 'Student'});\r\n\r\n        \r\n\r\n        res.json(numberOfDocs)\r\n    }\r\n\r\n\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1598120077109
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//modul za pristup bazi\nvar connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'; //služi za pristup prema bazi na navedenom frameworku\n\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null; //nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\n// eksportamo Promise koji resolva na konekciju\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    // ako smo inicijalizirali bazu i klijent je još uvijek spojen\n    if (db && client.isConnected()) {\n      resolve(db);\n    } else {\n      client.connect(function (err) {\n        if (err) {\n          reject('Spajanje na bazu nije uspjelo:' + err);\n        } else {\n          console.log('Database connected successfully!');\n          db = client.db('moja_praksa');\n          resolve(db);\n        }\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtBQUdBLElBQUlBLGlCQUFpQixHQUFHLGdHQUF4QixDLENBR0E7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHLElBQUlDLG9CQUFNQyxXQUFWLENBQXNCSCxpQkFBdEIsRUFBd0M7QUFDakRJLEVBQUFBLGVBQWUsRUFBRSxJQURnQztBQUVqREMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGNkIsQ0FBeEMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFULEMsQ0FFQTtBQUNBO0FBRUE7O2VBQ2Usb0JBQU07QUFDakIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDO0FBQ0EsUUFBSUgsRUFBRSxJQUFJTCxNQUFNLENBQUNTLFdBQVAsRUFBVixFQUFnQztBQUM1QkYsTUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSCxLQUZELE1BRU87QUFDSEwsTUFBQUEsTUFBTSxDQUFDVSxPQUFQLENBQWUsVUFBQ0MsR0FBRCxFQUFTO0FBQ3BCLFlBQUlBLEdBQUosRUFBUztBQUNMSCxVQUFBQSxNQUFNLENBQUMsbUNBQW1DRyxHQUFwQyxDQUFOO0FBQ0gsU0FGRCxNQUVPO0FBQ0hDLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0FSLFVBQUFBLEVBQUUsR0FBR0wsTUFBTSxDQUFDSyxFQUFQLENBQVUsYUFBVixDQUFMO0FBQ0FFLFVBQUFBLE9BQU8sQ0FBQ0YsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0g7QUFDSixHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcbW9qYV9wcmFrc2FcXG1vamFfcHJha3NhX2JhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy9tb2R1bCB6YSBwcmlzdHVwIGJhemlcclxuaW1wb3J0IG1vbmdvIGZyb20gJ21vbmdvZGInXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSAnbW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBmby1jbHVzdGVyLmIxcjJnLm1vbmdvZGIubmV0L21vamFfcHJha3NhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSdcclxuXHJcblxyXG4vL3NsdcW+aSB6YSBwcmlzdHVwIHByZW1hIGJhemkgbmEgbmF2ZWRlbm9tIGZyYW1ld29ya3VcclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZyx7XHJcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGw7XHJcblxyXG4vL25ha29uIHNwYWphbmphIHZyYcSHYW1vIGRvYml2ZW51IGluc3RhbmN1IGJhemUgb3N0YWxpbSBtb2R1bGltYSBrb2ppIHRvIHRyZWJhanVcclxuLy9leHBvcnRhbW8gYXNpbmtyb251IGZ1bmtjaWp1IGtvamEgbmUgcHJpbWEgbmkgamVkYW4gcGFyYW1ldGFyXHJcblxyXG4vLyBla3Nwb3J0YW1vIFByb21pc2Uga29qaSByZXNvbHZhIG5hIGtvbmVrY2lqdVxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIC8vIGFrbyBzbW8gaW5pY2lqYWxpemlyYWxpIGJhenUgaSBrbGlqZW50IGplIGpvxaEgdXZpamVrIHNwb2plblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSkge1xyXG4gICAgICAgICAgICByZXNvbHZlKGRiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdTcGFqYW5qZSBuYSBiYXp1IG5pamUgdXNwamVsbzonICsgZXJyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoJ21vamFfcHJha3NhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAIA,iBAAiB,GAAG,gGAAxB,C,CAGA;;AACA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAwC;AACjDI,EAAAA,eAAe,EAAE,IADgC;AAEjDC,EAAAA,kBAAkB,EAAE;AAF6B,CAAxC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT,C,CAEA;AACA;AAEA;;eACe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAAgC;AAC5BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACU,OAAP,CAAe,UAACC,GAAD,EAAS;AACpB,YAAIA,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAAC,mCAAmCG,GAApC,CAAN;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAR,UAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,aAAV,CAAL;AACAE,UAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,OARD;AASH;AACJ,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//modul za pristup bazi\r\nimport mongo from 'mongodb'\r\n\r\nlet connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'\r\n\r\n\r\n//služi za pristup prema bazi na navedenom frameworku\r\nlet client = new mongo.MongoClient(connection_string,{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n})\r\n\r\nlet db = null;\r\n\r\n//nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\r\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\r\n\r\n// eksportamo Promise koji resolva na konekciju\r\nexport default () => {\r\n    return new Promise((resolve, reject) => {\r\n        // ako smo inicijalizirali bazu i klijent je još uvijek spojen\r\n        if (db && client.isConnected()) {\r\n            resolve(db);\r\n        } else {\r\n            client.connect((err) => {\r\n                if (err) {\r\n                    reject('Spajanje na bazu nije uspjelo:' + err);\r\n                } else {\r\n                    console.log('Database connected successfully!');\r\n                    db = client.db('moja_praksa');\r\n                    resolve(db);\r\n                }\r\n            });\r\n        }\r\n    });\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1594283075909
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          db.collection('users').createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  register: function register(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _i, _Object$entries, _Object$entries$_i, key, value, db, partner, user, insertResult;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _i = 0, _Object$entries = Object.entries(userData);\n\n            case 1:\n              if (!(_i < _Object$entries.length)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n\n              if (value) {\n                _context2.next = 6;\n                break;\n              }\n\n              res.json({\n                status: 'Missing data'\n              });\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _i++;\n              _context2.next = 1;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return (0, _db[\"default\"])();\n\n            case 11:\n              db = _context2.sent;\n              partner = {};\n              _context2.t0 = userData.email;\n              _context2.next = 16;\n              return _bcrypt[\"default\"].hash(userData.password, 8);\n\n            case 16:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = Date.now();\n              user = {\n                email: _context2.t0,\n                password: _context2.t1,\n                date_created: _context2.t2\n              };\n\n              if (userData.jmbag) {\n                user.account_type = 'Student', user.jmbag = userData.jmbag, user.name = userData.name, user.surname = userData.surname, user.technology = userData.technology;\n                user.year = userData.year;\n                user.journalID = false;\n              } else {\n                user.account_type = 'Poslodavac', partner.company = userData.name;\n                partner.technology = userData.technology, partner.adress = userData.adress, partner.about_us = userData.about_us, partner.website = userData.website, partner.date_created = Date.now();\n                partner.contact_email = userData.contact_email, partner.contact_number = userData.telephone_number;\n                partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80';\n              }\n\n              _context2.prev = 20;\n              _context2.next = 23;\n              return db.collection('users').insertOne(user);\n\n            case 23:\n              insertResult = _context2.sent;\n\n              if (!(insertResult && insertResult.insertedId)) {\n                _context2.next = 28;\n                break;\n              }\n\n              delete user.password;\n              partner.userID = (0, _mongodb.ObjectID)(insertResult.insertedId);\n              return _context2.abrupt(\"return\", partner);\n\n            case 28:\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t3 = _context2[\"catch\"](20);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 34;\n                break;\n              }\n\n              throw new Error(\"User already exists\");\n\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[20, 30]]);\n    }))();\n  },\n  authenticateUser: function authenticateUser(email, password) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"users\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              _context3.t0 = user && user.password;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(password, user.password);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 18;\n                break;\n              }\n\n              //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \n              //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\n              //naš token sadrži sve podatke o useru\n              //password nije potrebno spremati u token jer smo ga već provjerili\n              delete user.password;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              user.token = token;\n              return _context3.abrupt(\"return\", user);\n\n            case 18:\n              throw new Error('Cannot authenticate');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  isValidUser: function isValidUser(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var authorization, type, token;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              authorization = req.headers.authorization.split(' ');\n              type = authorization[0];\n              token = authorization[1];\n\n              if (!(type != 'Bearer')) {\n                _context4.next = 9;\n                break;\n              }\n\n              //console.log('type:' + type)\n              res.status(401).send();\n              return _context4.abrupt(\"return\", false);\n\n            case 9:\n              //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\n              //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\n              req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n              return _context4.abrupt(\"return\", next());\n\n            case 11:\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 13]]);\n    }))();\n  },\n  isStudent: function isStudent(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context5.prev = 1;\n\n              if (!(accountType === 'Student')) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", next());\n\n            case 6:\n              //fali jos return false u else ako nece funkcionirati\n              res.status(401).send();\n\n            case 7:\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", res.status(401).send());\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9]]);\n    }))();\n  },\n  isPartner: function isPartner(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context6.prev = 1;\n\n              if (!(accountType === 'Poslodavac' || accountType === 'Admin')) {\n                _context6.next = 9;\n                break;\n              }\n\n              if (!(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE'))) {\n                _context6.next = 6;\n                break;\n              }\n\n              res.status(401).send();\n              return _context6.abrupt(\"return\", false);\n\n            case 6:\n              return _context6.abrupt(\"return\", next());\n\n            case 9:\n              res.status(401).send();\n\n            case 10:\n              return _context6.abrupt(\"return\", false);\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", res.status(401).send());\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 13]]);\n    }))();\n  },\n  changeUserPassword: function changeUserPassword(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var db, user, newPasswordTransformed, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context7.sent;\n              _context7.next = 5;\n              return db.collection(\"users\").findOne({\n                email: userData.email\n              });\n\n            case 5:\n              user = _context7.sent;\n              _context7.t0 = user && user.password;\n\n              if (!_context7.t0) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 10;\n              return _bcrypt[\"default\"].compare(userData.oldPassword, user.password);\n\n            case 10:\n              _context7.t0 = _context7.sent;\n\n            case 11:\n              if (!_context7.t0) {\n                _context7.next = 19;\n                break;\n              }\n\n              _context7.next = 14;\n              return _bcrypt[\"default\"].hash(userData.newPassword, 8);\n\n            case 14:\n              newPasswordTransformed = _context7.sent;\n              _context7.next = 17;\n              return db.collection('users').updateOne({\n                _id: user._id\n              }, {\n                $set: {\n                  password: newPasswordTransformed\n                }\n              });\n\n            case 17:\n              result = _context7.sent;\n              return _context7.abrupt(\"return\", result.modifiedCount == 1);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZGIiLCJjb2xsZWN0aW9uIiwiY3JlYXRlSW5kZXgiLCJlbWFpbCIsInVuaXF1ZSIsInJlZ2lzdGVyIiwidXNlckRhdGEiLCJPYmplY3QiLCJlbnRyaWVzIiwia2V5IiwidmFsdWUiLCJyZXMiLCJqc29uIiwic3RhdHVzIiwicGFydG5lciIsImJjcnlwdCIsImhhc2giLCJwYXNzd29yZCIsIkRhdGUiLCJub3ciLCJ1c2VyIiwiZGF0ZV9jcmVhdGVkIiwiam1iYWciLCJhY2NvdW50X3R5cGUiLCJuYW1lIiwic3VybmFtZSIsInRlY2hub2xvZ3kiLCJ5ZWFyIiwiam91cm5hbElEIiwiY29tcGFueSIsImFkcmVzcyIsImFib3V0X3VzIiwid2Vic2l0ZSIsImNvbnRhY3RfZW1haWwiLCJjb250YWN0X251bWJlciIsInRlbGVwaG9uZV9udW1iZXIiLCJpbWdfdXJsIiwiaW5zZXJ0T25lIiwiaW5zZXJ0UmVzdWx0IiwiaW5zZXJ0ZWRJZCIsInVzZXJJRCIsImNvZGUiLCJFcnJvciIsImF1dGhlbnRpY2F0ZVVzZXIiLCJmaW5kT25lIiwiY29tcGFyZSIsInRva2VuIiwiand0Iiwic2lnbiIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiYWxnb3JpdGhtIiwiZXhwaXJlc0luIiwiaXNWYWxpZFVzZXIiLCJyZXEiLCJuZXh0IiwiYXV0aG9yaXphdGlvbiIsImhlYWRlcnMiLCJzcGxpdCIsInR5cGUiLCJzZW5kIiwidmVyaWZ5IiwiaXNTdHVkZW50IiwiYWNjb3VudFR5cGUiLCJpc1BhcnRuZXIiLCJwYXRoIiwibWV0aG9kIiwiY2hhbmdlVXNlclBhc3N3b3JkIiwib2xkUGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsIm5ld1Bhc3N3b3JkVHJhbnNmb3JtZWQiLCJ1cGRhdGVPbmUiLCJfaWQiLCIkc2V0IiwicmVzdWx0IiwibW9kaWZpZWRDb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7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QjtBQUFBO0FBQUEscUJBU1B2RSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxPQUFkLEVBQXVCdUUsU0FBdkIsQ0FDZjtBQUFFQyxnQkFBQUEsR0FBRyxFQUFFckQsSUFBSSxDQUFDcUQ7QUFBWixlQURlLEVBRWY7QUFDSUMsZ0JBQUFBLElBQUksRUFBRTtBQUNGekQsa0JBQUFBLFFBQVEsRUFBRXNEO0FBRFI7QUFEVixlQUZlLENBVE87O0FBQUE7QUFTdEJJLGNBQUFBLE1BVHNCO0FBQUEsZ0RBaUJuQkEsTUFBTSxDQUFDQyxhQUFQLElBQXdCLENBakJMOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBbUJqQztBQTFMVSxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFxtb2phX3ByYWtzYVxcbW9qYV9wcmFrc2FfYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29ubmVjdCBmcm9tICcuL2RiJ1xyXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCdcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXHJcbmltcG9ydCB7IE9iamVjdElEIH0gZnJvbSAnbW9uZ29kYidcclxuXHJcbihhc3luYyAoKSA9PiB7XHJcbiAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KCk7XHJcbiAgICBkYi5jb2xsZWN0aW9uKCd1c2VycycpLmNyZWF0ZUluZGV4KHsgZW1haWw6IDEgfSwgeyB1bmlxdWU6IHRydWUgfSk7XHJcbn0pKCk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgYXN5bmMgcmVnaXN0ZXIodXNlckRhdGEpe1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh1c2VyRGF0YSkpIHtcclxuICAgICAgICAgICAgaWYoIXZhbHVlKXtcclxuICAgICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOiAnTWlzc2luZyBkYXRhJ30pXHJcbiAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuICAgICAgICBsZXQgcGFydG5lciA9IHt9XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHVzZXIgPSB7XHJcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyRGF0YS5lbWFpbCxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXJEYXRhLnBhc3N3b3JkLCA4KSxcclxuICAgICAgICAgICAgZGF0ZV9jcmVhdGVkOiBEYXRlLm5vdygpXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgaWYodXNlckRhdGEuam1iYWcpe1xyXG4gICAgICAgICAgICB1c2VyLmFjY291bnRfdHlwZSA9ICdTdHVkZW50JyxcclxuICAgICAgICAgICAgdXNlci5qbWJhZyA9IHVzZXJEYXRhLmptYmFnLFxyXG4gICAgICAgICAgICB1c2VyLm5hbWUgPSB1c2VyRGF0YS5uYW1lLFxyXG4gICAgICAgICAgICB1c2VyLnN1cm5hbWUgPSB1c2VyRGF0YS5zdXJuYW1lLFxyXG4gICAgICAgICAgICB1c2VyLnRlY2hub2xvZ3kgPSB1c2VyRGF0YS50ZWNobm9sb2d5XHJcbiAgICAgICAgICAgIHVzZXIueWVhcj0gdXNlckRhdGEueWVhclxyXG4gICAgICAgICAgICB1c2VyLmpvdXJuYWxJRCA9IGZhbHNlXHJcbiAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICB1c2VyLmFjY291bnRfdHlwZSA9ICdQb3Nsb2RhdmFjJyxcclxuICAgICAgICAgICAgcGFydG5lci5jb21wYW55ID0gdXNlckRhdGEubmFtZVxyXG4gICAgICAgICAgICBwYXJ0bmVyLnRlY2hub2xvZ3k9IHVzZXJEYXRhLnRlY2hub2xvZ3ksXHJcbiAgICAgICAgICAgIHBhcnRuZXIuYWRyZXNzID0gdXNlckRhdGEuYWRyZXNzLFxyXG4gICAgICAgICAgICBwYXJ0bmVyLmFib3V0X3VzID0gdXNlckRhdGEuYWJvdXRfdXMsXHJcbiAgICAgICAgICAgIHBhcnRuZXIud2Vic2l0ZSA9IHVzZXJEYXRhLndlYnNpdGUsXHJcbiAgICAgICAgICAgIHBhcnRuZXIuZGF0ZV9jcmVhdGVkID0gRGF0ZS5ub3coKVxyXG4gICAgICAgICAgICBwYXJ0bmVyLmNvbnRhY3RfZW1haWwgPSB1c2VyRGF0YS5jb250YWN0X2VtYWlsLFxyXG4gICAgICAgICAgICBwYXJ0bmVyLmNvbnRhY3RfbnVtYmVyID0gdXNlckRhdGEudGVsZXBob25lX251bWJlclxyXG4gICAgICAgICAgICBwYXJ0bmVyLmltZ191cmwgPSAnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE0OTMxMTk1MDgwMjctMmI1ODRmMjM0ZDZjP2l4bGliPXJiLTEuMi4xJml4aWQ9ZXlKaGNIQmZhV1FpT2pFeU1EZDkmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz01MDAmcT04MCdcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IGluc2VydFJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuaW5zZXJ0T25lKHVzZXIpO1xyXG4gICAgICBcclxuICAgICAgICAgICAgaWYoaW5zZXJ0UmVzdWx0ICYmIGluc2VydFJlc3VsdC5pbnNlcnRlZElkKXtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB1c2VyLnBhc3N3b3JkXHJcbiAgICAgICAgICAgICAgICBwYXJ0bmVyLnVzZXJJRCA9IE9iamVjdElEKGluc2VydFJlc3VsdC5pbnNlcnRlZElkKVxyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJ0bmVyIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICBpZiAoZS5uYW1lID09XCJNb25nb0Vycm9yXCIgJiYgZS5jb2RlID09IDExMDAwKXtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVzZXIgYWxyZWFkeSBleGlzdHNcIilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gICBcclxuXHJcblxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgYXN5bmMgYXV0aGVudGljYXRlVXNlcihlbWFpbCxwYXNzd29yZCl7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcbiAgICAgICAgbGV0IHVzZXIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwidXNlcnNcIikuZmluZE9uZSh7ZW1haWwgOiBlbWFpbH0pXHJcblxyXG4gICAgICAgIC8vIHByb3ZqZXJhdmEgZGEgbGkgamUgb3ZhaiBoZXNoIHUgYmF6aSBpenZlZGVuIGl6IGNpc3RvZyBwYXNzd29yZGFcclxuICAgICAgICBpZih1c2VyICYmIHVzZXIucGFzc3dvcmQgJiYgKGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKSkpe1xyXG4gICAgICAgICAgICAvL8WhaWZyYSB6YSBwb3RwaXNpdmFuamUga29yaXNuaWthKGtyaXB0b2dyYWZza2kgcG90cGlzKSB2ZcW+ZW1vIGplIHV6IG5hxaEgYmFja2VuZCwgcyB0b20gxaFpZnJvbSBwb3RwaXN1amVtbyBcclxuICAgICAgICAgICAgLy90b2tlbmUgc3ZpaCBrb3Jpc25pa2EsIGthZCBuYW0ga29yaXNuaWsgdnJhxIdhIHRva2VuIHByb3ZqZXJhdmFtbyBkYSBsaSBqZSBvbiBwb3RwaXNhbiBzIG5hxaFvbSDFoWlmcm9tXHJcbiAgICAgICAgICAgIC8vbmHFoSB0b2tlbiBzYWRyxb5pIHN2ZSBwb2RhdGtlIG8gdXNlcnVcclxuICAgICAgICAgICAgLy9wYXNzd29yZCBuaWplIHBvdHJlYm5vIHNwcmVtYXRpIHUgdG9rZW4gamVyIHNtbyBnYSB2ZcSHIHByb3ZqZXJpbGlcclxuICAgICAgICAgICAgZGVsZXRlIHVzZXIucGFzc3dvcmRcclxuICAgICAgICAgICAgbGV0IHRva2VuID0gand0LnNpZ24odXNlciwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwge1xyXG4gICAgICAgICAgICAgICAgYWxnb3JpdGhtOiBcIkhTNTEyXCIsXHJcbiAgICAgICAgICAgICAgICBleHBpcmVzSW46IFwiMSB3ZWVrXCJcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHVzZXIudG9rZW4gPSB0b2tlblxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHVzZXIgXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgYXV0aGVudGljYXRlJylcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBhc3luYyBpc1ZhbGlkVXNlcihyZXEscmVzLCBuZXh0KXtcclxuICAgICAgICBcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGxldCBhdXRob3JpemF0aW9uID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdCgnICcpXHJcbiAgICAgICAgICAgIGxldCB0eXBlID0gYXV0aG9yaXphdGlvblswXVxyXG4gICAgICAgICAgICBsZXQgdG9rZW4gPSBhdXRob3JpemF0aW9uWzFdXHJcbiAgICAgICAgICAgIFxyXG4gICAgXHJcbiAgICAgICAgICAgIGlmICh0eXBlICE9ICdCZWFyZXInKXtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ3R5cGU6JyArIHR5cGUpXHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy9zcHJlbWF0aSB1IGp3dCBrbGp1YyBwb2RhdGtlIHUga29yaXNuaWt1IGRhIHNlIG1vemUgbmEgYmlsbyBrb2plbSBtamVzdHVcclxuICAgICAgICAgICAgICAgIC8va29yaXN0aXRpIHRpIHBvZGFjaSBvIGtvcmlzbmlrdSAtPiBkYSBzZSB6bmEga28gc2FsamUgdXBpdCBpdGRcclxuICBcclxuICAgICAgICAgICAgICAgIHJlcS5qd3QgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgaXNTdHVkZW50KHJlcSxyZXMsIG5leHQpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBhY2NvdW50VHlwZSA9IHJlcS5qd3QuYWNjb3VudF90eXBlXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChhY2NvdW50VHlwZSA9PT0gICdTdHVkZW50JyApICByZXR1cm4gbmV4dCgpIFxyXG4gICAgICAgICAgICAvL2ZhbGkgam9zIHJldHVybiBmYWxzZSB1IGVsc2UgYWtvIG5lY2UgZnVua2Npb25pcmF0aVxyXG4gICAgICAgICAgICBlbHNlICByZXMuc3RhdHVzKDQwMSkuc2VuZCgpXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgaXNQYXJ0bmVyKHJlcSxyZXMsIG5leHQpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBhY2NvdW50VHlwZSA9IHJlcS5qd3QuYWNjb3VudF90eXBlXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgaWYgKGFjY291bnRUeXBlID09PSAgJ1Bvc2xvZGF2YWMnICAgfHwgICBhY2NvdW50VHlwZSA9PT0gJ0FkbWluJykgIHtcclxuICAgICAgICAgICAgICAgIC8vcG9zbG9kYXZhYyBuZW1hIHByaXN0dXAga3JlaXJhbmp1IGkgYnJpc2FuanUgcG9zbG9kYXZhY2Egb2Rub3NubyBwYXJ0bmVyYSBcclxuICAgICAgICAgICAgICAgIGlmKGFjY291bnRUeXBlID09PSAnUG9zbG9kYXZhYycgJiYgcmVxLnBhdGggPT09ICdwYXJ0bmVycycgJiYgKHJlcS5tZXRob2QgPT09ICdQT1NUJyB8fCByZXEubWV0aG9kID09PSAnREVMRVRFJykgKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dCgpIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKCl9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICBcclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgXHJcblxyXG5cclxuICAgIGFzeW5jIGNoYW5nZVVzZXJQYXNzd29yZCh1c2VyRGF0YSl7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcbiBcclxuICAgICAgICBsZXQgdXNlciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJ1c2Vyc1wiKS5maW5kT25lKHtlbWFpbCA6IHVzZXJEYXRhLmVtYWlsfSlcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgaWYgKHVzZXIgJiYgdXNlci5wYXNzd29yZCAmJiAoYXdhaXQgYmNyeXB0LmNvbXBhcmUodXNlckRhdGEub2xkUGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpKSl7XHJcbiAgICAgICAgICAgIGxldCBuZXdQYXNzd29yZFRyYW5zZm9ybWVkID0gYXdhaXQgYmNyeXB0Lmhhc2godXNlckRhdGEubmV3UGFzc3dvcmQsIDgpXHJcblxyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS51cGRhdGVPbmUoXHJcbiAgICAgICAgICAgICAgICB7IF9pZDogdXNlci5faWQgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2V0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBuZXdQYXNzd29yZFRyYW5zZm9ybWVkLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQubW9kaWZpZWRDb3VudCA9PSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "register",
        "userData",
        "Object",
        "entries",
        "key",
        "value",
        "res",
        "json",
        "status",
        "partner",
        "bcrypt",
        "hash",
        "password",
        "Date",
        "now",
        "user",
        "date_created",
        "jmbag",
        "account_type",
        "name",
        "surname",
        "technology",
        "year",
        "journalID",
        "company",
        "adress",
        "about_us",
        "website",
        "contact_email",
        "contact_number",
        "telephone_number",
        "img_url",
        "insertOne",
        "insertResult",
        "insertedId",
        "userID",
        "code",
        "Error",
        "authenticateUser",
        "findOne",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "isValidUser",
        "req",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "send",
        "verify",
        "isStudent",
        "accountType",
        "isPartner",
        "path",
        "method",
        "changeUserPassword",
        "oldPassword",
        "newPassword",
        "newPasswordTransformed",
        "updateOne",
        "_id",
        "$set",
        "result",
        "modifiedCount"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db'\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n(async () => {\r\n    let db = await connect();\r\n    db.collection('users').createIndex({ email: 1 }, { unique: true });\r\n})();\r\n\r\n\r\nexport default {\r\n    async register(userData){\r\n\r\n        for (const [key, value] of Object.entries(userData)) {\r\n            if(!value){\r\n              res.json({status: 'Missing data'})\r\n              return\r\n            }\r\n        }\r\n\r\n        let db = await connect()\r\n\r\n        let partner = {}\r\n        \r\n        let user = {\r\n            email: userData.email,\r\n            password: await bcrypt.hash(userData.password, 8),\r\n            date_created: Date.now()\r\n        }\r\n\r\n\r\n        if(userData.jmbag){\r\n            user.account_type = 'Student',\r\n            user.jmbag = userData.jmbag,\r\n            user.name = userData.name,\r\n            user.surname = userData.surname,\r\n            user.technology = userData.technology\r\n            user.year= userData.year\r\n            user.journalID = false\r\n        } else{\r\n            user.account_type = 'Poslodavac',\r\n            partner.company = userData.name\r\n            partner.technology= userData.technology,\r\n            partner.adress = userData.adress,\r\n            partner.about_us = userData.about_us,\r\n            partner.website = userData.website,\r\n            partner.date_created = Date.now()\r\n            partner.contact_email = userData.contact_email,\r\n            partner.contact_number = userData.telephone_number\r\n            partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80'\r\n        }\r\n        \r\n\r\n        try{\r\n            let insertResult = await db.collection('users').insertOne(user);\r\n      \r\n            if(insertResult && insertResult.insertedId){\r\n                delete user.password\r\n                partner.userID = ObjectID(insertResult.insertedId)\r\n\r\n                return partner \r\n            }\r\n        }\r\n        catch(e){\r\n            if (e.name ==\"MongoError\" && e.code == 11000){\r\n                throw new Error(\"User already exists\")\r\n            }\r\n        }   \r\n\r\n\r\n    },\r\n\r\n\r\n    async authenticateUser(email,password){\r\n        let db = await connect()\r\n        let user = await db.collection(\"users\").findOne({email : email})\r\n\r\n        // provjerava da li je ovaj hesh u bazi izveden iz cistog passworda\r\n        if(user && user.password && (await bcrypt.compare(password, user.password))){\r\n            //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \r\n            //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\r\n            //naš token sadrži sve podatke o useru\r\n            //password nije potrebno spremati u token jer smo ga već provjerili\r\n            delete user.password\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm: \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            })\r\n            \r\n            user.token = token\r\n\r\n            return user \r\n\r\n        }\r\n        else {\r\n            throw new Error('Cannot authenticate')\r\n        }\r\n    },\r\n\r\n\r\n    async isValidUser(req,res, next){\r\n        \r\n        try{\r\n            let authorization = req.headers.authorization.split(' ')\r\n            let type = authorization[0]\r\n            let token = authorization[1]\r\n            \r\n    \r\n            if (type != 'Bearer'){\r\n                //console.log('type:' + type)\r\n               \r\n                res.status(401).send()\r\n                return false;\r\n            }\r\n            else {\r\n                //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\r\n                //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\r\n  \r\n                req.jwt = jwt.verify(token, process.env.JWT_SECRET)\r\n                \r\n                return next()\r\n            }\r\n        }\r\n        catch(e){\r\n\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n    async isStudent(req,res, next){\r\n        \r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            \r\n            if (accountType ===  'Student' )  return next() \r\n            //fali jos return false u else ako nece funkcionirati\r\n            else  res.status(401).send()\r\n\r\n        }\r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n    async isPartner(req,res, next){\r\n        \r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            if (accountType ===  'Poslodavac'   ||   accountType === 'Admin')  {\r\n                //poslodavac nema pristup kreiranju i brisanju poslodavaca odnosno partnera \r\n                if(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE') ){\r\n                        res.status(401).send()\r\n                        return false\r\n                }\r\n\r\n                return next() \r\n            }\r\n            else  {\r\n                res.status(401).send()}\r\n                return false\r\n            }\r\n\r\n        \r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n    \r\n\r\n\r\n    async changeUserPassword(userData){\r\n        let db = await connect()\r\n \r\n        let user = await db.collection(\"users\").findOne({email : userData.email})\r\n        \r\n\r\n        if (user && user.password && (await bcrypt.compare(userData.oldPassword, user.password))){\r\n            let newPasswordTransformed = await bcrypt.hash(userData.newPassword, 8)\r\n\r\n            let result = await db.collection('users').updateOne(\r\n                { _id: user._id },\r\n                {\r\n                    $set: {\r\n                        password: newPasswordTransformed,\r\n                    },\r\n                }\r\n            );\r\n            return result.modifiedCount == 1;\r\n        }\r\n    }\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1597760820505
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\methods.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "methods.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar methods = {\n  validateData: function validateData(data) {\n    for (var _i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      if (!value && key != 'views') {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  // jer je skoro identičan postupak za dodavanje partnera i projekta\n  pushData: function () {\n    var _pushData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data, collectionName) {\n      var db, getPartner, insertResult, id;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 2:\n              _context.next = 4;\n              return (0, _db[\"default\"])();\n\n            case 4:\n              db = _context.sent;\n              _context.prev = 5;\n\n              if (!(collectionName === 'projects')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(data.userID)\n              });\n\n            case 9:\n              getPartner = _context.sent;\n              data.partnerID = getPartner._id;\n\n            case 11:\n              _context.next = 13;\n              return db.collection(collectionName).insertOne(data);\n\n            case 13:\n              insertResult = _context.sent;\n              id = insertResult.insertedId;\n\n              if (!(insertResult && id)) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\", id);\n\n            case 17:\n              return _context.abrupt(\"return\", id);\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](5);\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 20]]);\n    }));\n\n    function pushData(_x, _x2) {\n      return _pushData.apply(this, arguments);\n    }\n\n    return pushData;\n  }(),\n  addPartner: function () {\n    var _addPartner = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(partnerData) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              delete partnerData.account_type;\n              partnerData.views = 0;\n              _context2.next = 5;\n              return methods.pushData(partnerData, 'partners');\n\n            case 5:\n              result = _context2.sent;\n              console.log('res', result);\n              return _context2.abrupt(\"return\", result);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.status(500).json({\n                error: _context2.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    function addPartner(_x3) {\n      return _addPartner.apply(this, arguments);\n    }\n\n    return addPartner;\n  }(),\n  // identičan postupak za promjenu info partnera i projekta -- REFakTORIRATI staviti sve u try catch i u routes.js?\n  changeInfo: function () {\n    var _changeInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, collectionName) {\n      var result, id, db;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 2:\n              if (data._id == null) {\n                id = data.id;\n                delete data.id;\n              } else {\n                id = data._id;\n                delete data._id;\n              }\n\n              _context3.next = 5;\n              return (0, _db[\"default\"])();\n\n            case 5:\n              db = _context3.sent;\n              _context3.prev = 6;\n\n              if (!(data.updateDoc === 'true' && data.method == 'put')) {\n                _context3.next = 15;\n                break;\n              }\n\n              delete data.updateDoc;\n              delete data.method;\n              _context3.next = 12;\n              return db.collection(collectionName).replaceOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, data);\n\n            case 12:\n              result = _context3.sent;\n              _context3.next = 26;\n              break;\n\n            case 15:\n              if (!(data.updateDoc === 'true' && data.method == 'patch')) {\n                _context3.next = 23;\n                break;\n              }\n\n              delete data.updateDoc;\n              delete data.method;\n              _context3.next = 20;\n              return db.collection(collectionName).updateOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, {\n                $set: data\n              });\n\n            case 20:\n              result = _context3.sent;\n              _context3.next = 26;\n              break;\n\n            case 23:\n              _context3.next = 25;\n              return db.collection(collectionName).deleteOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 25:\n              result = _context3.sent;\n\n            case 26:\n              _context3.next = 31;\n              break;\n\n            case 28:\n              _context3.prev = 28;\n              _context3.t0 = _context3[\"catch\"](6);\n              console.log(_context3.t0);\n\n            case 31:\n              if (!(result.modifiedCount == 1 || result.deletedCount == 1)) {\n                _context3.next = 35;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'success');\n\n            case 35:\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 36:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[6, 28]]);\n    }));\n\n    function changeInfo(_x4, _x5) {\n      return _changeInfo.apply(this, arguments);\n    }\n\n    return changeInfo;\n  }(),\n  //nece trebati ako su imena atributa ista\n  mapAttributes: function () {\n    var _mapAttributes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(projectData) {\n      var project;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              project = {\n                company: projectData.company,\n                project_description: projectData.project_description,\n                date_created: Date.now(),\n                contact: projectData.contact,\n                technologies: projectData.technologies,\n                preferences: projectData.preferences,\n                requirements: projectData.requirements,\n                duration: projectData.duration,\n                location: projectData.location,\n                note: projectData.note,\n                allocated_to: projectData.allocatedTo\n              };\n              return _context4.abrupt(\"return\", project);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function mapAttributes(_x6) {\n      return _mapAttributes.apply(this, arguments);\n    }\n\n    return mapAttributes;\n  }(),\n  //  identičan postupak za pretragu partnera i projekta\n  search: function () {\n    var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(query, atributi, collectionName) {\n      var db, selekcija, pretraga, terms, cursor, results;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              selekcija = {};\n\n              if (query._any || collectionName === 'users') {\n                pretraga = query._any;\n\n                if (collectionName === 'users') {\n                  pretraga = pretraga + ' Student';\n                }\n\n                terms = pretraga.split(' ');\n                if (!query._any) terms.shift();\n                console.log('terms:', terms);\n                selekcija = {\n                  $and: []\n                };\n                /*\r\n                terms.map(function(term){\r\n                    let or = { $or: [] };\r\n                    atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                    selekcija.$and.push(or);\r\n                })\r\n                */\n\n                terms.forEach(function (term) {\n                  var or = {\n                    $or: []\n                  };\n                  atributi.forEach(function (atribut) {\n                    or.$or.push(_defineProperty({}, atribut, new RegExp(term, \"i\")));\n                  });\n                  selekcija.$and.push(or);\n                });\n              }\n\n              _context5.next = 7;\n              return db.collection(collectionName).find(selekcija).sort({\n                company: 1\n              });\n\n            case 7:\n              cursor = _context5.sent;\n              _context5.next = 10;\n              return cursor.toArray();\n\n            case 10:\n              results = _context5.sent;\n              results.forEach(function (doc) {\n                doc.id = doc._id;\n                delete doc._id;\n                if (collectionName == 'users') delete doc.password;\n              });\n              return _context5.abrupt(\"return\", results);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function search(_x7, _x8, _x9) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }()\n};\nvar _default = methods;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "methods.js"
      ],
      "names": [
        "methods",
        "validateData",
        "data",
        "Object",
        "entries",
        "key",
        "value",
        "pushData",
        "collectionName",
        "Error",
        "db",
        "collection",
        "findOne",
        "userID",
        "getPartner",
        "partnerID",
        "_id",
        "insertOne",
        "insertResult",
        "id",
        "insertedId",
        "addPartner",
        "partnerData",
        "account_type",
        "views",
        "result",
        "console",
        "log",
        "res",
        "status",
        "json",
        "error",
        "message",
        "changeInfo",
        "updateDoc",
        "method",
        "replaceOne",
        "updateOne",
        "$set",
        "deleteOne",
        "modifiedCount",
        "deletedCount",
        "mapAttributes",
        "projectData",
        "project",
        "company",
        "project_description",
        "date_created",
        "Date",
        "now",
        "contact",
        "technologies",
        "preferences",
        "requirements",
        "duration",
        "location",
        "note",
        "allocated_to",
        "allocatedTo",
        "search",
        "query",
        "atributi",
        "selekcija",
        "_any",
        "pretraga",
        "terms",
        "split",
        "shift",
        "$and",
        "forEach",
        "term",
        "or",
        "$or",
        "atribut",
        "push",
        "RegExp",
        "find",
        "sort",
        "cursor",
        "toArray",
        "results",
        "doc",
        "password"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "/* Svrha ovog filea je odvojiti metode odnosno funkcije od ruta i handlera radi preglednosti, a metode su pisane radi redundancije koda */\r\nimport connect from './db.js'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n\r\n\r\nlet methods  = {\r\n\r\n\r\n    validateData : (data) => {\r\n        for (const [key, value] of Object.entries(data)) {\r\n            if(!value && key != 'views'){\r\n\r\n              return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n\r\n    \r\n\r\n    // jer je skoro identičan postupak za dodavanje partnera i projekta\r\n    pushData : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n\r\n            throw new Error(\"Error accured during inserting project or partner\")        \r\n        }\r\n            \r\n        let db = await connect()\r\n\r\n        \r\n        try{\r\n            \r\n            \r\n            //projektu pridodajemo partnerID radi lakšeg mapiranja i rada s podacima\r\n            if(collectionName === 'projects') {\r\n                let getPartner  = await db.collection(\"partners\").findOne({userID: ObjectID(data.userID)})\r\n                data.partnerID = getPartner._id\r\n            }\r\n            \r\n            \r\n            let insertResult = await db.collection(collectionName).insertOne(data);\r\n            let id = insertResult.insertedId\r\n\r\n            if(insertResult && id){ \r\n                 // 1. način\r\n                 return id\r\n                }\r\n                \r\n                /*\r\n                // pushanje projectId-a u listu projekata određenog partnera, 2. način\r\n\r\n                if(collectionName === 'projects'){\r\n                    let partnerID = data.partnerID\r\n                    delete data.partnerID\r\n                    \r\n                    await db.collection('partners').updateOne( { _id: ObjectID(partnerID) },{$addToSet:{ \"projects\": id}}, true);\r\n                }\r\n                */\r\n                return id\r\n            }\r\n        \r\n        catch(e){\r\n                throw new Error(\"Error accured during inserting project or partner\")\r\n        } \r\n    },\r\n\r\n\r\n   \r\n    addPartner : async (partnerData) => {\r\n        \r\n        try{\r\n            delete partnerData.account_type\r\n            partnerData.views = 0\r\n\r\n            let result = await methods.pushData(partnerData, 'partners')\r\n            console.log('res',result)\r\n            return result\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n    // identičan postupak za promjenu info partnera i projekta -- REFakTORIRATI staviti sve u try catch i u routes.js?\r\n    changeInfo : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n            /* res nije tu definiran ali iskoristiti ovo drugdje\r\n            res.json({\r\n                status: 'fail',\r\n                reason : 'incomplete update data'\r\n            })\r\n            */\r\n            return 'fail'  \r\n        }\r\n        \r\n        let result, id \r\n\r\n        if (data._id == null){\r\n            id = data.id\r\n            delete data.id\r\n        }else{\r\n            id = data._id\r\n            delete data._id\r\n        }\r\n        \r\n        let db = await connect();\r\n\r\n        try {\r\n\r\n            if (data.updateDoc==='true' && data.method == 'put') {\r\n                delete data.updateDoc\r\n                delete data.method\r\n                result = await db.collection(collectionName).replaceOne( { _id: ObjectID(id) }, data);\r\n            } \r\n\r\n            else if (data.updateDoc==='true' && data.method == 'patch') {\r\n                delete data.updateDoc\r\n                delete data.method\r\n                result = await db.collection(collectionName).updateOne( { _id: ObjectID(id) },{ $set: data, });\r\n            } \r\n                \r\n            else    result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } )\r\n        }\r\n        \r\n\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n     \r\n\r\n        if (result.modifiedCount == 1 || result.deletedCount == 1)  return 'success'\r\n        else return 'fail'\r\n        \r\n    },\r\n\r\n\r\n    //nece trebati ako su imena atributa ista\r\n    mapAttributes : async (projectData) =>{\r\n     \r\n        let project = {\r\n                company: projectData.company,\r\n                project_description: projectData.project_description,\r\n                date_created: Date.now(),\r\n                contact: projectData.contact,\r\n                technologies: projectData.technologies,\r\n                preferences: projectData.preferences,\r\n                requirements: projectData.requirements,\r\n                duration: projectData.duration,\r\n                location: projectData.location,\r\n                note: projectData.note,\r\n                allocated_to: projectData.allocatedTo\r\n        }\r\n        return project\r\n    },\r\n\r\n\r\n    \r\n    //  identičan postupak za pretragu partnera i projekta\r\n    search : async (query, atributi, collectionName) =>{\r\n        let db = await connect()\r\n\r\n        let selekcija = {}\r\n        \r\n        if(query._any || collectionName === 'users'){\r\n            let pretraga = query._any\r\n\r\n            if (collectionName === 'users'){\r\n\r\n                pretraga = pretraga + ' Student'\r\n            } \r\n\r\n            let terms = pretraga.split(' ')\r\n            if (!query._any)  terms.shift()\r\n            console.log('terms:',terms)\r\n\r\n            selekcija = {\r\n                $and: []\r\n            }\r\n\r\n            /*\r\n            terms.map(function(term){\r\n                let or = { $or: [] };\r\n                atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                selekcija.$and.push(or);\r\n            })\r\n            */\r\n            \r\n            \r\n            terms.forEach((term) => {\r\n                let or = {\r\n                    $or: []\r\n                };\r\n\r\n                atributi.forEach(atribut => {\r\n                    or.$or.push({ [atribut]: new RegExp(term, \"i\") });\r\n                })\r\n                \r\n                selekcija.$and.push(or);\r\n            });\r\n            \r\n            \r\n     }\r\n     \r\n        let cursor = await db.collection(collectionName).find(selekcija).sort({company: 1})\r\n\r\n        let results =  await cursor.toArray()\r\n\r\n        results.forEach(doc => {\r\n            doc.id = doc._id\r\n            delete doc._id\r\n\r\n            if (collectionName == 'users') delete doc.password\r\n        })\r\n\r\n\r\n        return results\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1598113618071
  }
}