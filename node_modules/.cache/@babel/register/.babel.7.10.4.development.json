{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json({\n  limit: '50mb',\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].urlencoded({\n  limit: '50mb',\n  extended: true\n}));\napp.get('/', _routes[\"default\"].home);\napp.patch('/', _routes[\"default\"].addView);\napp.post('/register', _routes[\"default\"].registration);\napp.post('/login', _routes[\"default\"].login);\napp.patch('/register', [_auth[\"default\"].isValidUser], _routes[\"default\"].changePassword); //register? bolje change_password, ali onda je to nova ruta\n\napp.patch('/journal', _routes[\"default\"].submitDiary);\napp.post('/application_form', _routes[\"default\"].applicationForm);\napp.get('/instructions', _routes[\"default\"].getInstructions);\napp.patch('/instructions', _routes[\"default\"].changeInstructions);\napp.patch('/template', _routes[\"default\"].uploadTemplate);\napp.get('/template', _routes[\"default\"].getTemplate);\napp.patch('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo);\napp[\"delete\"]('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo); //projects\n\napp.get('/projects', _routes[\"default\"].getProjects);\napp.post('/projects', _routes[\"default\"].addProject);\napp.get('/projects/:id', _routes[\"default\"].getOneProject);\napp.patch('/projects/:id', _routes[\"default\"].changeProjectInfo);\napp[\"delete\"]('/projects/:id', _routes[\"default\"].changeProjectInfo);\napp.post('/chosen_projects', _routes[\"default\"].chosenProjects);\napp.get('/approved_project', _routes[\"default\"].getApprovedProject);\napp.get('/check_if_partner', _routes[\"default\"].checkIfPartner); //partners\n\napp.get('/partners', _routes[\"default\"].getPartners);\napp.get('/partners/:id', _routes[\"default\"].getOnePartner);\napp.patch('/partners/:id', _routes[\"default\"].changePartnerInfo); //promijeniti u 'partner'? i maknuti drugi parametar?\n\napp[\"delete\"]('/partners/:id', _routes[\"default\"].changePartnerInfo);\napp.get('/partner_projects/:id', _routes[\"default\"].getPartnerProjects);\napp.post('/partners', _routes[\"default\"].createPartner); // //projects\n// app.get('/projects', routes.getProjects)\n// app.post('/projects',[auth.isValidUser], [auth.isPartner], routes.addProject)\n// app.get('/projects/:id', routes.getOneProject)\n// app.patch('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo)\n// app.delete('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \n// app.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\n// app.get('/approved_project', routes.getApprovedProject)\n// //partners\n// app.get('/partners', routes.getPartners)\n// app.get('/partners/:id', routes.getOnePartner)\n// app.patch('/partners/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) //promijeniti u 'partner'?\n// app.delete('/partners/:id/:update', [auth.isValidUser], [auth.isPartner],  routes.changePartnerInfo)\n// app.get('/partner_projects/:id', routes.getPartnerProjects)\n// app.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) \n\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "limit",
        "extended",
        "urlencoded",
        "get",
        "routes",
        "home",
        "patch",
        "addView",
        "post",
        "registration",
        "login",
        "auth",
        "isValidUser",
        "changePassword",
        "submitDiary",
        "applicationForm",
        "getInstructions",
        "changeInstructions",
        "uploadTemplate",
        "getTemplate",
        "changeUserInfo",
        "getProjects",
        "addProject",
        "getOneProject",
        "changeProjectInfo",
        "chosenProjects",
        "getApprovedProject",
        "checkIfPartner",
        "getPartners",
        "getOnePartner",
        "changePartnerInfo",
        "getPartnerProjects",
        "createPartner",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport routes from './routes'; \r\nimport cors from 'cors'\r\nimport auth from './auth.js'\r\n\r\n\r\nconst app = express() // instanciranje aplikacije\r\nconst port = 3000 // port na kojem će web server slušati\r\n\r\napp.use(cors())\r\n\r\napp.use(bodyParser.json({limit: '50mb', extended: true}))\r\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}))\r\n\r\n\r\n\r\napp.get('/', routes.home)\r\napp.patch('/', routes.addView)\r\napp.post('/register', routes.registration)\r\napp.post('/login', routes.login)\r\napp.patch('/register', [auth.isValidUser], routes.changePassword) //register? bolje change_password, ali onda je to nova ruta\r\napp.patch('/journal', routes.submitDiary)\r\napp.post('/application_form', routes.applicationForm)\r\napp.get('/instructions', routes.getInstructions)\r\napp.patch('/instructions', routes.changeInstructions)\r\napp.patch('/template', routes.uploadTemplate)\r\napp.get('/template', routes.getTemplate)\r\napp.patch('/user', [auth.isValidUser], routes.changeUserInfo)\r\napp.delete('/user', [auth.isValidUser], routes.changeUserInfo)\r\n\r\n//projects\r\napp.get('/projects', routes.getProjects)\r\napp.post('/projects', routes.addProject)\r\napp.get('/projects/:id', routes.getOneProject)\r\napp.patch('/projects/:id',  routes.changeProjectInfo)\r\napp.delete('/projects/:id',  routes.changeProjectInfo) \r\napp.post('/chosen_projects', routes.chosenProjects)\r\napp.get('/approved_project', routes.getApprovedProject)\r\napp.get('/check_if_partner', routes.checkIfPartner)\r\n\r\n\r\n//partners\r\napp.get('/partners', routes.getPartners)\r\napp.get('/partners/:id', routes.getOnePartner)\r\napp.patch('/partners/:id', routes.changePartnerInfo) //promijeniti u 'partner'? i maknuti drugi parametar?\r\napp.delete('/partners/:id', routes.changePartnerInfo)\r\napp.get('/partner_projects/:id', routes.getPartnerProjects)\r\napp.post('/partners',  routes.createPartner) \r\n\r\n\r\n// //projects\r\n// app.get('/projects', routes.getProjects)\r\n// app.post('/projects',[auth.isValidUser], [auth.isPartner], routes.addProject)\r\n// app.get('/projects/:id', routes.getOneProject)\r\n// app.patch('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo)\r\n// app.delete('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \r\n// app.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\r\n// app.get('/approved_project', routes.getApprovedProject)\r\n\r\n\r\n// //partners\r\n// app.get('/partners', routes.getPartners)\r\n// app.get('/partners/:id', routes.getOnePartner)\r\n// app.patch('/partners/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) //promijeniti u 'partner'?\r\n// app.delete('/partners/:id/:update', [auth.isValidUser], [auth.isPartner],  routes.changePartnerInfo)\r\n// app.get('/partner_projects/:id', routes.getPartnerProjects)\r\n// app.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) \r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1597699550477
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _methods = _interopRequireDefault(require(\"./methods.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  // id usera svugdje traziti preko req.jwt!!?\n  changeUserInfo: function changeUserInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var userInfo, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userInfo = req.body;\n              _context.next = 3;\n              return _methods[\"default\"].changeInfo(userInfo, 'users');\n\n            case 3:\n              response = _context.sent;\n              res.send(response);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //skoro identicna kao getonePartner skoro, spojiti u jednu\n  checkIfPartner: function checkIfPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var id, db, data;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              id = req.body._id;\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.next = 6;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 6:\n              data = _context2.sent;\n              if (!data) res.status(401).json({\n                error: 'user is not a partner'\n              });\n              res.json(data);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  getTemplate: function getTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"content\").findOne();\n\n            case 5:\n              result = _context3.sent;\n              res.json(result.template);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  uploadTemplate: function uploadTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var data, db, content, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //poboljsati\n              data = {};\n              data.template = req.body;\n              _context4.next = 4;\n              return (0, _db[\"default\"])();\n\n            case 4:\n              db = _context4.sent;\n              _context4.next = 7;\n              return db.collection('content').findOne();\n\n            case 7:\n              content = _context4.sent;\n              data.id = content._id;\n              data.updateDoc = 'true';\n              _context4.prev = 10;\n              _context4.next = 13;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 13:\n              result = _context4.sent;\n              res.send(\"\".concat(result, \" at changing template.\"));\n              _context4.next = 20;\n              break;\n\n            case 17:\n              _context4.prev = 17;\n              _context4.t0 = _context4[\"catch\"](10);\n              res.status(500).json({\n                error: _context4.t0.message\n              });\n\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[10, 17]]);\n    }))();\n  },\n  changeInstructions: function changeInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var data, db, content, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              //poboljsati\n              data = {};\n              data.instructions = req.body;\n              _context5.next = 4;\n              return (0, _db[\"default\"])();\n\n            case 4:\n              db = _context5.sent;\n              _context5.next = 7;\n              return db.collection('content').findOne();\n\n            case 7:\n              content = _context5.sent;\n              data.id = content._id;\n              data.updateDoc = 'true';\n              _context5.prev = 10;\n              _context5.next = 13;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 13:\n              result = _context5.sent;\n              res.send(\"\".concat(result, \" at changing instructions.\"));\n              _context5.next = 20;\n              break;\n\n            case 17:\n              _context5.prev = 17;\n              _context5.t0 = _context5[\"catch\"](10);\n              res.status(500).json({\n                error: _context5.t0.message\n              });\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[10, 17]]);\n    }))();\n  },\n  getInstructions: function getInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              id = req.params.id;\n              _context6.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context6.sent;\n              _context6.next = 6;\n              return db.collection(\"content\").findOne();\n\n            case 6:\n              result = _context6.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result.instructions);\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  getApprovedProject: function getApprovedProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              //testna za sad\n              res.json({\n                message: 'here is your approved project'\n              });\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  applicationForm: function applicationForm(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      var formData, db, appExists, result;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              formData = {};\n              formData.application = req.body.form;\n              formData.updateDoc = 'true';\n              formData.id = req.body.userID;\n              _context8.next = 6;\n              return (0, _db[\"default\"])();\n\n            case 6:\n              db = _context8.sent;\n              _context8.next = 9;\n              return db.collection('users').find({\n                _id: (0, _mongodb.ObjectID)(formData.id),\n                application: {\n                  $exists: true\n                }\n              });\n\n            case 9:\n              appExists = _context8.sent;\n              _context8.prev = 10;\n\n              if (!(appExists == true)) {\n                _context8.next = 13;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting\");\n\n            case 13:\n              _context8.next = 15;\n              return _methods[\"default\"].changeInfo(formData, 'users');\n\n            case 15:\n              result = _context8.sent;\n              res.send(\"\".concat(result, \" at inserting application.\"));\n              _context8.next = 22;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](10);\n              res.status(500).json({\n                error: _context8.t0.message\n              });\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[10, 19]]);\n    }))();\n  },\n  //refaktorirati\n  submitDiary: function submitDiary(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      var data, db, result;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              data = {\n                userID: req.body.user_id,\n                journal: req.body.journal\n              };\n              _context9.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context9.sent;\n              _context9.prev = 4;\n              _context9.next = 7;\n              return db.collection('journals').insertOne(data);\n\n            case 7:\n              result = _context9.sent;\n\n              if (result.insertedCount) {\n                _context9.next = 10;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting\");\n\n            case 10:\n              _context9.next = 15;\n              break;\n\n            case 12:\n              _context9.prev = 12;\n              _context9.t0 = _context9[\"catch\"](4);\n              console.log(_context9.t0);\n\n            case 15:\n              res.json({\n                message: 'upload successful'\n              });\n\n            case 16:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[4, 12]]);\n    }))();\n  },\n  getOneProject: function getOneProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              id = req.params.id;\n              _context10.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context10.sent;\n              _context10.prev = 4;\n              _context10.next = 7;\n              return db.collection(\"projects\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context10.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context10.next = 16;\n              break;\n\n            case 13:\n              _context10.prev = 13;\n              _context10.t0 = _context10[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context10.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[4, 13]]);\n    }))();\n  },\n  getPartnerProjects: function getPartnerProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var partnerID, db, cursor, results;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              partnerID = req.params.id;\n              _context11.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context11.sent;\n              _context11.next = 6;\n              return db.collection(\"projects\").find({\n                partnerID: (0, _mongodb.ObjectID)(partnerID)\n              });\n\n            case 6:\n              cursor = _context11.sent;\n              _context11.next = 9;\n              return cursor.toArray();\n\n            case 9:\n              results = _context11.sent;\n              res.send(results);\n\n            case 11:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }))();\n  },\n  addView: function addView(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var data, collectionName, result;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              data = req.body;\n              data.updateDoc = 'true';\n              collectionName = data.collectionName;\n              delete data.collectionName;\n              data.views = data.views + 1;\n              _context12.next = 7;\n              return _methods[\"default\"].changeInfo(data, collectionName);\n\n            case 7:\n              result = _context12.sent;\n              res.json(result);\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }))();\n  },\n  getOnePartner: function getOnePartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              //ne vraca gresku kad je id nepostojeci\n              id = req.params.id;\n              _context13.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context13.sent;\n              _context13.prev = 4;\n              _context13.next = 7;\n              return db.collection(\"partners\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context13.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context13.next = 16;\n              break;\n\n            case 13:\n              _context13.prev = 13;\n              _context13.t0 = _context13[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context13.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[4, 13]]);\n    }))();\n  },\n  changePassword: function changePassword(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var data, result;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              data = req.body; //dolazi iz metode isValidUser\n\n              data.email = req.jwt.email;\n\n              if (!(data.newPassword && data.oldPassword)) {\n                _context14.next = 9;\n                break;\n              }\n\n              _context14.next = 5;\n              return _auth[\"default\"].changeUserPassword(data);\n\n            case 5:\n              result = _context14.sent;\n\n              if (result) {\n                res.status(201).send({\n                  status: 'Success'\n                });\n              } else {\n                res.status(500).json({\n                  error: 'Server error'\n                });\n              }\n\n              _context14.next = 10;\n              break;\n\n            case 9:\n              res.status(400).json({\n                error: \"Invalid input data\"\n              });\n\n            case 10:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }))();\n  },\n  login: function login(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var user, result;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              user = req.body;\n              _context15.prev = 1;\n              _context15.next = 4;\n              return _auth[\"default\"].authenticateUser(user.email, user.password);\n\n            case 4:\n              result = _context15.sent;\n              res.json(result);\n              _context15.next = 11;\n              break;\n\n            case 8:\n              _context15.prev = 8;\n              _context15.t0 = _context15[\"catch\"](1);\n              res.status(401).json({\n                error: _context15.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[1, 8]]);\n    }))();\n  },\n  registration: function registration(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      var newUser, partner, result;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              newUser = req.body;\n              _context16.prev = 1;\n              _context16.next = 4;\n              return _auth[\"default\"].register(newUser);\n\n            case 4:\n              partner = _context16.sent;\n\n              if (!(newUser.account_type === ('poslodavac' || 'Poslodavac'))) {\n                _context16.next = 9;\n                break;\n              }\n\n              _context16.next = 8;\n              return _methods[\"default\"].addPartner(partner);\n\n            case 8:\n              result = _context16.sent;\n\n            case 9:\n              console.log(result);\n              res.json({\n                status: \"user with id \".concat(result, \" added\")\n              });\n              _context16.next = 16;\n              break;\n\n            case 13:\n              _context16.prev = 13;\n              _context16.t0 = _context16[\"catch\"](1);\n              res.status(500).json({\n                error: _context16.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[1, 13]]);\n    }))();\n  },\n  chosenProjects: function chosenProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var data, db, result;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              data = req.body;\n              _context17.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context17.sent;\n              _context17.next = 6;\n              return db.collection('users').updateOne({\n                _id: (0, _mongodb.ObjectID)(data.user)\n              }, {\n                $set: {\n                  \"chosenProjects\": data.selection\n                }\n              });\n\n            case 6:\n              result = _context17.sent;\n              res.json(result);\n\n            case 8:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }))();\n  },\n  changeProjectInfo: function changeProjectInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var projectData, project, response;\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              projectData = req.body;\n              delete projectData.id;\n\n              if (!projectData) {\n                _context18.next = 8;\n                break;\n              }\n\n              _context18.next = 5;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 5:\n              project = _context18.sent;\n              _context18.next = 9;\n              break;\n\n            case 8:\n              project = {};\n\n            case 9:\n              // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\n              project.id = req.params.id;\n              project.updateDoc = projectData.updateDoc;\n              _context18.next = 13;\n              return _methods[\"default\"].changeInfo(project, 'projects');\n\n            case 13:\n              response = _context18.sent;\n              res.send(response);\n\n            case 15:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }))();\n  },\n  changePartnerInfo: function changePartnerInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      var partnerInfo, response;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              partnerInfo = req.body;\n              delete partnerInfo._id;\n              partnerInfo.id = req.params.id;\n              _context19.next = 5;\n              return _methods[\"default\"].changeInfo(partnerInfo, 'partners');\n\n            case 5:\n              response = _context19.sent;\n              res.send(response);\n\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }))();\n  },\n  getProjects: function getProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"technologies\", \"location\", \"project_description\"];\n              _context20.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'projects');\n\n            case 4:\n              result = _context20.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }))();\n  },\n  getPartners: function getPartners(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"about_us\"];\n              _context21.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'partners');\n\n            case 4:\n              result = _context21.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }))();\n  },\n  addProject: function addProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n      var projectData, project, result;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              projectData = req.body; // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\n\n              _context22.next = 3;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 3:\n              project = _context22.sent;\n              //slika je hardcodana jer nema bas smisla imati custom sliku projekta\n              project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\";\n              project.userID = projectData.userID;\n              project.views = 0;\n              _context22.prev = 7;\n              _context22.next = 10;\n              return _methods[\"default\"].pushData(project, 'projects');\n\n            case 10:\n              result = _context22.sent;\n              res.send(\"project with id  \".concat(result, \" added.\"));\n              _context22.next = 17;\n              break;\n\n            case 14:\n              _context22.prev = 14;\n              _context22.t0 = _context22[\"catch\"](7);\n              res.status(500).json({\n                error: _context22.t0.message\n              });\n\n            case 17:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, null, [[7, 14]]);\n    }))();\n  },\n  createPartner: function createPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n      var partnerData, partnerID;\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              console.log('tu samm');\n              partnerData = req.body; // ako će trebati kad stjepan implementira\n              //let project = await methods.mapAttributes(projectData)\n              //dok stjepan ne implementira ce biti ovako hardcodano\n\n              partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"; //za raspoznavanje koji partneri su se sami kreirali, a koji ne\n\n              partnerData.created_by_admin = true;\n              _context23.prev = 4;\n              _context23.next = 7;\n              return _methods[\"default\"].pushData(partnerData, 'partners');\n\n            case 7:\n              partnerID = _context23.sent;\n              res.send(\"partner with id  \".concat(partnerID, \" added.\"));\n              _context23.next = 14;\n              break;\n\n            case 11:\n              _context23.prev = 11;\n              _context23.t0 = _context23[\"catch\"](4);\n              res.status(500).json({\n                error: _context23.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[4, 11]]);\n    }))();\n  },\n  home: function home(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n      var db, numberOfDocs;\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context24.sent;\n              numberOfDocs = {};\n              _context24.next = 6;\n              return db.collection(\"projects\").countDocuments();\n\n            case 6:\n              numberOfDocs.projectsCounter = _context24.sent;\n              _context24.next = 9;\n              return db.collection(\"partners\").countDocuments();\n\n            case 9:\n              numberOfDocs.partnersCounter = _context24.sent;\n              _context24.next = 12;\n              return db.collection(\"users\").countDocuments({\n                account_type: 'Student'\n              });\n\n            case 12:\n              numberOfDocs.studentsCounter = _context24.sent;\n              res.json(numberOfDocs);\n\n            case 14:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "changeUserInfo",
        "req",
        "res",
        "userInfo",
        "body",
        "methods",
        "changeInfo",
        "response",
        "send",
        "checkIfPartner",
        "id",
        "_id",
        "db",
        "collection",
        "findOne",
        "userID",
        "data",
        "status",
        "json",
        "error",
        "getTemplate",
        "result",
        "template",
        "uploadTemplate",
        "content",
        "updateDoc",
        "message",
        "changeInstructions",
        "instructions",
        "getInstructions",
        "params",
        "getApprovedProject",
        "applicationForm",
        "formData",
        "application",
        "form",
        "find",
        "$exists",
        "appExists",
        "Error",
        "submitDiary",
        "user_id",
        "journal",
        "insertOne",
        "insertedCount",
        "console",
        "log",
        "getOneProject",
        "getPartnerProjects",
        "partnerID",
        "cursor",
        "toArray",
        "results",
        "addView",
        "collectionName",
        "views",
        "getOnePartner",
        "changePassword",
        "email",
        "jwt",
        "newPassword",
        "oldPassword",
        "auth",
        "changeUserPassword",
        "login",
        "user",
        "authenticateUser",
        "password",
        "registration",
        "newUser",
        "register",
        "partner",
        "account_type",
        "addPartner",
        "chosenProjects",
        "updateOne",
        "$set",
        "selection",
        "changeProjectInfo",
        "projectData",
        "mapAttributes",
        "project",
        "changePartnerInfo",
        "partnerInfo",
        "getProjects",
        "query",
        "atributi",
        "search",
        "getPartners",
        "addProject",
        "img_url",
        "pushData",
        "createPartner",
        "partnerData",
        "created_by_admin",
        "home",
        "numberOfDocs",
        "countDocuments",
        "projectsCounter",
        "partnersCounter",
        "studentsCounter"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db.js'\r\nimport auth from './auth.js'\r\nimport { ObjectID } from 'mongodb'\r\nimport methods from './methods.js'\r\n\r\n\r\nexport default {\r\n\r\n    // id usera svugdje traziti preko req.jwt!!?\r\n    async changeUserInfo (req, res)  {\r\n\r\n        let userInfo = req.body\r\n\r\n        let response = await methods.changeInfo(userInfo, 'users')\r\n\r\n        res.send(response)\r\n    },\r\n\r\n    //skoro identicna kao getonePartner skoro, spojiti u jednu\r\n    async checkIfPartner(req, res) {\r\n            let id = req.body._id\r\n\r\n            let db = await connect()\r\n            const data = await db.collection(\"partners\").findOne({userID : ObjectID(id)});\r\n\r\n            if(!data)  res.status(401).json({ error: 'user is not a partner'})\r\n\r\n            res.json (data);\r\n        \r\n    },\r\n\r\n    async getTemplate(req, res) {\r\n        let db = await connect()\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n\r\n        res.json(result.template)\r\n\r\n    },\r\n\r\n    async uploadTemplate(req, res) {\r\n        //poboljsati\r\n        let data = {}\r\n        data.template = req.body\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n        data.id = content._id\r\n        data.updateDoc = 'true'\r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing template.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n    async changeInstructions(req, res) {\r\n        //poboljsati\r\n        let data = {}\r\n        data.instructions = req.body\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n        data.id = content._id\r\n        data.updateDoc = 'true'\r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing instructions.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n\r\n    async getInstructions(req, res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n        result.id = result._id\r\n        delete result._id\r\n\r\n        res.json(result.instructions)\r\n    },\r\n\r\n    async getApprovedProject(req, res) {\r\n        //testna za sad\r\n        res.json({message: 'here is your approved project'})\r\n    },\r\n\r\n    async applicationForm (req, res) {\r\n\r\n        let formData = {}\r\n        formData.application = req.body.form\r\n        formData.updateDoc = 'true'\r\n        formData.id = req.body.userID\r\n\r\n        let db = await connect()\r\n\r\n        let appExists = await db.collection('users').find( { _id: ObjectID(formData.id) , application: { $exists: true} } )\r\n\r\n        try{\r\n            if (appExists == true) throw new Error(\"Error accured during inserting\")\r\n            \r\n            let result = await methods.changeInfo(formData, 'users')\r\n            \r\n            res.send(`${result} at inserting application.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n    \r\n    },\r\n\r\n\r\n    //refaktorirati\r\n    async submitDiary (req,res) {\r\n        let data = {\r\n            userID : req.body.user_id,\r\n            journal : req.body.journal\r\n        }\r\n\r\n        let db = await connect()\r\n        let result\r\n\r\n        try{\r\n            result = await db.collection('journals').insertOne(data)\r\n            // ne radi\r\n            if (!result.insertedCount) throw new Error(\"Error accured during inserting\")\r\n        }\r\n        \r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n\r\n        res.json({message: 'upload successful'})\r\n\r\n    },\r\n\r\n\r\n    async getOneProject (req,res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n\r\n        try{\r\n            let result = await db.collection(\"projects\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async getPartnerProjects (req,res) {\r\n\r\n        let partnerID = req.params.id\r\n        let db = await connect()\r\n\r\n        //nađi projekte koje pripadaju određenom poslodavcu\r\n        /*\r\n        let find_IDs= await db.collection(\"partners\").find({_id: ObjectID(id)})\r\n        let result =  await find_IDs.toArray()\r\n\r\n        let filtered_IDs = result[0].projects\r\n\r\n        let cursor2 = await db.collection(\"projects\").find({_id: {$in: filtered_IDs}})\r\n        let finalResult =  await cursor2.toArray()\r\n        */\r\n        let cursor= await db.collection(\"projects\").find({partnerID: ObjectID(partnerID)})\r\n\r\n        let results =  await cursor.toArray()\r\n        \r\n        res.send(results)\r\n\r\n},\r\n\r\n    async addView(req, res){\r\n        let data = req.body\r\n        data.updateDoc = 'true'\r\n        let collectionName = data.collectionName\r\n        delete data.collectionName\r\n\r\n        data.views = data.views + 1\r\n        \r\n        let result = await methods.changeInfo(data, collectionName)\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getOnePartner (req,res) {\r\n        //ne vraca gresku kad je id nepostojeci\r\n\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        try{\r\n            let result = await db.collection(\"partners\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n        \r\n},\r\n\r\n\r\n\r\n    async changePassword (req,res) {\r\n        let data = req.body\r\n        \r\n        //dolazi iz metode isValidUser\r\n        data.email = req.jwt.email\r\n\r\n        if (data.newPassword && data.oldPassword){\r\n            let result = await auth.changeUserPassword(data)\r\n            \r\n\r\n            if (result) {\r\n                res.status(201).send({status: 'Success'});\r\n            } \r\n            else {\r\n                res.status(500).json({ error: 'Server error' });\r\n            }\r\n        }\r\n\r\n        else{\r\n            res.status(400).json({error : \"Invalid input data\"})\r\n        }\r\n},\r\n\r\n\r\n    async login(req,res) {\r\n        let user = req.body\r\n\r\n        try{\r\n            let result = await auth.authenticateUser(user.email, user.password)\r\n            res.json(result)\r\n        }\r\n        catch(e){\r\n            res.status(401).json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async registration (req, res) { \r\n        let newUser = req.body;\r\n\r\n        try {\r\n            let partner = await auth.register(newUser);\r\n            let result \r\n\r\n            //dodavanje korisnika automatski u partnere čim se registrira\r\n            if (newUser.account_type === ('poslodavac' || 'Poslodavac'))    result = await methods.addPartner(partner)\r\n            console.log(result)\r\n            res.json({status: `user with id ${result} added`})\r\n\r\n        } catch (e) {\r\n            res.status(500).json({\r\n                error: e.message,\r\n            });\r\n        }\r\n},\r\n\r\n\r\n    async chosenProjects (req, res)  {\r\n        let data = req.body\r\n        let db = await connect()\r\n\r\n        let result = await db.collection('users').updateOne( { _id: ObjectID(data.user) },{ $set:{ \"chosenProjects\": data.selection} });\r\n        \r\n        res.json(result)\r\n},\r\n\r\n\r\n    async changeProjectInfo (req, res)  {\r\n\r\n        let projectData = req.body \r\n        delete projectData.id;\r\n        let project \r\n\r\n\r\n        //ako nema podataka u body, znači da se traži delete pa inicijaliziramo prazan objekt u koji stavljamo jedino podatke potrebne za delete, inače ide update\r\n        if (projectData) project = await methods.mapAttributes(projectData)\r\n        else         project = {}\r\n\r\n        // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\r\n        \r\n\r\n        project.id = req.params.id;\r\n        project.updateDoc = projectData.updateDoc\r\n        \r\n        let response = await methods.changeInfo(project, 'projects')\r\n        \r\n        res.send(response)\r\n},\r\n\r\n\r\n\r\n    async changePartnerInfo (req, res)  {\r\n        let partnerInfo = req.body\r\n        delete partnerInfo._id;\r\n        partnerInfo.id = req.params.id;\r\n\r\n        let response = await methods.changeInfo(partnerInfo, 'partners')\r\n\r\n        res.send(response)\r\n},\r\n\r\n\r\n\r\nasync getProjects (req, res)  {\r\n    \r\n    let query = req.query\r\n    let atributi = [\"company\", \"technologies\", \"location\", \"project_description\"] \r\n\r\n    let result = await methods.search(query, atributi, 'projects')\r\n\r\n    res.json(result)\r\n},\r\n\r\n\r\n\r\n    async getPartners (req, res) {\r\n\r\n        let query = req.query\r\n        let atributi = [\"company\", \"about_us\"] \r\n\r\n        let result = await methods.search(query, atributi, 'partners')\r\n\r\n        res.json(result)\r\n},\r\n\r\n\r\n    async addProject (req, res)  {\r\n\r\n        let projectData = req.body\r\n\r\n        // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\r\n        let project = await methods.mapAttributes(projectData)\r\n        \r\n        //slika je hardcodana jer nema bas smisla imati custom sliku projekta\r\n        project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        project.userID = projectData.userID\r\n        project.views = 0\r\n        \r\n        try{\r\n            \r\n            let result = await methods.pushData(project, 'projects')\r\n            \r\n            res.send(`project with id  ${result} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n\r\n    async createPartner (req, res)  {\r\n        console.log('tu samm')\r\n        let partnerData = req.body\r\n        \r\n        // ako će trebati kad stjepan implementira\r\n        //let project = await methods.mapAttributes(projectData)\r\n        \r\n        //dok stjepan ne implementira ce biti ovako hardcodano\r\n        partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        \r\n        //za raspoznavanje koji partneri su se sami kreirali, a koji ne\r\n        partnerData.created_by_admin = true\r\n        \r\n\r\n        try{\r\n            \r\n            let partnerID = await methods.pushData(partnerData, 'partners')\r\n            \r\n            \r\n            res.send(`partner with id  ${partnerID} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n    \r\n\r\n\r\n    async home (req, res)  {\r\n\r\n        let db = await connect()\r\n        let numberOfDocs = {}\r\n\r\n        numberOfDocs.projectsCounter = await db.collection(\"projects\").countDocuments();\r\n        numberOfDocs.partnersCounter = await db.collection(\"partners\").countDocuments();\r\n        numberOfDocs.studentsCounter = await db.collection(\"users\").countDocuments({ account_type : 'Student'});\r\n\r\n        \r\n\r\n        res.json(numberOfDocs)\r\n    }\r\n\r\n\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1597739246568
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//modul za pristup bazi\nvar connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'; //služi za pristup prema bazi na navedenom frameworku\n\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null; //nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\n// eksportamo Promise koji resolva na konekciju\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    // ako smo inicijalizirali bazu i klijent je još uvijek spojen\n    if (db && client.isConnected()) {\n      resolve(db);\n    } else {\n      client.connect(function (err) {\n        if (err) {\n          reject('Spajanje na bazu nije uspjelo:' + err);\n        } else {\n          console.log('Database connected successfully!');\n          db = client.db('moja_praksa');\n          resolve(db);\n        }\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtBQUdBLElBQUlBLGlCQUFpQixHQUFHLGdHQUF4QixDLENBR0E7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHLElBQUlDLG9CQUFNQyxXQUFWLENBQXNCSCxpQkFBdEIsRUFBd0M7QUFDakRJLEVBQUFBLGVBQWUsRUFBRSxJQURnQztBQUVqREMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGNkIsQ0FBeEMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFULEMsQ0FFQTtBQUNBO0FBRUE7O2VBQ2Usb0JBQU07QUFDakIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDO0FBQ0EsUUFBSUgsRUFBRSxJQUFJTCxNQUFNLENBQUNTLFdBQVAsRUFBVixFQUFnQztBQUM1QkYsTUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSCxLQUZELE1BRU87QUFDSEwsTUFBQUEsTUFBTSxDQUFDVSxPQUFQLENBQWUsVUFBQ0MsR0FBRCxFQUFTO0FBQ3BCLFlBQUlBLEdBQUosRUFBUztBQUNMSCxVQUFBQSxNQUFNLENBQUMsbUNBQW1DRyxHQUFwQyxDQUFOO0FBQ0gsU0FGRCxNQUVPO0FBQ0hDLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0FSLFVBQUFBLEVBQUUsR0FBR0wsTUFBTSxDQUFDSyxFQUFQLENBQVUsYUFBVixDQUFMO0FBQ0FFLFVBQUFBLE9BQU8sQ0FBQ0YsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0g7QUFDSixHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcbW9qYV9wcmFrc2FcXG1vamFfcHJha3NhX2JhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy9tb2R1bCB6YSBwcmlzdHVwIGJhemlcclxuaW1wb3J0IG1vbmdvIGZyb20gJ21vbmdvZGInXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSAnbW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBmby1jbHVzdGVyLmIxcjJnLm1vbmdvZGIubmV0L21vamFfcHJha3NhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSdcclxuXHJcblxyXG4vL3NsdcW+aSB6YSBwcmlzdHVwIHByZW1hIGJhemkgbmEgbmF2ZWRlbm9tIGZyYW1ld29ya3VcclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZyx7XHJcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGw7XHJcblxyXG4vL25ha29uIHNwYWphbmphIHZyYcSHYW1vIGRvYml2ZW51IGluc3RhbmN1IGJhemUgb3N0YWxpbSBtb2R1bGltYSBrb2ppIHRvIHRyZWJhanVcclxuLy9leHBvcnRhbW8gYXNpbmtyb251IGZ1bmtjaWp1IGtvamEgbmUgcHJpbWEgbmkgamVkYW4gcGFyYW1ldGFyXHJcblxyXG4vLyBla3Nwb3J0YW1vIFByb21pc2Uga29qaSByZXNvbHZhIG5hIGtvbmVrY2lqdVxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIC8vIGFrbyBzbW8gaW5pY2lqYWxpemlyYWxpIGJhenUgaSBrbGlqZW50IGplIGpvxaEgdXZpamVrIHNwb2plblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSkge1xyXG4gICAgICAgICAgICByZXNvbHZlKGRiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdTcGFqYW5qZSBuYSBiYXp1IG5pamUgdXNwamVsbzonICsgZXJyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoJ21vamFfcHJha3NhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAIA,iBAAiB,GAAG,gGAAxB,C,CAGA;;AACA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAwC;AACjDI,EAAAA,eAAe,EAAE,IADgC;AAEjDC,EAAAA,kBAAkB,EAAE;AAF6B,CAAxC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT,C,CAEA;AACA;AAEA;;eACe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAAgC;AAC5BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACU,OAAP,CAAe,UAACC,GAAD,EAAS;AACpB,YAAIA,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAAC,mCAAmCG,GAApC,CAAN;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAR,UAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,aAAV,CAAL;AACAE,UAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,OARD;AASH;AACJ,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//modul za pristup bazi\r\nimport mongo from 'mongodb'\r\n\r\nlet connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'\r\n\r\n\r\n//služi za pristup prema bazi na navedenom frameworku\r\nlet client = new mongo.MongoClient(connection_string,{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n})\r\n\r\nlet db = null;\r\n\r\n//nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\r\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\r\n\r\n// eksportamo Promise koji resolva na konekciju\r\nexport default () => {\r\n    return new Promise((resolve, reject) => {\r\n        // ako smo inicijalizirali bazu i klijent je još uvijek spojen\r\n        if (db && client.isConnected()) {\r\n            resolve(db);\r\n        } else {\r\n            client.connect((err) => {\r\n                if (err) {\r\n                    reject('Spajanje na bazu nije uspjelo:' + err);\r\n                } else {\r\n                    console.log('Database connected successfully!');\r\n                    db = client.db('moja_praksa');\r\n                    resolve(db);\r\n                }\r\n            });\r\n        }\r\n    });\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1594283075909
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          db.collection('users').createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  register: function register(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _i, _Object$entries, _Object$entries$_i, key, value, db, partner, user, insertResult;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _i = 0, _Object$entries = Object.entries(userData);\n\n            case 1:\n              if (!(_i < _Object$entries.length)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n\n              if (value) {\n                _context2.next = 6;\n                break;\n              }\n\n              res.json({\n                status: 'Missing data'\n              });\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _i++;\n              _context2.next = 1;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return (0, _db[\"default\"])();\n\n            case 11:\n              db = _context2.sent;\n              partner = {};\n              _context2.t0 = userData.email;\n              _context2.next = 16;\n              return _bcrypt[\"default\"].hash(userData.password, 8);\n\n            case 16:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = Date.now();\n              user = {\n                email: _context2.t0,\n                password: _context2.t1,\n                date_created: _context2.t2\n              };\n\n              if (userData.jmbag) {\n                user.account_type = 'Student', user.jmbag = userData.jmbag, user.name = userData.name, user.surname = userData.surname, user.technology = userData.technology;\n                user.year = userData.year;\n              } else {\n                user.account_type = 'Poslodavac', partner.company = userData.name;\n                partner.technology = userData.technology, partner.adress = userData.adress, partner.about_us = userData.about_us, partner.website = userData.website, partner.date_created = Date.now();\n                partner.contact_email = userData.contact_email, partner.contact_number = userData.telephone_number;\n                partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80';\n              }\n\n              _context2.prev = 20;\n              _context2.next = 23;\n              return db.collection('users').insertOne(user);\n\n            case 23:\n              insertResult = _context2.sent;\n\n              if (!(insertResult && insertResult.insertedId)) {\n                _context2.next = 28;\n                break;\n              }\n\n              delete user.password;\n              partner.userID = (0, _mongodb.ObjectID)(insertResult.insertedId);\n              return _context2.abrupt(\"return\", partner);\n\n            case 28:\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t3 = _context2[\"catch\"](20);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 34;\n                break;\n              }\n\n              throw new Error(\"User already exists\");\n\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[20, 30]]);\n    }))();\n  },\n  authenticateUser: function authenticateUser(email, password) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"users\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              _context3.t0 = user && user.password;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(password, user.password);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 18;\n                break;\n              }\n\n              //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \n              //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\n              //naš token sadrži sve podatke o useru\n              //password nije potrebno spremati u token jer smo ga već provjerili\n              delete user.password;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              user.token = token;\n              return _context3.abrupt(\"return\", user);\n\n            case 18:\n              throw new Error('Cannot authenticate');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  isValidUser: function isValidUser(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var authorization, type, token;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              authorization = req.headers.authorization.split(' ');\n              type = authorization[0];\n              token = authorization[1];\n\n              if (!(type != 'Bearer')) {\n                _context4.next = 9;\n                break;\n              }\n\n              //console.log('type:' + type)\n              res.status(401).send();\n              return _context4.abrupt(\"return\", false);\n\n            case 9:\n              //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\n              //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\n              req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n              return _context4.abrupt(\"return\", next());\n\n            case 11:\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 13]]);\n    }))();\n  },\n  isStudent: function isStudent(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context5.prev = 1;\n\n              if (!(accountType === 'Student')) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", next());\n\n            case 6:\n              //fali jos return false u else ako nece funkcionirati\n              res.status(401).send();\n\n            case 7:\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", res.status(401).send());\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9]]);\n    }))();\n  },\n  isPartner: function isPartner(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context6.prev = 1;\n\n              if (!(accountType === 'Poslodavac' || accountType === 'Admin')) {\n                _context6.next = 9;\n                break;\n              }\n\n              if (!(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE'))) {\n                _context6.next = 6;\n                break;\n              }\n\n              res.status(401).send();\n              return _context6.abrupt(\"return\", false);\n\n            case 6:\n              return _context6.abrupt(\"return\", next());\n\n            case 9:\n              res.status(401).send();\n\n            case 10:\n              return _context6.abrupt(\"return\", false);\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", res.status(401).send());\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 13]]);\n    }))();\n  },\n  changeUserPassword: function changeUserPassword(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var db, user, newPasswordTransformed, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context7.sent;\n              _context7.next = 5;\n              return db.collection(\"users\").findOne({\n                email: userData.email\n              });\n\n            case 5:\n              user = _context7.sent;\n              _context7.t0 = user && user.password;\n\n              if (!_context7.t0) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 10;\n              return _bcrypt[\"default\"].compare(userData.oldPassword, user.password);\n\n            case 10:\n              _context7.t0 = _context7.sent;\n\n            case 11:\n              if (!_context7.t0) {\n                _context7.next = 19;\n                break;\n              }\n\n              _context7.next = 14;\n              return _bcrypt[\"default\"].hash(userData.newPassword, 8);\n\n            case 14:\n              newPasswordTransformed = _context7.sent;\n              _context7.next = 17;\n              return db.collection('users').updateOne({\n                _id: user._id\n              }, {\n                $set: {\n                  password: newPasswordTransformed\n                }\n              });\n\n            case 17:\n              result = _context7.sent;\n              return _context7.abrupt(\"return\", result.modifiedCount == 1);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "register",
        "userData",
        "Object",
        "entries",
        "key",
        "value",
        "res",
        "json",
        "status",
        "partner",
        "bcrypt",
        "hash",
        "password",
        "Date",
        "now",
        "user",
        "date_created",
        "jmbag",
        "account_type",
        "name",
        "surname",
        "technology",
        "year",
        "company",
        "adress",
        "about_us",
        "website",
        "contact_email",
        "contact_number",
        "telephone_number",
        "img_url",
        "insertOne",
        "insertResult",
        "insertedId",
        "userID",
        "code",
        "Error",
        "authenticateUser",
        "findOne",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "isValidUser",
        "req",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "send",
        "verify",
        "isStudent",
        "accountType",
        "isPartner",
        "path",
        "method",
        "changeUserPassword",
        "oldPassword",
        "newPassword",
        "newPasswordTransformed",
        "updateOne",
        "_id",
        "$set",
        "result",
        "modifiedCount"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db'\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n(async () => {\r\n    let db = await connect();\r\n    db.collection('users').createIndex({ email: 1 }, { unique: true });\r\n})();\r\n\r\n\r\nexport default {\r\n    async register(userData){\r\n\r\n        for (const [key, value] of Object.entries(userData)) {\r\n            if(!value){\r\n              res.json({status: 'Missing data'})\r\n              return\r\n            }\r\n        }\r\n\r\n        let db = await connect()\r\n\r\n        let partner = {}\r\n        \r\n        let user = {\r\n            email: userData.email,\r\n            password: await bcrypt.hash(userData.password, 8),\r\n            date_created: Date.now()\r\n        }\r\n\r\n\r\n        if(userData.jmbag){\r\n            user.account_type = 'Student',\r\n            user.jmbag = userData.jmbag,\r\n            user.name = userData.name,\r\n            user.surname = userData.surname,\r\n            user.technology = userData.technology\r\n            user.year= userData.year\r\n        } else{\r\n            user.account_type = 'Poslodavac',\r\n            partner.company = userData.name\r\n            partner.technology= userData.technology,\r\n            partner.adress = userData.adress,\r\n            partner.about_us = userData.about_us,\r\n            partner.website = userData.website,\r\n            partner.date_created = Date.now()\r\n            partner.contact_email = userData.contact_email,\r\n            partner.contact_number = userData.telephone_number\r\n            partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80'\r\n        }\r\n        \r\n\r\n        try{\r\n            let insertResult = await db.collection('users').insertOne(user);\r\n      \r\n            if(insertResult && insertResult.insertedId){\r\n                delete user.password\r\n                partner.userID = ObjectID(insertResult.insertedId)\r\n\r\n                return partner \r\n            }\r\n        }\r\n        catch(e){\r\n            if (e.name ==\"MongoError\" && e.code == 11000){\r\n                throw new Error(\"User already exists\")\r\n            }\r\n        }   \r\n\r\n\r\n    },\r\n\r\n\r\n    async authenticateUser(email,password){\r\n        let db = await connect()\r\n        let user = await db.collection(\"users\").findOne({email : email})\r\n\r\n        // provjerava da li je ovaj hesh u bazi izveden iz cistog passworda\r\n        if(user && user.password && (await bcrypt.compare(password, user.password))){\r\n            //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \r\n            //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\r\n            //naš token sadrži sve podatke o useru\r\n            //password nije potrebno spremati u token jer smo ga već provjerili\r\n            delete user.password\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm: \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            })\r\n            \r\n            user.token = token\r\n\r\n            return user \r\n\r\n        }\r\n        else {\r\n            throw new Error('Cannot authenticate')\r\n        }\r\n    },\r\n\r\n\r\n    async isValidUser(req,res, next){\r\n        \r\n        try{\r\n            let authorization = req.headers.authorization.split(' ')\r\n            let type = authorization[0]\r\n            let token = authorization[1]\r\n            \r\n    \r\n            if (type != 'Bearer'){\r\n                //console.log('type:' + type)\r\n               \r\n                res.status(401).send()\r\n                return false;\r\n            }\r\n            else {\r\n                //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\r\n                //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\r\n  \r\n                req.jwt = jwt.verify(token, process.env.JWT_SECRET)\r\n                \r\n                return next()\r\n            }\r\n        }\r\n        catch(e){\r\n\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n    async isStudent(req,res, next){\r\n        \r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            \r\n            if (accountType ===  'Student' )  return next() \r\n            //fali jos return false u else ako nece funkcionirati\r\n            else  res.status(401).send()\r\n\r\n        }\r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n    async isPartner(req,res, next){\r\n        \r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            if (accountType ===  'Poslodavac'   ||   accountType === 'Admin')  {\r\n                //poslodavac nema pristup kreiranju i brisanju poslodavaca odnosno partnera \r\n                if(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE') ){\r\n                        res.status(401).send()\r\n                        return false\r\n                }\r\n\r\n                return next() \r\n            }\r\n            else  {\r\n                res.status(401).send()}\r\n                return false\r\n            }\r\n\r\n        \r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n    \r\n\r\n\r\n    async changeUserPassword(userData){\r\n        let db = await connect()\r\n \r\n        let user = await db.collection(\"users\").findOne({email : userData.email})\r\n        \r\n\r\n        if (user && user.password && (await bcrypt.compare(userData.oldPassword, user.password))){\r\n            let newPasswordTransformed = await bcrypt.hash(userData.newPassword, 8)\r\n\r\n            let result = await db.collection('users').updateOne(\r\n                { _id: user._id },\r\n                {\r\n                    $set: {\r\n                        password: newPasswordTransformed,\r\n                    },\r\n                }\r\n            );\r\n            return result.modifiedCount == 1;\r\n        }\r\n    }\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1597594877417
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\methods.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "methods.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar methods = {\n  validateData: function validateData(data) {\n    for (var _i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      if (!value && key != 'views') {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  // jer je skoro identičan postupak za dodavanje partnera i projekta\n  pushData: function () {\n    var _pushData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data, collectionName) {\n      var db, getPartner, insertResult, id;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 2:\n              _context.next = 4;\n              return (0, _db[\"default\"])();\n\n            case 4:\n              db = _context.sent;\n              _context.prev = 5;\n\n              if (!(collectionName === 'projects')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(data.userID)\n              });\n\n            case 9:\n              getPartner = _context.sent;\n              data.partnerID = getPartner._id;\n\n            case 11:\n              _context.next = 13;\n              return db.collection(collectionName).insertOne(data);\n\n            case 13:\n              insertResult = _context.sent;\n              id = insertResult.insertedId;\n\n              if (!(insertResult && id)) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\", id);\n\n            case 17:\n              return _context.abrupt(\"return\", id);\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](5);\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 20]]);\n    }));\n\n    function pushData(_x, _x2) {\n      return _pushData.apply(this, arguments);\n    }\n\n    return pushData;\n  }(),\n  addPartner: function () {\n    var _addPartner = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(partnerData) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              delete partnerData.account_type;\n              partnerData.views = 0;\n              _context2.next = 5;\n              return methods.pushData(partnerData, 'partners');\n\n            case 5:\n              result = _context2.sent;\n              console.log('res', result);\n              return _context2.abrupt(\"return\", result);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.status(500).json({\n                error: _context2.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    function addPartner(_x3) {\n      return _addPartner.apply(this, arguments);\n    }\n\n    return addPartner;\n  }(),\n  // identičan postupak za promjenu info partnera i projekta\n  changeInfo: function () {\n    var _changeInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, collectionName) {\n      var db, result, id;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n\n              if (data._id == null) {\n                id = data.id;\n                delete data.id;\n              } else {\n                id = data._id;\n                delete data._id;\n              } //za ovakav update više odgovara put, a ne patch?\n\n\n              if (!(data.updateDoc === 'true')) {\n                _context3.next = 11;\n                break;\n              }\n\n              delete data.updateDoc;\n              _context3.next = 8;\n              return db.collection(collectionName).updateOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, {\n                $set: data\n              });\n\n            case 8:\n              result = _context3.sent;\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.next = 13;\n              return db.collection(collectionName).deleteOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 13:\n              result = _context3.sent;\n\n            case 14:\n              if (!(result.modifiedCount == 1 || result.deletedCount == 1)) {\n                _context3.next = 18;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'success');\n\n            case 18:\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function changeInfo(_x4, _x5) {\n      return _changeInfo.apply(this, arguments);\n    }\n\n    return changeInfo;\n  }(),\n  //nece trebati ako su imena atributa ista\n  mapAttributes: function () {\n    var _mapAttributes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(projectData) {\n      var project;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              project = {\n                company: projectData.company,\n                project_description: projectData.description,\n                date_created: Date.now(),\n                contact: projectData.contact,\n                technologies: projectData.technologies,\n                preferences: projectData.preferences,\n                requirements: projectData.requirements,\n                duration: projectData.duration,\n                location: projectData.location,\n                note: projectData.note\n              };\n              return _context4.abrupt(\"return\", project);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function mapAttributes(_x6) {\n      return _mapAttributes.apply(this, arguments);\n    }\n\n    return mapAttributes;\n  }(),\n  //  identičan postupak za pretragu partnera i projekta\n  search: function () {\n    var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(query, atributi, collectionName) {\n      var db, selekcija, pretraga, terms, cursor, results;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              selekcija = {};\n\n              if (query._any) {\n                pretraga = query._any;\n                terms = pretraga.split(' ');\n                console.log('terms:', terms);\n                selekcija = {\n                  $and: []\n                };\n                /*\r\n                terms.map(function(term){\r\n                    let or = { $or: [] };\r\n                    atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                    selekcija.$and.push(or);\r\n                })\r\n                */\n\n                terms.forEach(function (term) {\n                  var or = {\n                    $or: []\n                  };\n                  atributi.forEach(function (atribut) {\n                    or.$or.push(_defineProperty({}, atribut, new RegExp(term, \"i\")));\n                  });\n                  selekcija.$and.push(or);\n                });\n              }\n\n              _context5.next = 7;\n              return db.collection(collectionName).find(selekcija).sort({\n                company: 1\n              });\n\n            case 7:\n              cursor = _context5.sent;\n              _context5.next = 10;\n              return cursor.toArray();\n\n            case 10:\n              results = _context5.sent;\n              results.forEach(function (doc) {\n                doc.id = doc._id;\n                delete doc._id;\n              });\n              return _context5.abrupt(\"return\", results);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function search(_x7, _x8, _x9) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }()\n};\nvar _default = methods;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "methods.js"
      ],
      "names": [
        "methods",
        "validateData",
        "data",
        "Object",
        "entries",
        "key",
        "value",
        "pushData",
        "collectionName",
        "Error",
        "db",
        "collection",
        "findOne",
        "userID",
        "getPartner",
        "partnerID",
        "_id",
        "insertOne",
        "insertResult",
        "id",
        "insertedId",
        "addPartner",
        "partnerData",
        "account_type",
        "views",
        "result",
        "console",
        "log",
        "res",
        "status",
        "json",
        "error",
        "message",
        "changeInfo",
        "updateDoc",
        "updateOne",
        "$set",
        "deleteOne",
        "modifiedCount",
        "deletedCount",
        "mapAttributes",
        "projectData",
        "project",
        "company",
        "project_description",
        "description",
        "date_created",
        "Date",
        "now",
        "contact",
        "technologies",
        "preferences",
        "requirements",
        "duration",
        "location",
        "note",
        "search",
        "query",
        "atributi",
        "selekcija",
        "_any",
        "pretraga",
        "terms",
        "split",
        "$and",
        "forEach",
        "term",
        "or",
        "$or",
        "atribut",
        "push",
        "RegExp",
        "find",
        "sort",
        "cursor",
        "toArray",
        "results",
        "doc"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "/* Svrha ovog filea je odvojiti metode odnosno funkcije od ruta i handlera radi preglednosti, a metode su pisane radi redundancije koda */\r\nimport connect from './db.js'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n\r\n\r\nlet methods  = {\r\n\r\n\r\n    validateData : (data) => {\r\n        for (const [key, value] of Object.entries(data)) {\r\n            if(!value && key != 'views'){\r\n\r\n              return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n\r\n    \r\n\r\n    // jer je skoro identičan postupak za dodavanje partnera i projekta\r\n    pushData : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n\r\n            throw new Error(\"Error accured during inserting project or partner\")        \r\n        }\r\n            \r\n        let db = await connect()\r\n\r\n        \r\n        try{\r\n            \r\n            \r\n            //projektu pridodajemo partnerID radi lakšeg mapiranja i rada s podacima\r\n            if(collectionName === 'projects') {\r\n                let getPartner  = await db.collection(\"partners\").findOne({userID: ObjectID(data.userID)})\r\n                data.partnerID = getPartner._id\r\n            }\r\n            \r\n            \r\n            let insertResult = await db.collection(collectionName).insertOne(data);\r\n            let id = insertResult.insertedId\r\n\r\n            if(insertResult && id){ \r\n                 // 1. način\r\n                 return id\r\n                }\r\n                \r\n                /*\r\n                // pushanje projectId-a u listu projekata određenog partnera, 2. način\r\n\r\n                if(collectionName === 'projects'){\r\n                    let partnerID = data.partnerID\r\n                    delete data.partnerID\r\n                    \r\n                    await db.collection('partners').updateOne( { _id: ObjectID(partnerID) },{$addToSet:{ \"projects\": id}}, true);\r\n                }\r\n                */\r\n                return id\r\n            }\r\n        \r\n        catch(e){\r\n                throw new Error(\"Error accured during inserting project or partner\")\r\n        } \r\n    },\r\n\r\n\r\n   \r\n    addPartner : async (partnerData) => {\r\n        \r\n        try{\r\n            delete partnerData.account_type\r\n            partnerData.views = 0\r\n\r\n            let result = await methods.pushData(partnerData, 'partners')\r\n            console.log('res',result)\r\n            return result\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n    // identičan postupak za promjenu info partnera i projekta\r\n    changeInfo : async (data, collectionName) => {\r\n        let db = await connect();\r\n        let result, id \r\n\r\n        if (data._id == null){\r\n            id = data.id\r\n            delete data.id\r\n        }else{\r\n            id = data._id\r\n            delete data._id\r\n        }\r\n        \r\n        \r\n        //za ovakav update više odgovara put, a ne patch?\r\n        if (data.updateDoc==='true') {\r\n            delete data.updateDoc\r\n            result = await db.collection(collectionName).updateOne( { _id: ObjectID(id) },{ $set: data, });\r\n        } \r\n            \r\n        else    result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } )\r\n\r\n        // 2 način\r\n        /*\r\n        else{\r\n            await db.collection('partners').updateOne( {}, {\r\n                $pull: { _id: ObjectID(id)  } } \r\n              )\r\n\r\n            result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } );\r\n        } \r\n        */\r\n\r\n        if (result.modifiedCount == 1 || result.deletedCount == 1)  return 'success'\r\n        else return 'fail'\r\n    },\r\n\r\n\r\n    //nece trebati ako su imena atributa ista\r\n    mapAttributes : async (projectData) =>{\r\n     \r\n        let project = {\r\n                company: projectData.company,\r\n                project_description: projectData.description,\r\n                date_created: Date.now(),\r\n                contact: projectData.contact,\r\n                technologies: projectData.technologies,\r\n                preferences: projectData.preferences,\r\n                requirements: projectData.requirements,\r\n                duration: projectData.duration,\r\n                location: projectData.location,\r\n                note: projectData.note,\r\n        }\r\n        return project\r\n    },\r\n\r\n\r\n    \r\n    //  identičan postupak za pretragu partnera i projekta\r\n    search : async (query, atributi, collectionName) =>{\r\n        let db = await connect()\r\n\r\n        let selekcija = {}\r\n        \r\n        if(query._any){\r\n            let pretraga = query._any\r\n            let terms = pretraga.split(' ')\r\n            console.log('terms:',terms)\r\n\r\n            selekcija = {\r\n                $and: []\r\n            }\r\n\r\n            /*\r\n            terms.map(function(term){\r\n                let or = { $or: [] };\r\n                atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                selekcija.$and.push(or);\r\n            })\r\n            */\r\n            \r\n            \r\n            terms.forEach((term) => {\r\n                let or = {\r\n                    $or: []\r\n                };\r\n\r\n                atributi.forEach(atribut => {\r\n                    or.$or.push({ [atribut]: new RegExp(term, \"i\") });\r\n                })\r\n                selekcija.$and.push(or);\r\n            });\r\n            \r\n            \r\n     }\r\n\r\n        let cursor = await db.collection(collectionName).find(selekcija).sort({company: 1})\r\n\r\n        let results =  await cursor.toArray()\r\n\r\n        results.forEach(doc => {\r\n            doc.id = doc._id\r\n            delete doc._id\r\n        })\r\n\r\n\r\n        return results\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1597738739250
  }
}