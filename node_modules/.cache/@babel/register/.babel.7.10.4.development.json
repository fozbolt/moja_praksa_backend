{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json({\n  limit: '50mb',\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].urlencoded({\n  limit: '50mb',\n  extended: true\n}));\napp.get('/', _routes[\"default\"].home);\napp.patch('/', _routes[\"default\"].addView);\napp.post('/register', _routes[\"default\"].registration);\napp.post('/login', _routes[\"default\"].login);\napp.patch('/register', [_auth[\"default\"].isValidUser], _routes[\"default\"].changePassword); //register? bolje change_password, ali onda je to nova ruta\n\napp.patch('/journal', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isStudent], _routes[\"default\"].submitJournal);\napp.post('/application_form', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isStudent], _routes[\"default\"].applicationForm);\napp.get('/instructions', _routes[\"default\"].getInstructions);\napp.patch('/instructions', _routes[\"default\"].changeInstructions); //[auth.isAdmin]\n\napp.patch('/template', _routes[\"default\"].uploadTemplate); //[auth.isAdmin]\n\napp.get('/template', _routes[\"default\"].getJournalTemplate); //  [auth.isValidUser], [auth.isStudent],  vratiti kad se rijesi bug\n\napp.patch('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo);\napp[\"delete\"]('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo); //students\n//app.get('/students/:id', routes.getOneStudent)\n\napp.get('/students', _routes[\"default\"].getStudents); //[auth.isAdmin]\n\napp.get('/journal/:id', _routes[\"default\"].getJournal); //[auth.isAdmin]\n//projects\n\napp.get('/projects', _routes[\"default\"].getProjects);\napp.post('/projects', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isPartner], _routes[\"default\"].addProject);\napp.get('/projects/:id', _routes[\"default\"].getOneProject);\napp.put('/projects/:id', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isPartner], _routes[\"default\"].changeProjectInfo);\napp[\"delete\"]('/projects/:id', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isPartner], _routes[\"default\"].changeProjectInfo);\napp.patch('/chosen_projects', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isStudent], _routes[\"default\"].submitChosenProjects);\napp.get('/chosen_projects/:id', _routes[\"default\"].getChosenProjects); //tu fali middleweara, staviti naknadno kad stjepan promijeni front\n//partners\n\napp.get('/partners', _routes[\"default\"].getPartners);\napp.get('/partners/:id', _routes[\"default\"].getOnePartner);\napp.put('/partners/:id', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isPartner], _routes[\"default\"].changePartnerInfo);\napp[\"delete\"]('/partners/:id', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isPartner], _routes[\"default\"].changePartnerInfo);\napp.get('/partner_projects/:id', _routes[\"default\"].getPartnerProjects);\napp.post('/partners', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isPartner], _routes[\"default\"].createPartner); //dovrsiti\n\napp.get('/check_partner/:id', _routes[\"default\"].checkIfPartner); // [auth.isValidUser], [auth.isPartner] isto naknadno\n\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "limit",
        "extended",
        "urlencoded",
        "get",
        "routes",
        "home",
        "patch",
        "addView",
        "post",
        "registration",
        "login",
        "auth",
        "isValidUser",
        "changePassword",
        "isStudent",
        "submitJournal",
        "applicationForm",
        "getInstructions",
        "changeInstructions",
        "uploadTemplate",
        "getJournalTemplate",
        "changeUserInfo",
        "getStudents",
        "getJournal",
        "getProjects",
        "isPartner",
        "addProject",
        "getOneProject",
        "put",
        "changeProjectInfo",
        "submitChosenProjects",
        "getChosenProjects",
        "getPartners",
        "getOnePartner",
        "changePartnerInfo",
        "getPartnerProjects",
        "createPartner",
        "checkIfPartner",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport routes from './routes'; \r\nimport cors from 'cors'\r\nimport auth from './auth.js'\r\n\r\n\r\nconst app = express() // instanciranje aplikacije\r\nconst port = 3000 // port na kojem će web server slušati\r\n\r\napp.use(cors())\r\n\r\napp.use(bodyParser.json({limit: '50mb', extended: true}))\r\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}))\r\n\r\n\r\n\r\napp.get('/', routes.home)\r\napp.patch('/', routes.addView)\r\napp.post('/register', routes.registration)\r\napp.post('/login', routes.login)\r\napp.patch('/register', [auth.isValidUser], routes.changePassword) //register? bolje change_password, ali onda je to nova ruta\r\napp.patch('/journal', [auth.isValidUser], [auth.isStudent], routes.submitJournal) \r\napp.post('/application_form', [auth.isValidUser], [auth.isStudent], routes.applicationForm)  \r\napp.get('/instructions', routes.getInstructions) \r\napp.patch('/instructions', routes.changeInstructions) //[auth.isAdmin]\r\napp.patch('/template', routes.uploadTemplate) //[auth.isAdmin]\r\napp.get('/template', routes.getJournalTemplate)  //  [auth.isValidUser], [auth.isStudent],  vratiti kad se rijesi bug\r\napp.patch('/user', [auth.isValidUser], routes.changeUserInfo) \r\napp.delete('/user', [auth.isValidUser], routes.changeUserInfo)\r\n\r\n\r\n//students\r\n//app.get('/students/:id', routes.getOneStudent)\r\napp.get('/students', routes.getStudents) //[auth.isAdmin]\r\napp.get('/journal/:id', routes.getJournal) //[auth.isAdmin]\r\n\r\n\r\n//projects\r\napp.get('/projects', routes.getProjects)\r\napp.post('/projects', [auth.isValidUser], [auth.isPartner], routes.addProject)\r\napp.get('/projects/:id', routes.getOneProject)\r\napp.put('/projects/:id', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \r\napp.delete('/projects/:id',  [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \r\napp.patch('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.submitChosenProjects) \r\napp.get('/chosen_projects/:id',  routes.getChosenProjects) //tu fali middleweara, staviti naknadno kad stjepan promijeni front\r\n\r\n\r\n//partners\r\napp.get('/partners', routes.getPartners)\r\napp.get('/partners/:id', routes.getOnePartner)\r\napp.put('/partners/:id', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) \r\napp.delete('/partners/:id', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo)   \r\napp.get('/partner_projects/:id', routes.getPartnerProjects)\r\napp.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) //dovrsiti\r\napp.get('/check_partner/:id', routes.checkIfPartner) // [auth.isValidUser], [auth.isPartner] isto naknadno\r\n\r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1598349144056
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _methods = _interopRequireDefault(require(\"./methods.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  getChosenProjects: function getChosenProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var studentID, db, cursor, projects, result, attributes;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              studentID = req.params.id;\n              _context.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context.sent;\n              _context.next = 6;\n              return db.collection('projects').find();\n\n            case 6:\n              cursor = _context.sent;\n              _context.next = 9;\n              return cursor.toArray();\n\n            case 9:\n              projects = _context.sent;\n              result = [];\n              attributes = ['first_priority', 'second_priority', 'third_priority'];\n              attributes.forEach(function (attribute) {\n                var match = projects.filter(function (project) {\n                  var priority = undefined;\n\n                  try {\n                    priority = project.selected_by[attribute];\n\n                    if (priority.includes(studentID)) {\n                      result.push(project._id);\n                    }\n                  } catch (_unused) {}\n                });\n              });\n              res.json(result);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  //slicna kao neke funkcije, spojiti?\n  getJournal: function getJournal(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var journalID, db, journal;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              journalID = req.params.id;\n              _context2.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context2.sent;\n              _context2.prev = 4;\n              _context2.next = 7;\n              return db.collection(\"journals\").findOne({\n                _id: (0, _mongodb.ObjectID)(journalID)\n              });\n\n            case 7:\n              journal = _context2.sent;\n              res.json(journal);\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.log(_context2.t0);\n              res.json({\n                error: _context2.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 11]]);\n    }))();\n  },\n  changeUserInfo: function changeUserInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var userInfo, obj, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userInfo = req.body;\n              obj = req.route.methods;\n              userInfo.method = Object.keys(obj).toString();\n              _context3.next = 5;\n              return _methods[\"default\"].changeInfo(userInfo, 'users');\n\n            case 5:\n              response = _context3.sent;\n              res.send(response);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  //skoro identicna kao getonePartner, spojiti u jednu?\n  checkIfPartner: function checkIfPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var id, db, data;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              id = req.params.id;\n              _context4.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context4.sent;\n              _context4.next = 6;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 6:\n              data = _context4.sent;\n              if (!data) res.status(401).json({\n                error: 'user is not a partner'\n              });\n              res.json(data);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  getJournalTemplate: function getJournalTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var db, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              _context5.next = 5;\n              return db.collection(\"content\").findOne();\n\n            case 5:\n              result = _context5.sent;\n              res.json(result.template);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  uploadTemplate: function uploadTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var db, content, data, obj, result;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context6.sent;\n              _context6.next = 5;\n              return db.collection('content').findOne();\n\n            case 5:\n              content = _context6.sent;\n              data = {\n                template: req.body,\n                id: content._id,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              data.method = Object.keys(obj).toString();\n              _context6.prev = 9;\n              _context6.next = 12;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 12:\n              result = _context6.sent;\n              res.send(\"\".concat(result, \" at changing template.\"));\n              _context6.next = 19;\n              break;\n\n            case 16:\n              _context6.prev = 16;\n              _context6.t0 = _context6[\"catch\"](9);\n              res.status(500).json({\n                error: _context6.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[9, 16]]);\n    }))();\n  },\n  changeInstructions: function changeInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var db, content, data, obj, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context7.sent;\n              _context7.next = 5;\n              return db.collection('content').findOne();\n\n            case 5:\n              content = _context7.sent;\n              data = {\n                instructions: req.body,\n                id: content._id,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              data.method = Object.keys(obj).toString();\n              _context7.prev = 9;\n              _context7.next = 12;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 12:\n              result = _context7.sent;\n              res.send(\"\".concat(result, \" at changing instructions.\"));\n              _context7.next = 19;\n              break;\n\n            case 16:\n              _context7.prev = 16;\n              _context7.t0 = _context7[\"catch\"](9);\n              res.status(500).json({\n                error: _context7.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[9, 16]]);\n    }))();\n  },\n  getInstructions: function getInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      var db, result;\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context8.sent;\n              console.log(req);\n              _context8.next = 6;\n              return db.collection(\"content\").findOne();\n\n            case 6:\n              result = _context8.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result.instructions);\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  },\n  applicationForm: function applicationForm(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      var formData, obj, db, appExists, result;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              formData = {\n                id: req.body.userID,\n                application: req.body.form,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              formData.method = Object.keys(obj).toString();\n              _context9.next = 5;\n              return (0, _db[\"default\"])();\n\n            case 5:\n              db = _context9.sent;\n              _context9.next = 8;\n              return db.collection('users').find({\n                _id: (0, _mongodb.ObjectID)(formData.id),\n                application: {\n                  $exists: true\n                }\n              });\n\n            case 8:\n              appExists = _context9.sent;\n              _context9.prev = 9;\n\n              if (!(appExists == true)) {\n                _context9.next = 12;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting\");\n\n            case 12:\n              _context9.next = 14;\n              return _methods[\"default\"].changeInfo(formData, 'users');\n\n            case 14:\n              result = _context9.sent;\n              res.send(\"\".concat(result, \" at inserting application.\"));\n              _context9.next = 21;\n              break;\n\n            case 18:\n              _context9.prev = 18;\n              _context9.t0 = _context9[\"catch\"](9);\n              res.status(500).json({\n                error: _context9.t0.message\n              });\n\n            case 21:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[9, 18]]);\n    }))();\n  },\n  //refaktorirati\n  submitJournal: function submitJournal(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      var data, db, journal, user, obj;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              data = {\n                userID: req.body.user_id,\n                journal: req.body.journal,\n                upload_date: Date.now() // Date(Date.now())\n\n              };\n              _context10.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context10.sent;\n              _context10.prev = 4;\n              _context10.next = 7;\n              return db.collection('journals').insertOne(data);\n\n            case 7:\n              journal = _context10.sent;\n              _context10.prev = 8;\n              user = {\n                id: data.userID,\n                journalID: journal.insertedId,\n                updateDoc: 'true'\n              };\n              obj = req.route.methods;\n              user.method = Object.keys(obj).toString();\n              _context10.next = 14;\n              return _methods[\"default\"].changeInfo(user, 'users');\n\n            case 14:\n              res.json(true); //res.json({message: 'upload successful'})\n\n              _context10.next = 21;\n              break;\n\n            case 17:\n              _context10.prev = 17;\n              _context10.t0 = _context10[\"catch\"](8);\n              res.send('Error accured during connecting journal ID with user');\n              return _context10.abrupt(\"return\", false);\n\n            case 21:\n              _context10.next = 26;\n              break;\n\n            case 23:\n              _context10.prev = 23;\n              _context10.t1 = _context10[\"catch\"](4);\n              res.json(false); //res.json({error:e.message })\n\n            case 26:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[4, 23], [8, 17]]);\n    }))();\n  },\n  getOneProject: function getOneProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              id = req.params.id;\n              _context11.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context11.sent;\n              _context11.prev = 4;\n              _context11.next = 7;\n              return db.collection(\"projects\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context11.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context11.next = 16;\n              break;\n\n            case 13:\n              _context11.prev = 13;\n              _context11.t0 = _context11[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context11.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[4, 13]]);\n    }))();\n  },\n  getPartnerProjects: function getPartnerProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var partnerID, db, cursor, results;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              partnerID = req.params.id;\n              _context12.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context12.sent;\n              _context12.next = 6;\n              return db.collection(\"projects\").find({\n                partnerID: (0, _mongodb.ObjectID)(partnerID)\n              });\n\n            case 6:\n              cursor = _context12.sent;\n              _context12.next = 9;\n              return cursor.toArray();\n\n            case 9:\n              results = _context12.sent;\n              res.send(results);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }))();\n  },\n  addView: function addView(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var data, collectionName, obj, result;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              data = req.body;\n              data.updateDoc = 'true';\n              collectionName = data.collectionName;\n              delete data.collectionName;\n              obj = req.route.methods;\n              data.method = Object.keys(obj).toString();\n              _context13.next = 8;\n              return _methods[\"default\"].changeInfo(data, collectionName);\n\n            case 8:\n              result = _context13.sent;\n              res.json(result);\n\n            case 10:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }))();\n  },\n  getOnePartner: function getOnePartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              //ne vraca gresku kad je id nepostojeci\n              id = req.params.id;\n              _context14.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context14.sent;\n              _context14.prev = 4;\n              _context14.next = 7;\n              return db.collection(\"partners\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context14.sent;\n              result.id = result._id;\n              delete result._id;\n\n              if (result.id) {\n                _context14.next = 12;\n                break;\n              }\n\n              throw new Error('id is undefined');\n\n            case 12:\n              res.json(result);\n              _context14.next = 18;\n              break;\n\n            case 15:\n              _context14.prev = 15;\n              _context14.t0 = _context14[\"catch\"](4);\n              res.json({\n                error: _context14.t0.message\n              });\n\n            case 18:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[4, 15]]);\n    }))();\n  },\n  changePassword: function changePassword(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var data, result;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              data = req.body; //dolazi iz metode isValidUser\n\n              data.email = req.jwt.email;\n\n              if (!(data.newPassword && data.oldPassword)) {\n                _context15.next = 9;\n                break;\n              }\n\n              _context15.next = 5;\n              return _auth[\"default\"].changeUserPassword(data);\n\n            case 5:\n              result = _context15.sent;\n\n              if (result) {\n                res.status(201).send({\n                  status: 'Success'\n                });\n              } else {\n                res.status(500).json({\n                  error: 'Server error'\n                });\n              }\n\n              _context15.next = 10;\n              break;\n\n            case 9:\n              res.status(400).json({\n                error: \"Invalid input data\"\n              });\n\n            case 10:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }))();\n  },\n  login: function login(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      var user, result;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              user = req.body;\n              _context16.prev = 1;\n              _context16.next = 4;\n              return _auth[\"default\"].authenticateUser(user.email, user.password);\n\n            case 4:\n              result = _context16.sent;\n              res.json(result);\n              _context16.next = 11;\n              break;\n\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](1);\n              res.status(401).json({\n                error: _context16.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[1, 8]]);\n    }))();\n  },\n  registration: function registration(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var newUser, partner, result;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              newUser = req.body;\n              _context17.prev = 1;\n              _context17.next = 4;\n              return _auth[\"default\"].register(newUser);\n\n            case 4:\n              partner = _context17.sent;\n\n              if (!(newUser.account_type === ('poslodavac' || 'Poslodavac'))) {\n                _context17.next = 9;\n                break;\n              }\n\n              _context17.next = 8;\n              return _methods[\"default\"].addPartner(partner);\n\n            case 8:\n              result = _context17.sent;\n\n            case 9:\n              console.log(result);\n              res.json({\n                status: \"user with id \".concat(result, \" added\")\n              });\n              _context17.next = 16;\n              break;\n\n            case 13:\n              _context17.prev = 13;\n              _context17.t0 = _context17[\"catch\"](1);\n              res.status(500).json({\n                error: _context17.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[1, 13]]);\n    }))();\n  },\n  submitChosenProjects: function submitChosenProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var data, db, result, selectedBy, entries, _iterator, _step, _step$value, index, _step$value$, key, value, projectID;\n\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              data = req.body;\n              _context18.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context18.sent;\n              selectedBy = {\n                first_priority: [],\n                second_priority: [],\n                third_priority: []\n              }; //destrukcija strukture\n\n              entries = Object.entries(selectedBy);\n              _iterator = _createForOfIteratorHelper(entries.entries());\n              _context18.prev = 7;\n\n              _iterator.s();\n\n            case 9:\n              if ((_step = _iterator.n()).done) {\n                _context18.next = 18;\n                break;\n              }\n\n              _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], _step$value$ = _slicedToArray(_step$value[1], 2), key = _step$value$[0], value = _step$value$[1];\n              projectID = data.selection[index];\n              /* https://stackoverflow.com/questions/30969382/mongodb-object-key-with-es6-template-string  da bi bilo moguce dinamicki updejtati*/\n              // var attributeName\n              // let query = { \"_id\": projectID }\n              // let update = { \"$addToSet\": {} }\n              // update[\"$addToSet\"][attributeName] = data.user\n              //trik za prevariti mongo kompajler\n              // ili selectedBy[key] = 'selected_by. + key\n\n              key = 'selected_by.' + key;\n              _context18.next = 15;\n              return db.collection('projects').updateOne({\n                _id: (0, _mongodb.ObjectID)(projectID)\n              }, {\n                $addToSet: _defineProperty({}, key, data.user)\n              });\n\n            case 15:\n              result = _context18.sent;\n\n            case 16:\n              _context18.next = 9;\n              break;\n\n            case 18:\n              _context18.next = 23;\n              break;\n\n            case 20:\n              _context18.prev = 20;\n              _context18.t0 = _context18[\"catch\"](7);\n\n              _iterator.e(_context18.t0);\n\n            case 23:\n              _context18.prev = 23;\n\n              _iterator.f();\n\n              return _context18.finish(23);\n\n            case 26:\n              res.json(result);\n\n            case 27:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[7, 20, 23, 26]]);\n    }))();\n  },\n  changeProjectInfo: function changeProjectInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      var projectData, project, obj, response;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              projectData = req.body;\n              delete projectData.id;\n              project = {};\n\n              if (!(projectData && projectData.updateDoc === 'true')) {\n                _context19.next = 13;\n                break;\n              }\n\n              if (!projectData) {\n                _context19.next = 8;\n                break;\n              }\n\n              _context19.next = 7;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 7:\n              project = _context19.sent;\n\n            case 8:\n              if (!project.selected_by) delete project.selected_by;\n              project.partnerID = (0, _mongodb.ObjectID)(projectData.partnerID);\n              project.updateDoc = projectData.updateDoc; //console.log(req.route.methods[\"put\"]) pa onda true/false -> 2. nacin za dohvati vrstu requesta\n\n              obj = req.route.methods;\n              project.method = Object.keys(obj).toString();\n\n            case 13:\n              project.id = req.params.id;\n              if (!project.updateDoc) project.updateDoc = 'false';\n              _context19.next = 17;\n              return _methods[\"default\"].changeInfo(project, 'projects');\n\n            case 17:\n              response = _context19.sent;\n              res.send(response);\n\n            case 19:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }))();\n  },\n  changePartnerInfo: function changePartnerInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      var partnerInfo, obj, response;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              partnerInfo = req.body;\n              delete partnerInfo._id;\n              partnerInfo.id = req.params.id;\n              obj = req.route.methods;\n              partnerInfo.method = Object.keys(obj).toString();\n              if (!partnersInfo.updateDoc) partnersInfo.updateDoc = 'false';\n              _context20.next = 8;\n              return _methods[\"default\"].changeInfo(partnerInfo, 'partners');\n\n            case 8:\n              response = _context20.sent;\n              res.send(response);\n\n            case 10:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }))();\n  },\n  getStudents: function getStudents(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"name\", \"surname\", \"jmbag\", \"year\", \"technology\", \"email\", \"account_type\"];\n              _context21.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'users');\n\n            case 4:\n              result = _context21.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }))();\n  },\n  getProjects: function getProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"technologies\", \"location\", \"project_description\"];\n              _context22.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'projects');\n\n            case 4:\n              result = _context22.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }))();\n  },\n  getPartners: function getPartners(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"about_us\"];\n              _context23.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'partners');\n\n            case 4:\n              result = _context23.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }))();\n  },\n  addProject: function addProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n      var projectData, project, result;\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              projectData = req.body; // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\n\n              _context24.next = 3;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 3:\n              project = _context24.sent;\n              //slika je hardcodana jer nema bas smisla imati custom sliku projekta\n              project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\";\n              project.userID = projectData.userID;\n              project.views = 0;\n              project.allocated_to = projectData.allocated_to; //brisanje atributa koji su prazni kod inicijalizacije projekta da shodno tome ne aktivira validateData\n\n              if (!project.selected_by) delete project.selected_by;\n              _context24.prev = 9;\n              _context24.next = 12;\n              return _methods[\"default\"].pushData(project, 'projects');\n\n            case 12:\n              result = _context24.sent;\n              res.send(\"project with id  \".concat(result, \" added.\"));\n              _context24.next = 19;\n              break;\n\n            case 16:\n              _context24.prev = 16;\n              _context24.t0 = _context24[\"catch\"](9);\n              res.status(500).json({\n                error: _context24.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, null, [[9, 16]]);\n    }))();\n  },\n  createPartner: function createPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n      var partnerData, partnerID;\n      return regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              console.log('tu samm');\n              partnerData = req.body; // ako će trebati kad stjepan implementira\n              //let project = await methods.mapAttributes(projectData)\n              //dok stjepan ne implementira ce biti ovako hardcodano\n\n              partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"; //za raspoznavanje koji partneri su se sami kreirali, a koji ne\n\n              partnerData.created_by_admin = true;\n              _context25.prev = 4;\n              _context25.next = 7;\n              return _methods[\"default\"].pushData(partnerData, 'partners');\n\n            case 7:\n              partnerID = _context25.sent;\n              res.send(\"partner with id  \".concat(partnerID, \" added.\"));\n              _context25.next = 14;\n              break;\n\n            case 11:\n              _context25.prev = 11;\n              _context25.t0 = _context25[\"catch\"](4);\n              res.status(500).json({\n                error: _context25.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[4, 11]]);\n    }))();\n  },\n  home: function home(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n      var db, numberOfDocs;\n      return regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context26.sent;\n              numberOfDocs = {};\n              _context26.next = 6;\n              return db.collection(\"projects\").countDocuments();\n\n            case 6:\n              numberOfDocs.projectsCounter = _context26.sent;\n              _context26.next = 9;\n              return db.collection(\"partners\").countDocuments();\n\n            case 9:\n              numberOfDocs.partnersCounter = _context26.sent;\n              _context26.next = 12;\n              return db.collection(\"users\").countDocuments({\n                account_type: 'Student'\n              });\n\n            case 12:\n              numberOfDocs.studentsCounter = _context26.sent;\n              res.json(numberOfDocs);\n\n            case 14:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJnZXRDaG9zZW5Qcm9qZWN0cyIsInJlcSIsInJlcyIsInN0dWRlbnRJRCIsInBhcmFtcyIsImlkIiwiZGIiLCJjb2xsZWN0aW9uIiwiZmluZCIsImN1cnNvciIsInRvQXJyYXkiLCJwcm9qZWN0cyIsInJlc3VsdCIsImF0dHJpYnV0ZXMiLCJmb3JFYWNoIiwiYXR0cmlidXRlIiwibWF0Y2giLCJmaWx0ZXIiLCJwcm9qZWN0IiwicHJpb3JpdHkiLCJ1bmRlZmluZWQiLCJzZWxlY3RlZF9ieSIsImluY2x1ZGVzIiwicHVzaCIsIl9pZCIsImpzb24iLCJnZXRKb3VybmFsIiwiam91cm5hbElEIiwiZmluZE9uZSIsImpvdXJuYWwiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJtZXNzYWdlIiwiY2hhbmdlVXNlckluZm8iLCJ1c2VySW5mbyIsImJvZHkiLCJvYmoiLCJyb3V0ZSIsIm1ldGhvZHMiLCJtZXRob2QiLCJPYmplY3QiLCJrZXlzIiwidG9TdHJpbmciLCJjaGFuZ2VJbmZvIiwicmVzcG9uc2UiLCJzZW5kIiwiY2hlY2tJZlBhcnRuZXIiLCJ1c2VySUQiLCJkYXRhIiwic3RhdHVzIiwiZ2V0Sm91cm5hbFRlbXBsYXRlIiwidGVtcGxhdGUiLCJ1cGxvYWRUZW1wbGF0ZSIsImNvbnRlbnQiLCJ1cGRhdGVEb2MiLCJjaGFuZ2VJbnN0cnVjdGlvbnMiLCJpbnN0cnVjdGlvbnMiLCJnZXRJbnN0cnVjdGlvbnMiLCJhcHBsaWNhdGlvbkZvcm0iLCJmb3JtRGF0YSIsImFwcGxpY2F0aW9uIiwiZm9ybSIsIiRleGlzdHMiLCJhcHBFeGlzdHMiLCJFcnJvciIsInN1Ym1pdEpvdXJuYWwiLCJ1c2VyX2lkIiwidXBsb2FkX2RhdGUiLCJEYXRlIiwibm93IiwiaW5zZXJ0T25lIiwidXNlciIsImluc2VydGVkSWQiLCJnZXRPbmVQcm9qZWN0IiwiZ2V0UGFydG5lclByb2plY3RzIiwicGFydG5lcklEIiwicmVzdWx0cyIsImFkZFZpZXciLCJjb2xsZWN0aW9uTmFtZSIsImdldE9uZVBhcnRuZXIiLCJjaGFuZ2VQYXNzd29yZCIsImVtYWlsIiwiand0IiwibmV3UGFzc3dvcmQiLCJvbGRQYXNzd29yZCIsImF1dGgiLCJjaGFuZ2VVc2VyUGFzc3dvcmQiLCJsb2dpbiIsImF1dGhlbnRpY2F0ZVVzZXIiLCJwYXNzd29yZCIsInJlZ2lzdHJhdGlvbiIsIm5ld1VzZXIiLCJyZWdpc3RlciIsInBhcnRuZXIiLCJhY2NvdW50X3R5cGUiLCJhZGRQYXJ0bmVyIiwic3VibWl0Q2hvc2VuUHJvamVjdHMiLCJzZWxlY3RlZEJ5IiwiZmlyc3RfcHJpb3JpdHkiLCJzZWNvbmRfcHJpb3JpdHkiLCJ0aGlyZF9wcmlvcml0eSIsImVudHJpZXMiLCJpbmRleCIsImtleSIsInZhbHVlIiwicHJvamVjdElEIiwic2VsZWN0aW9uIiwidXBkYXRlT25lIiwiJGFkZFRvU2V0IiwiY2hhbmdlUHJvamVjdEluZm8iLCJwcm9qZWN0RGF0YSIsIm1hcEF0dHJpYnV0ZXMiLCJjaGFuZ2VQYXJ0bmVySW5mbyIsInBhcnRuZXJJbmZvIiwicGFydG5lcnNJbmZvIiwiZ2V0U3R1ZGVudHMiLCJxdWVyeSIsImF0cmlidXRpIiwic2VhcmNoIiwiZ2V0UHJvamVjdHMiLCJnZXRQYXJ0bmVycyIsImFkZFByb2plY3QiLCJpbWdfdXJsIiwidmlld3MiLCJhbGxvY2F0ZWRfdG8iLCJwdXNoRGF0YSIsImNyZWF0ZVBhcnRuZXIiLCJwYXJ0bmVyRGF0YSIsImNyZWF0ZWRfYnlfYWRtaW4iLCJob21lIiwibnVtYmVyT2ZEb2NzIiwiY291bnREb2N1bWVudHMiLCJwcm9qZWN0c0NvdW50ZXIiLCJwYXJ0bmVyc0NvdW50ZXIiLCJzdHVkZW50c0NvdW50ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBR2U7QUFFTEEsRUFBQUEsaUJBRkssNkJBRWNDLEdBRmQsRUFFa0JDLEdBRmxCLEVBRXVCO0FBQUE7QUFB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QUFYbUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFZdEI7QUFya0JVLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxGSWxpcC1Qcm9ibmlcXG1vamFfcHJha3NhXFxtb2phX3ByYWtzYV9iYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25uZWN0IGZyb20gJy4vZGIuanMnXHJcbmltcG9ydCBhdXRoIGZyb20gJy4vYXV0aC5qcydcclxuaW1wb3J0IHsgT2JqZWN0SUQgfSBmcm9tICdtb25nb2RiJ1xyXG5pbXBvcnQgbWV0aG9kcyBmcm9tICcuL21ldGhvZHMuanMnXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cclxuICAgIGFzeW5jIGdldENob3NlblByb2plY3RzIChyZXEscmVzKSB7XHJcbiAgICAgICAgbGV0IHN0dWRlbnRJRCA9IHJlcS5wYXJhbXMuaWRcclxuXHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcbiAgICAgICAgbGV0IGN1cnNvciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3Byb2plY3RzJykuZmluZCgpXHJcbiAgICAgICAgbGV0IHByb2plY3RzID0gYXdhaXQgY3Vyc29yLnRvQXJyYXkoKVxyXG5cclxuICAgICAgICBsZXQgcmVzdWx0ID0gW107XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IGF0dHJpYnV0ZXMgPSBbJ2ZpcnN0X3ByaW9yaXR5JywgJ3NlY29uZF9wcmlvcml0eScsICd0aGlyZF9wcmlvcml0eSddXHJcblxyXG5cclxuICAgICAgICBhdHRyaWJ1dGVzLmZvckVhY2goYXR0cmlidXRlID0+IHtcclxuICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSBwcm9qZWN0cy5maWx0ZXIoZnVuY3Rpb24gKHByb2plY3QpIHtcclxuICAgICAgICAgICAgICAgIGxldCBwcmlvcml0eSA9IHVuZGVmaW5lZFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHkgPSBwcm9qZWN0LnNlbGVjdGVkX2J5W2F0dHJpYnV0ZV0gICAgXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcmlvcml0eS5pbmNsdWRlcyhzdHVkZW50SUQpKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gocHJvamVjdC5faWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAgICAgY2F0Y2ggeyB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG5cclxuICAgIH0sXHJcblxyXG5cclxuICAgIC8vc2xpY25hIGthbyBuZWtlIGZ1bmtjaWplLCBzcG9qaXRpP1xyXG4gICAgYXN5bmMgZ2V0Sm91cm5hbCAocmVxLHJlcykge1xyXG4gICAgICAgIGxldCBqb3VybmFsSUQgPSByZXEucGFyYW1zLmlkXHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgICAgXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBsZXQgam91cm5hbCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJqb3VybmFsc1wiKS5maW5kT25lKHtfaWQ6IE9iamVjdElEKGpvdXJuYWxJRCl9KVxyXG4gICAgICAgICAgICByZXMuanNvbihqb3VybmFsKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtlcnJvcjogZS5tZXNzYWdlfSlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgY2hhbmdlVXNlckluZm8gKHJlcSwgcmVzKSAge1xyXG5cclxuICAgICAgICBsZXQgdXNlckluZm8gPSByZXEuYm9keVxyXG4gICAgICAgIGxldCBvYmogPSByZXEucm91dGUubWV0aG9kc1xyXG5cclxuICAgICAgICB1c2VySW5mby5tZXRob2QgPSBPYmplY3Qua2V5cyhvYmopLnRvU3RyaW5nKClcclxuXHJcbiAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgbWV0aG9kcy5jaGFuZ2VJbmZvKHVzZXJJbmZvLCAndXNlcnMnKVxyXG5cclxuICAgICAgICByZXMuc2VuZChyZXNwb25zZSlcclxuICAgIH0sXHJcblxyXG4gICAgLy9za29ybyBpZGVudGljbmEga2FvIGdldG9uZVBhcnRuZXIsIHNwb2ppdGkgdSBqZWRudT9cclxuICAgIGFzeW5jIGNoZWNrSWZQYXJ0bmVyKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgICAgIGxldCBpZCA9IHJlcS5wYXJhbXMuaWRcclxuXHJcbiAgICAgICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInBhcnRuZXJzXCIpLmZpbmRPbmUoe3VzZXJJRCA6IE9iamVjdElEKGlkKX0pO1xyXG5cclxuICAgICAgICAgICAgaWYoIWRhdGEpICByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAndXNlciBpcyBub3QgYSBwYXJ0bmVyJ30pXHJcblxyXG4gICAgICAgICAgICByZXMuanNvbiAoZGF0YSk7XHJcbiAgICAgICAgXHJcbiAgICB9LFxyXG5cclxuICAgIGFzeW5jIGdldEpvdXJuYWxUZW1wbGF0ZShyZXEsIHJlcykge1xyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgXHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJjb250ZW50XCIpLmZpbmRPbmUoKVxyXG5cclxuICAgICAgICByZXMuanNvbihyZXN1bHQudGVtcGxhdGUpXHJcblxyXG4gICAgfSxcclxuXHJcbiAgICBhc3luYyB1cGxvYWRUZW1wbGF0ZShyZXEsIHJlcykge1xyXG4gICAgICAgIC8vcG9ib2xqc2F0aVxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KCk7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdjb250ZW50JykuZmluZE9uZSgpO1xyXG5cclxuICAgICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICAgICAgdGVtcGxhdGUgOiByZXEuYm9keSxcclxuICAgICAgICAgICAgaWQgOiBjb250ZW50Ll9pZCxcclxuICAgICAgICAgICAgdXBkYXRlRG9jIDogJ3RydWUnXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgb2JqID0gcmVxLnJvdXRlLm1ldGhvZHNcclxuICAgICAgICBkYXRhLm1ldGhvZCA9IE9iamVjdC5rZXlzKG9iaikudG9TdHJpbmcoKVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtZXRob2RzLmNoYW5nZUluZm8oZGF0YSwgJ2NvbnRlbnQnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVzLnNlbmQoYCR7cmVzdWx0fSBhdCBjaGFuZ2luZyB0ZW1wbGF0ZS5gKVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUubWVzc2FnZX0pO1xyXG4gICAgICAgIH0gIFxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgYXN5bmMgY2hhbmdlSW5zdHJ1Y3Rpb25zKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgLy9wb2JvbGpzYXRpXHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xyXG4gICAgICAgIGxldCBjb250ZW50ID0gYXdhaXQgZGIuY29sbGVjdGlvbignY29udGVudCcpLmZpbmRPbmUoKTtcclxuXHJcbiAgICAgICAgbGV0IGRhdGEgPSB7XHJcbiAgICAgICAgICAgIGluc3RydWN0aW9ucyA6IHJlcS5ib2R5LFxyXG4gICAgICAgICAgICBpZCA6IGNvbnRlbnQuX2lkLFxyXG4gICAgICAgICAgICB1cGRhdGVEb2MgOiAndHJ1ZSdcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBvYmogPSByZXEucm91dGUubWV0aG9kc1xyXG4gICAgICAgIGRhdGEubWV0aG9kID0gT2JqZWN0LmtleXMob2JqKS50b1N0cmluZygpXHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyhkYXRhLCAnY29udGVudCcpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXMuc2VuZChgJHtyZXN1bHR9IGF0IGNoYW5naW5nIGluc3RydWN0aW9ucy5gKVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUubWVzc2FnZX0pO1xyXG4gICAgICAgIH0gIFxyXG5cclxuICAgIH0sXHJcblxyXG5cclxuICAgIGFzeW5jIGdldEluc3RydWN0aW9ucyhyZXEsIHJlcykge1xyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2cocmVxKVxyXG5cclxuICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcImNvbnRlbnRcIikuZmluZE9uZSgpXHJcblxyXG4gICAgICAgIHJlc3VsdC5pZCA9IHJlc3VsdC5faWRcclxuICAgICAgICBkZWxldGUgcmVzdWx0Ll9pZFxyXG5cclxuICAgICAgICByZXMuanNvbihyZXN1bHQuaW5zdHJ1Y3Rpb25zKVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgYXN5bmMgYXBwbGljYXRpb25Gb3JtIChyZXEsIHJlcykge1xyXG5cclxuICAgICAgICBsZXQgZm9ybURhdGEgPSB7XHJcbiAgICAgICAgICAgIGlkIDogcmVxLmJvZHkudXNlcklELFxyXG4gICAgICAgICAgICBhcHBsaWNhdGlvbiA6IHJlcS5ib2R5LmZvcm0sXHJcbiAgICAgICAgICAgIHVwZGF0ZURvYyA6ICd0cnVlJ1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IG9iaiA9IHJlcS5yb3V0ZS5tZXRob2RzXHJcbiAgICAgICAgZm9ybURhdGEubWV0aG9kID0gT2JqZWN0LmtleXMob2JqKS50b1N0cmluZygpXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuICAgICAgICBsZXQgYXBwRXhpc3RzID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS5maW5kKCB7IF9pZDogT2JqZWN0SUQoZm9ybURhdGEuaWQpICwgYXBwbGljYXRpb246IHsgJGV4aXN0czogdHJ1ZX0gfSApXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgaWYgKGFwcEV4aXN0cyA9PSB0cnVlKSB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBhY2N1cmVkIGR1cmluZyBpbnNlcnRpbmdcIilcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtZXRob2RzLmNoYW5nZUluZm8oZm9ybURhdGEsICd1c2VycycpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXMuc2VuZChgJHtyZXN1bHR9IGF0IGluc2VydGluZyBhcHBsaWNhdGlvbi5gKVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUubWVzc2FnZX0pO1xyXG4gICAgICAgIH0gIFxyXG4gICAgXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICAvL3JlZmFrdG9yaXJhdGlcclxuICAgIGFzeW5jIHN1Ym1pdEpvdXJuYWwgKHJlcSxyZXMpIHtcclxuICAgICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICAgICAgdXNlcklEIDogcmVxLmJvZHkudXNlcl9pZCxcclxuICAgICAgICAgICAgam91cm5hbCA6IHJlcS5ib2R5LmpvdXJuYWwsXHJcbiAgICAgICAgICAgIHVwbG9hZF9kYXRlIDogIERhdGUubm93KCkgLy8gRGF0ZShEYXRlLm5vdygpKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcbiAgICAgICAgbGV0IGpvdXJuYWxcclxuXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICAvKiBha28gxb5lbGltbyBkYSBrb3Jpc25payBuZSBtb8W+ZSB2acWhZSBwdXRhIHVwbG9hZGF0aSBkbmV2bmlrICovXHJcbiAgICAgICAgICAgIC8vbGV0IGNoZWNrVXNlciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZmluZE9uZSh7X2lkIDogT2JqZWN0SUQoZGF0YS51c2VySUQpfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vaWYgKGNoZWNrVXNlci5qb3VybmFsSUQgIT0gZmFsc2UpIHRocm93IG5ldyBFcnJvcihcIkVycm9yIGFjY3VyZWQgZHVyaW5nIGluc2VydGluZ1wiKVxyXG5cclxuICAgICAgICAgICAgam91cm5hbCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2pvdXJuYWxzJykuaW5zZXJ0T25lKGRhdGEpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHVzZXIgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWQgOiBkYXRhLnVzZXJJRCxcclxuICAgICAgICAgICAgICAgICAgICBqb3VybmFsSUQgOiBqb3VybmFsLmluc2VydGVkSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRG9jIDogJ3RydWUnXHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IG9iaiA9IHJlcS5yb3V0ZS5tZXRob2RzXHJcbiAgICAgICAgICAgICAgICB1c2VyLm1ldGhvZCA9IE9iamVjdC5rZXlzKG9iaikudG9TdHJpbmcoKVxyXG5cclxuICAgICAgICAgICAgICAgIGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyh1c2VyLCAndXNlcnMnKVxyXG5cclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHRydWUpXHJcbiAgICAgICAgICAgICAgICAvL3Jlcy5qc29uKHttZXNzYWdlOiAndXBsb2FkIHN1Y2Nlc3NmdWwnfSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgICAgICByZXMuc2VuZCgnRXJyb3IgYWNjdXJlZCBkdXJpbmcgY29ubmVjdGluZyBqb3VybmFsIElEIHdpdGggdXNlcicpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICByZXMuanNvbihmYWxzZSlcclxuICAgICAgICAgICAgLy9yZXMuanNvbih7ZXJyb3I6ZS5tZXNzYWdlIH0pXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBhc3luYyBnZXRPbmVQcm9qZWN0IChyZXEscmVzKSB7XHJcbiAgICAgICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZFxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kT25lKHtfaWQ6IE9iamVjdElEKGlkKX0pXHJcblxyXG4gICAgICAgICAgICByZXN1bHQuaWQgPSByZXN1bHQuX2lkXHJcbiAgICAgICAgICAgIGRlbGV0ZSByZXN1bHQuX2lkXHJcblxyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgaWYgKGlkID09IG51bGwpICByZXMuanNvbih7ZXJyb3I6ICdpZCBpcyB1bmRlZmluZWQnfSlcclxuXHJcbiAgICAgICAgICAgIGVsc2UgIHJlcy5qc29uKHtlcnJvcjogZS5tZXNzYWdlfSlcclxuICAgICAgICB9XHJcbn0sXHJcblxyXG5cclxuICAgIGFzeW5jIGdldFBhcnRuZXJQcm9qZWN0cyAocmVxLHJlcykge1xyXG5cclxuICAgICAgICBsZXQgcGFydG5lcklEID0gcmVxLnBhcmFtcy5pZFxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuICAgICAgICAvL25hxJFpIHByb2pla3RlIGtvamUgcHJpcGFkYWp1IG9kcmXEkWVub20gcG9zbG9kYXZjdVxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgbGV0IGZpbmRfSURzPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicGFydG5lcnNcIikuZmluZCh7X2lkOiBPYmplY3RJRChpZCl9KVxyXG4gICAgICAgIGxldCByZXN1bHQgPSAgYXdhaXQgZmluZF9JRHMudG9BcnJheSgpXHJcblxyXG4gICAgICAgIGxldCBmaWx0ZXJlZF9JRHMgPSByZXN1bHRbMF0ucHJvamVjdHNcclxuXHJcbiAgICAgICAgbGV0IGN1cnNvcjIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicHJvamVjdHNcIikuZmluZCh7X2lkOiB7JGluOiBmaWx0ZXJlZF9JRHN9fSlcclxuICAgICAgICBsZXQgZmluYWxSZXN1bHQgPSAgYXdhaXQgY3Vyc29yMi50b0FycmF5KClcclxuICAgICAgICAqL1xyXG4gICAgICAgIGxldCBjdXJzb3I9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kKHtwYXJ0bmVySUQ6IE9iamVjdElEKHBhcnRuZXJJRCl9KVxyXG5cclxuICAgICAgICBsZXQgcmVzdWx0cyA9ICBhd2FpdCBjdXJzb3IudG9BcnJheSgpXHJcbiAgICAgICAgXHJcbiAgICAgICAgcmVzLnNlbmQocmVzdWx0cylcclxuXHJcbn0sXHJcblxyXG4gICAgYXN5bmMgYWRkVmlldyhyZXEsIHJlcyl7XHJcbiAgICAgICAgbGV0IGRhdGEgPSByZXEuYm9keVxyXG4gICAgICAgIGRhdGEudXBkYXRlRG9jID0gJ3RydWUnXHJcbiAgICAgICAgbGV0IGNvbGxlY3Rpb25OYW1lID0gZGF0YS5jb2xsZWN0aW9uTmFtZVxyXG4gICAgICAgIGRlbGV0ZSBkYXRhLmNvbGxlY3Rpb25OYW1lXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBvYmogPSByZXEucm91dGUubWV0aG9kc1xyXG4gICAgICAgIGRhdGEubWV0aG9kID0gT2JqZWN0LmtleXMob2JqKS50b1N0cmluZygpXHJcblxyXG4gICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtZXRob2RzLmNoYW5nZUluZm8oZGF0YSwgY29sbGVjdGlvbk5hbWUpXHJcblxyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxuICAgIH0sXHJcblxyXG5cclxuICAgIGFzeW5jIGdldE9uZVBhcnRuZXIgKHJlcSxyZXMpIHtcclxuICAgICAgICAvL25lIHZyYWNhIGdyZXNrdSBrYWQgamUgaWQgbmVwb3N0b2plY2lcclxuXHJcbiAgICAgICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZFxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInBhcnRuZXJzXCIpLmZpbmRPbmUoe19pZDogT2JqZWN0SUQoaWQpfSlcclxuXHJcbiAgICAgICAgICAgIHJlc3VsdC5pZCA9IHJlc3VsdC5faWRcclxuICAgICAgICAgICAgZGVsZXRlIHJlc3VsdC5faWRcclxuXHJcbiAgICAgICAgICAgIGlmICghcmVzdWx0LmlkKSB0aHJvdyBuZXcgRXJyb3IoJ2lkIGlzIHVuZGVmaW5lZCcpXHJcblxyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmVzLmpzb24oe2Vycm9yOiBlLm1lc3NhZ2V9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxufSxcclxuXHJcblxyXG5cclxuICAgIGFzeW5jIGNoYW5nZVBhc3N3b3JkIChyZXEscmVzKSB7XHJcbiAgICAgICAgbGV0IGRhdGEgPSByZXEuYm9keVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vZG9sYXppIGl6IG1ldG9kZSBpc1ZhbGlkVXNlclxyXG4gICAgICAgIGRhdGEuZW1haWwgPSByZXEuand0LmVtYWlsXHJcblxyXG4gICAgICAgIGlmIChkYXRhLm5ld1Bhc3N3b3JkICYmIGRhdGEub2xkUGFzc3dvcmQpe1xyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXV0aC5jaGFuZ2VVc2VyUGFzc3dvcmQoZGF0YSlcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuc2VuZCh7c3RhdHVzOiAnU3VjY2Vzcyd9KTtcclxuICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnU2VydmVyIGVycm9yJyB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe2Vycm9yIDogXCJJbnZhbGlkIGlucHV0IGRhdGFcIn0pXHJcbiAgICAgICAgfVxyXG59LFxyXG5cclxuXHJcbiAgICBhc3luYyBsb2dpbihyZXEscmVzKSB7XHJcbiAgICAgICAgbGV0IHVzZXIgPSByZXEuYm9keVxyXG5cclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhdXRoLmF1dGhlbnRpY2F0ZVVzZXIodXNlci5lbWFpbCwgdXNlci5wYXNzd29yZClcclxuICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oe2Vycm9yOiBlLm1lc3NhZ2V9KVxyXG4gICAgICAgIH1cclxufSxcclxuXHJcblxyXG4gICAgYXN5bmMgcmVnaXN0cmF0aW9uIChyZXEsIHJlcykgeyBcclxuICAgICAgICBsZXQgbmV3VXNlciA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBsZXQgcGFydG5lciA9IGF3YWl0IGF1dGgucmVnaXN0ZXIobmV3VXNlcik7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgXHJcblxyXG4gICAgICAgICAgICAvL2RvZGF2YW5qZSBrb3Jpc25pa2EgYXV0b21hdHNraSB1IHBhcnRuZXJlIMSNaW0gc2UgcmVnaXN0cmlyYVxyXG4gICAgICAgICAgICBpZiAobmV3VXNlci5hY2NvdW50X3R5cGUgPT09ICgncG9zbG9kYXZhYycgfHwgJ1Bvc2xvZGF2YWMnKSkgICAgcmVzdWx0ID0gYXdhaXQgbWV0aG9kcy5hZGRQYXJ0bmVyKHBhcnRuZXIpXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdClcclxuICAgICAgICAgICAgcmVzLmpzb24oe3N0YXR1czogYHVzZXIgd2l0aCBpZCAke3Jlc3VsdH0gYWRkZWRgfSlcclxuXHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZS5tZXNzYWdlLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbn0sXHJcblxyXG5cclxuICAgIGFzeW5jIHN1Ym1pdENob3NlblByb2plY3RzIChyZXEsIHJlcykgIHtcclxuICAgICAgICBsZXQgZGF0YSA9IHJlcS5ib2R5XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcblxyXG4gICAgICAgIC8vb3ZvIGJpIGlzbG8gcyAubWFwP1xyXG5cclxuICAgICAgICAvLyB7Zmlyc3RfcHJpb3JpdHk6IFtpZDEsIGlkMiwgaWQyXSwgc2Vjb25kX3ByaW9yaXR5OlsuLi5dLCB0aGlyZF9wcmlvcml0eTpbLi4uXX1cclxuICAgICAgICBcclxuICAgICAgICBsZXQgcmVzdWx0XHJcblxyXG4gICAgICAgIGxldCBzZWxlY3RlZEJ5ID0ge1xyXG4gICAgICAgICAgICAgICAgZmlyc3RfcHJpb3JpdHkgOiBbXSxcclxuICAgICAgICAgICAgICAgIHNlY29uZF9wcmlvcml0eSA6IFtdLFxyXG4gICAgICAgICAgICAgICAgdGhpcmRfcHJpb3JpdHkgIDogW11cclxuICAgICAgICB9XHJcbiAgICAgICAgLy9kZXN0cnVrY2lqYSBzdHJ1a3R1cmVcclxuICAgICAgICBsZXQgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHNlbGVjdGVkQnkpO1xyXG5cclxuICAgICAgICBmb3IobGV0IFtpbmRleCwgW2tleSwgdmFsdWVdXSBvZiBlbnRyaWVzLmVudHJpZXMoKSl7XHJcblxyXG4gICAgICAgICAgICBsZXQgcHJvamVjdElEID0gZGF0YS5zZWxlY3Rpb25baW5kZXhdXHJcbiAgICAgICBcclxuICAgICAgICAgICAgLyogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzA5NjkzODIvbW9uZ29kYi1vYmplY3Qta2V5LXdpdGgtZXM2LXRlbXBsYXRlLXN0cmluZyAgZGEgYmkgYmlsbyBtb2d1Y2UgZGluYW1pY2tpIHVwZGVqdGF0aSovXHJcbiAgICAgICAgICAgIC8vIHZhciBhdHRyaWJ1dGVOYW1lXHJcbiAgICAgICAgICAgIC8vIGxldCBxdWVyeSA9IHsgXCJfaWRcIjogcHJvamVjdElEIH1cclxuICAgICAgICAgICAgLy8gbGV0IHVwZGF0ZSA9IHsgXCIkYWRkVG9TZXRcIjoge30gfVxyXG4gICAgICAgICAgICAvLyB1cGRhdGVbXCIkYWRkVG9TZXRcIl1bYXR0cmlidXRlTmFtZV0gPSBkYXRhLnVzZXJcclxuXHJcbiAgICAgICAgICAgIC8vdHJpayB6YSBwcmV2YXJpdGkgbW9uZ28ga29tcGFqbGVyXHJcbiAgICAgICAgICAgIC8vIGlsaSBzZWxlY3RlZEJ5W2tleV0gPSAnc2VsZWN0ZWRfYnkuICsga2V5XHJcbiAgICAgICAgICAgIGtleSA9ICdzZWxlY3RlZF9ieS4nICsga2V5XHJcblxyXG4gICAgICAgICAgICByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdwcm9qZWN0cycpLnVwZGF0ZU9uZSggeyBfaWQ6IE9iamVjdElEKHByb2plY3RJRCkgfSx7ICRhZGRUb1NldDogeyBba2V5XSA6IGRhdGEudXNlciB9fSlcclxuICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxufSxcclxuXHJcblxyXG4gICAgYXN5bmMgY2hhbmdlUHJvamVjdEluZm8gKHJlcSwgcmVzKSAge1xyXG5cclxuICAgICAgICBsZXQgcHJvamVjdERhdGEgPSByZXEuYm9keSBcclxuICAgICAgICBkZWxldGUgcHJvamVjdERhdGEuaWQ7XHJcbiAgICAgICAgbGV0IHByb2plY3QgPSB7fVxyXG5cclxuICAgICAgICBpZiAocHJvamVjdERhdGEgJiYgcHJvamVjdERhdGEudXBkYXRlRG9jID09PSAndHJ1ZScpe1xyXG5cclxuICAgICAgICAgICAgLy9tYXBpcmFuamUgdHJlbnV0bm8gbmlqZSBwb3RyZWJubyBqZXIgc3UgbmF6aXZpIGF0cmlidXRhIHVza2xhZGVuaSwgYWxpIGluYWNlIGNlIG92YSBmdW5rY2phIHBvc2x1eml0aVxyXG4gICAgICAgICAgICBpZiAocHJvamVjdERhdGEpIHByb2plY3QgPSBhd2FpdCBtZXRob2RzLm1hcEF0dHJpYnV0ZXMocHJvamVjdERhdGEpXHJcbiAgICAgICAgICAgICAgICBpZiAoIXByb2plY3Quc2VsZWN0ZWRfYnkpIGRlbGV0ZSBwcm9qZWN0LnNlbGVjdGVkX2J5XHJcbiAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBwcm9qZWN0LnBhcnRuZXJJRCA9IE9iamVjdElEKHByb2plY3REYXRhLnBhcnRuZXJJRClcclxuICAgICAgICAgICAgcHJvamVjdC51cGRhdGVEb2MgPSBwcm9qZWN0RGF0YS51cGRhdGVEb2NcclxuXHJcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVxLnJvdXRlLm1ldGhvZHNbXCJwdXRcIl0pIHBhIG9uZGEgdHJ1ZS9mYWxzZSAtPiAyLiBuYWNpbiB6YSBkb2h2YXRpIHZyc3R1IHJlcXVlc3RhXHJcbiAgICAgICAgICAgIGxldCBvYmogPSByZXEucm91dGUubWV0aG9kc1xyXG4gICAgICAgICAgICBwcm9qZWN0Lm1ldGhvZCA9IE9iamVjdC5rZXlzKG9iaikudG9TdHJpbmcoKVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgcHJvamVjdC5pZCA9IHJlcS5wYXJhbXMuaWQ7XHJcbiAgICAgICAgaWYgKCFwcm9qZWN0LnVwZGF0ZURvYykgcHJvamVjdC51cGRhdGVEb2MgPSAnZmFsc2UnXHJcblxyXG4gICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyhwcm9qZWN0LCAncHJvamVjdHMnKVxyXG4gICAgICAgIFxyXG4gICAgICAgIHJlcy5zZW5kKHJlc3BvbnNlKVxyXG59LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgY2hhbmdlUGFydG5lckluZm8gKHJlcSwgcmVzKSAge1xyXG4gICAgICAgIGxldCBwYXJ0bmVySW5mbyA9IHJlcS5ib2R5XHJcbiAgICAgICAgZGVsZXRlIHBhcnRuZXJJbmZvLl9pZDtcclxuICAgICAgICBwYXJ0bmVySW5mby5pZCA9IHJlcS5wYXJhbXMuaWQ7XHJcblxyXG4gICAgICAgIGxldCBvYmogPSByZXEucm91dGUubWV0aG9kc1xyXG4gICAgICAgIHBhcnRuZXJJbmZvLm1ldGhvZCA9IE9iamVjdC5rZXlzKG9iaikudG9TdHJpbmcoKVxyXG5cclxuICAgICAgICBpZiAoIXBhcnRuZXJzSW5mby51cGRhdGVEb2MpICBwYXJ0bmVyc0luZm8udXBkYXRlRG9jID0gJ2ZhbHNlJ1xyXG5cclxuICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBtZXRob2RzLmNoYW5nZUluZm8ocGFydG5lckluZm8sICdwYXJ0bmVycycpXHJcblxyXG4gICAgICAgIHJlcy5zZW5kKHJlc3BvbnNlKVxyXG59LFxyXG5cclxuICAgIGFzeW5jIGdldFN0dWRlbnRzIChyZXEsIHJlcykgIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgbGV0IHF1ZXJ5ID0gcmVxLnF1ZXJ5XHJcbiAgICAgICAgbGV0IGF0cmlidXRpID0gW1wibmFtZVwiLCBcInN1cm5hbWVcIiwgXCJqbWJhZ1wiLCBcInllYXJcIiwgXCJ0ZWNobm9sb2d5XCIsIFwiZW1haWxcIiwgXCJhY2NvdW50X3R5cGVcIl0gXHJcblxyXG4gICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtZXRob2RzLnNlYXJjaChxdWVyeSwgYXRyaWJ1dGksICd1c2VycycpXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxuICAgIH0sXHJcblxyXG5cclxuICAgIGFzeW5jIGdldFByb2plY3RzIChyZXEsIHJlcykgIHtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgcXVlcnkgPSByZXEucXVlcnlcclxuICAgICAgICBsZXQgYXRyaWJ1dGkgPSBbXCJjb21wYW55XCIsIFwidGVjaG5vbG9naWVzXCIsIFwibG9jYXRpb25cIiwgXCJwcm9qZWN0X2Rlc2NyaXB0aW9uXCJdIFxyXG5cclxuICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgbWV0aG9kcy5zZWFyY2gocXVlcnksIGF0cmlidXRpLCAncHJvamVjdHMnKVxyXG5cclxuICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICB9LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgZ2V0UGFydG5lcnMgKHJlcSwgcmVzKSB7XHJcblxyXG4gICAgICAgIGxldCBxdWVyeSA9IHJlcS5xdWVyeVxyXG4gICAgICAgIGxldCBhdHJpYnV0aSA9IFtcImNvbXBhbnlcIiwgXCJhYm91dF91c1wiXSBcclxuXHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMuc2VhcmNoKHF1ZXJ5LCBhdHJpYnV0aSwgJ3BhcnRuZXJzJylcclxuXHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG59LFxyXG5cclxuXHJcbiAgICBhc3luYyBhZGRQcm9qZWN0IChyZXEsIHJlcykgIHtcclxuXHJcbiAgICAgICAgbGV0IHByb2plY3REYXRhID0gcmVxLmJvZHlcclxuIFxyXG4gICAgICAgIC8vIHB1xaF0ZW5vIG92YWtvIHUgc2x1xI1hanUgZGEgc2UgaW1lbmEgYXRyaWJ1dGEgcmF6bGlrdWp1IHBhIGplIGxha8WhZSBwcm9taWplbml0aSwgYWxpIHphIHNhZGEgbmUgdHJlYmFcclxuICAgICAgICBsZXQgcHJvamVjdCA9IGF3YWl0IG1ldGhvZHMubWFwQXR0cmlidXRlcyhwcm9qZWN0RGF0YSlcclxuICAgICAgICBcclxuICAgICAgICAvL3NsaWthIGplIGhhcmRjb2RhbmEgamVyIG5lbWEgYmFzIHNtaXNsYSBpbWF0aSBjdXN0b20gc2xpa3UgcHJvamVrdGFcclxuICAgICAgICBwcm9qZWN0LmltZ191cmwgPSBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTA0NjEwOTI2MDc4LWExNjExZmViY2FkMz9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9ODAwJnE9ODBcIlxyXG4gICAgICAgIHByb2plY3QudXNlcklEID0gcHJvamVjdERhdGEudXNlcklEXHJcbiAgICAgICAgcHJvamVjdC52aWV3cyA9IDBcclxuICAgICAgICBwcm9qZWN0LmFsbG9jYXRlZF90byA9IHByb2plY3REYXRhLmFsbG9jYXRlZF90b1xyXG4gXHJcbiAgICAgICAgLy9icmlzYW5qZSBhdHJpYnV0YSBrb2ppIHN1IHByYXpuaSBrb2QgaW5pY2lqYWxpemFjaWplIHByb2pla3RhIGRhIHNob2RubyB0b21lIG5lIGFrdGl2aXJhIHZhbGlkYXRlRGF0YVxyXG4gICAgICAgIGlmICghcHJvamVjdC5zZWxlY3RlZF9ieSkgZGVsZXRlIHByb2plY3Quc2VsZWN0ZWRfYnlcclxuXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgbWV0aG9kcy5wdXNoRGF0YShwcm9qZWN0LCAncHJvamVjdHMnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVzLnNlbmQoYHByb2plY3Qgd2l0aCBpZCAgJHtyZXN1bHR9IGFkZGVkLmApXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZS5tZXNzYWdlfSk7XHJcbiAgICAgICAgfSAgIFxyXG4gICAgfSxcclxuXHJcblxyXG5cclxuICAgIGFzeW5jIGNyZWF0ZVBhcnRuZXIgKHJlcSwgcmVzKSAge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCd0dSBzYW1tJylcclxuICAgICAgICBsZXQgcGFydG5lckRhdGEgPSByZXEuYm9keVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIGFrbyDEh2UgdHJlYmF0aSBrYWQgc3RqZXBhbiBpbXBsZW1lbnRpcmFcclxuICAgICAgICAvL2xldCBwcm9qZWN0ID0gYXdhaXQgbWV0aG9kcy5tYXBBdHRyaWJ1dGVzKHByb2plY3REYXRhKVxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vZG9rIHN0amVwYW4gbmUgaW1wbGVtZW50aXJhIGNlIGJpdGkgb3Zha28gaGFyZGNvZGFub1xyXG4gICAgICAgIHBhcnRuZXJEYXRhLmltZ191cmwgPSBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNTA0NjEwOTI2MDc4LWExNjExZmViY2FkMz9peGxpYj1yYi0xLjIuMSZpeGlkPWV5SmhjSEJmYVdRaU9qRXlNRGQ5JmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9ODAwJnE9ODBcIlxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vemEgcmFzcG96bmF2YW5qZSBrb2ppIHBhcnRuZXJpIHN1IHNlIHNhbWkga3JlaXJhbGksIGEga29qaSBuZVxyXG4gICAgICAgIHBhcnRuZXJEYXRhLmNyZWF0ZWRfYnlfYWRtaW4gPSB0cnVlXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGxldCBwYXJ0bmVySUQgPSBhd2FpdCBtZXRob2RzLnB1c2hEYXRhKHBhcnRuZXJEYXRhLCAncGFydG5lcnMnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKGBwYXJ0bmVyIHdpdGggaWQgICR7cGFydG5lcklEfSBhZGRlZC5gKVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUubWVzc2FnZX0pO1xyXG4gICAgICAgIH0gICBcclxuICAgIH0sXHJcbiAgICBcclxuXHJcblxyXG4gICAgYXN5bmMgaG9tZSAocmVxLCByZXMpICB7XHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgICAgIGxldCBudW1iZXJPZkRvY3MgPSB7fVxyXG5cclxuICAgICAgICBudW1iZXJPZkRvY3MucHJvamVjdHNDb3VudGVyID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInByb2plY3RzXCIpLmNvdW50RG9jdW1lbnRzKCk7XHJcbiAgICAgICAgbnVtYmVyT2ZEb2NzLnBhcnRuZXJzQ291bnRlciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwYXJ0bmVyc1wiKS5jb3VudERvY3VtZW50cygpO1xyXG4gICAgICAgIG51bWJlck9mRG9jcy5zdHVkZW50c0NvdW50ZXIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwidXNlcnNcIikuY291bnREb2N1bWVudHMoeyBhY2NvdW50X3R5cGUgOiAnU3R1ZGVudCd9KTtcclxuXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHJlcy5qc29uKG51bWJlck9mRG9jcylcclxuICAgIH1cclxuXHJcblxyXG59ICJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "getChosenProjects",
        "req",
        "res",
        "studentID",
        "params",
        "id",
        "db",
        "collection",
        "find",
        "cursor",
        "toArray",
        "projects",
        "result",
        "attributes",
        "forEach",
        "attribute",
        "match",
        "filter",
        "project",
        "priority",
        "undefined",
        "selected_by",
        "includes",
        "push",
        "_id",
        "json",
        "getJournal",
        "journalID",
        "findOne",
        "journal",
        "console",
        "log",
        "error",
        "message",
        "changeUserInfo",
        "userInfo",
        "body",
        "obj",
        "route",
        "methods",
        "method",
        "Object",
        "keys",
        "toString",
        "changeInfo",
        "response",
        "send",
        "checkIfPartner",
        "userID",
        "data",
        "status",
        "getJournalTemplate",
        "template",
        "uploadTemplate",
        "content",
        "updateDoc",
        "changeInstructions",
        "instructions",
        "getInstructions",
        "applicationForm",
        "formData",
        "application",
        "form",
        "$exists",
        "appExists",
        "Error",
        "submitJournal",
        "user_id",
        "upload_date",
        "Date",
        "now",
        "insertOne",
        "user",
        "insertedId",
        "getOneProject",
        "getPartnerProjects",
        "partnerID",
        "results",
        "addView",
        "collectionName",
        "getOnePartner",
        "changePassword",
        "email",
        "jwt",
        "newPassword",
        "oldPassword",
        "auth",
        "changeUserPassword",
        "login",
        "authenticateUser",
        "password",
        "registration",
        "newUser",
        "register",
        "partner",
        "account_type",
        "addPartner",
        "submitChosenProjects",
        "selectedBy",
        "first_priority",
        "second_priority",
        "third_priority",
        "entries",
        "index",
        "key",
        "value",
        "projectID",
        "selection",
        "updateOne",
        "$addToSet",
        "changeProjectInfo",
        "projectData",
        "mapAttributes",
        "changePartnerInfo",
        "partnerInfo",
        "partnersInfo",
        "getStudents",
        "query",
        "atributi",
        "search",
        "getProjects",
        "getPartners",
        "addProject",
        "img_url",
        "views",
        "allocated_to",
        "pushData",
        "createPartner",
        "partnerData",
        "created_by_admin",
        "home",
        "numberOfDocs",
        "countDocuments",
        "projectsCounter",
        "partnersCounter",
        "studentsCounter"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db.js'\r\nimport auth from './auth.js'\r\nimport { ObjectID } from 'mongodb'\r\nimport methods from './methods.js'\r\n\r\n\r\nexport default {\r\n\r\n    async getChosenProjects (req,res) {\r\n        let studentID = req.params.id\r\n\r\n        let db = await connect()\r\n        let cursor = await db.collection('projects').find()\r\n        let projects = await cursor.toArray()\r\n\r\n        let result = [];\r\n        \r\n        let attributes = ['first_priority', 'second_priority', 'third_priority']\r\n\r\n\r\n        attributes.forEach(attribute => {\r\n            const match = projects.filter(function (project) {\r\n                let priority = undefined\r\n                \r\n                try {\r\n    \r\n                    priority = project.selected_by[attribute]    \r\n\r\n                    if (priority.includes(studentID)){\r\n                        result.push(project._id);\r\n                        }\r\n    \r\n                }\r\n    \r\n                catch { }\r\n            })\r\n        })\r\n\r\n        res.json(result)\r\n\r\n    },\r\n\r\n\r\n    //slicna kao neke funkcije, spojiti?\r\n    async getJournal (req,res) {\r\n        let journalID = req.params.id\r\n\r\n        let db = await connect()\r\n       \r\n        try{\r\n            let journal = await db.collection(\"journals\").findOne({_id: ObjectID(journalID)})\r\n            res.json(journal)\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e)\r\n            res.json({error: e.message})\r\n        }\r\n    },\r\n\r\n\r\n\r\n    async changeUserInfo (req, res)  {\r\n\r\n        let userInfo = req.body\r\n        let obj = req.route.methods\r\n\r\n        userInfo.method = Object.keys(obj).toString()\r\n\r\n        let response = await methods.changeInfo(userInfo, 'users')\r\n\r\n        res.send(response)\r\n    },\r\n\r\n    //skoro identicna kao getonePartner, spojiti u jednu?\r\n    async checkIfPartner(req, res) {\r\n            let id = req.params.id\r\n\r\n            let db = await connect()\r\n            const data = await db.collection(\"partners\").findOne({userID : ObjectID(id)});\r\n\r\n            if(!data)  res.status(401).json({ error: 'user is not a partner'})\r\n\r\n            res.json (data);\r\n        \r\n    },\r\n\r\n    async getJournalTemplate(req, res) {\r\n        let db = await connect()\r\n    \r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n        res.json(result.template)\r\n\r\n    },\r\n\r\n    async uploadTemplate(req, res) {\r\n        //poboljsati\r\n\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n\r\n        let data = {\r\n            template : req.body,\r\n            id : content._id,\r\n            updateDoc : 'true'\r\n        }\r\n\r\n        let obj = req.route.methods\r\n        data.method = Object.keys(obj).toString()\r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing template.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n    async changeInstructions(req, res) {\r\n        //poboljsati\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n\r\n        let data = {\r\n            instructions : req.body,\r\n            id : content._id,\r\n            updateDoc : 'true'\r\n        }\r\n\r\n        let obj = req.route.methods\r\n        data.method = Object.keys(obj).toString()\r\n        \r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing instructions.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n\r\n    async getInstructions(req, res) {\r\n\r\n        let db = await connect()\r\n\r\n        console.log(req)\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n        result.id = result._id\r\n        delete result._id\r\n\r\n        res.json(result.instructions)\r\n    },\r\n\r\n\r\n    async applicationForm (req, res) {\r\n\r\n        let formData = {\r\n            id : req.body.userID,\r\n            application : req.body.form,\r\n            updateDoc : 'true'\r\n        }\r\n\r\n        let obj = req.route.methods\r\n        formData.method = Object.keys(obj).toString()\r\n        \r\n\r\n        let db = await connect()\r\n\r\n        let appExists = await db.collection('users').find( { _id: ObjectID(formData.id) , application: { $exists: true} } )\r\n\r\n        try{\r\n            if (appExists == true) throw new Error(\"Error accured during inserting\")\r\n            \r\n            let result = await methods.changeInfo(formData, 'users')\r\n            \r\n            res.send(`${result} at inserting application.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n    \r\n    },\r\n\r\n\r\n    //refaktorirati\r\n    async submitJournal (req,res) {\r\n        let data = {\r\n            userID : req.body.user_id,\r\n            journal : req.body.journal,\r\n            upload_date :  Date.now() // Date(Date.now())\r\n        }\r\n\r\n        let db = await connect()\r\n        let journal\r\n\r\n        try{\r\n            /* ako želimo da korisnik ne može više puta uploadati dnevnik */\r\n            //let checkUser = await db.collection('users').findOne({_id : ObjectID(data.userID)})\r\n            \r\n            //if (checkUser.journalID != false) throw new Error(\"Error accured during inserting\")\r\n\r\n            journal = await db.collection('journals').insertOne(data)\r\n            \r\n            try {\r\n                let user = {\r\n                    id : data.userID,\r\n                    journalID : journal.insertedId,\r\n                    updateDoc : 'true'\r\n                }\r\n\r\n                let obj = req.route.methods\r\n                user.method = Object.keys(obj).toString()\r\n\r\n                await methods.changeInfo(user, 'users')\r\n\r\n                res.json(true)\r\n                //res.json({message: 'upload successful'})\r\n            }\r\n\r\n            catch(e){\r\n                res.send('Error accured during connecting journal ID with user')\r\n                return false;\r\n            }\r\n\r\n        }\r\n        \r\n        catch(e){\r\n            res.json(false)\r\n            //res.json({error:e.message })\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n    async getOneProject (req,res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n\r\n        try{\r\n            let result = await db.collection(\"projects\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async getPartnerProjects (req,res) {\r\n\r\n        let partnerID = req.params.id\r\n        let db = await connect()\r\n\r\n        //nađi projekte koje pripadaju određenom poslodavcu\r\n        /*\r\n        let find_IDs= await db.collection(\"partners\").find({_id: ObjectID(id)})\r\n        let result =  await find_IDs.toArray()\r\n\r\n        let filtered_IDs = result[0].projects\r\n\r\n        let cursor2 = await db.collection(\"projects\").find({_id: {$in: filtered_IDs}})\r\n        let finalResult =  await cursor2.toArray()\r\n        */\r\n        let cursor= await db.collection(\"projects\").find({partnerID: ObjectID(partnerID)})\r\n\r\n        let results =  await cursor.toArray()\r\n        \r\n        res.send(results)\r\n\r\n},\r\n\r\n    async addView(req, res){\r\n        let data = req.body\r\n        data.updateDoc = 'true'\r\n        let collectionName = data.collectionName\r\n        delete data.collectionName\r\n        \r\n\r\n        let obj = req.route.methods\r\n        data.method = Object.keys(obj).toString()\r\n\r\n        let result = await methods.changeInfo(data, collectionName)\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getOnePartner (req,res) {\r\n        //ne vraca gresku kad je id nepostojeci\r\n\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        try{\r\n            let result = await db.collection(\"partners\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            if (!result.id) throw new Error('id is undefined')\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            res.json({error: e.message})\r\n        }\r\n        \r\n},\r\n\r\n\r\n\r\n    async changePassword (req,res) {\r\n        let data = req.body\r\n        \r\n        //dolazi iz metode isValidUser\r\n        data.email = req.jwt.email\r\n\r\n        if (data.newPassword && data.oldPassword){\r\n            let result = await auth.changeUserPassword(data)\r\n            \r\n\r\n            if (result) {\r\n                res.status(201).send({status: 'Success'});\r\n            } \r\n            else {\r\n                res.status(500).json({ error: 'Server error' });\r\n            }\r\n        }\r\n\r\n        else{\r\n            res.status(400).json({error : \"Invalid input data\"})\r\n        }\r\n},\r\n\r\n\r\n    async login(req,res) {\r\n        let user = req.body\r\n\r\n        try{\r\n            let result = await auth.authenticateUser(user.email, user.password)\r\n            res.json(result)\r\n        }\r\n        catch(e){\r\n            res.status(401).json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async registration (req, res) { \r\n        let newUser = req.body;\r\n\r\n        try {\r\n            let partner = await auth.register(newUser);\r\n            let result \r\n\r\n            //dodavanje korisnika automatski u partnere čim se registrira\r\n            if (newUser.account_type === ('poslodavac' || 'Poslodavac'))    result = await methods.addPartner(partner)\r\n            console.log(result)\r\n            res.json({status: `user with id ${result} added`})\r\n\r\n        } catch (e) {\r\n            res.status(500).json({\r\n                error: e.message,\r\n            });\r\n        }\r\n},\r\n\r\n\r\n    async submitChosenProjects (req, res)  {\r\n        let data = req.body\r\n        let db = await connect()\r\n\r\n        //ovo bi islo s .map?\r\n\r\n        // {first_priority: [id1, id2, id2], second_priority:[...], third_priority:[...]}\r\n        \r\n        let result\r\n\r\n        let selectedBy = {\r\n                first_priority : [],\r\n                second_priority : [],\r\n                third_priority  : []\r\n        }\r\n        //destrukcija strukture\r\n        let entries = Object.entries(selectedBy);\r\n\r\n        for(let [index, [key, value]] of entries.entries()){\r\n\r\n            let projectID = data.selection[index]\r\n       \r\n            /* https://stackoverflow.com/questions/30969382/mongodb-object-key-with-es6-template-string  da bi bilo moguce dinamicki updejtati*/\r\n            // var attributeName\r\n            // let query = { \"_id\": projectID }\r\n            // let update = { \"$addToSet\": {} }\r\n            // update[\"$addToSet\"][attributeName] = data.user\r\n\r\n            //trik za prevariti mongo kompajler\r\n            // ili selectedBy[key] = 'selected_by. + key\r\n            key = 'selected_by.' + key\r\n\r\n            result = await db.collection('projects').updateOne( { _id: ObjectID(projectID) },{ $addToSet: { [key] : data.user }})\r\n     \r\n        }\r\n                                                                                       \r\n        \r\n        res.json(result)\r\n},\r\n\r\n\r\n    async changeProjectInfo (req, res)  {\r\n\r\n        let projectData = req.body \r\n        delete projectData.id;\r\n        let project = {}\r\n\r\n        if (projectData && projectData.updateDoc === 'true'){\r\n\r\n            //mapiranje trenutno nije potrebno jer su nazivi atributa uskladeni, ali inace ce ova funkcja posluziti\r\n            if (projectData) project = await methods.mapAttributes(projectData)\r\n                if (!project.selected_by) delete project.selected_by\r\n                     \r\n            project.partnerID = ObjectID(projectData.partnerID)\r\n            project.updateDoc = projectData.updateDoc\r\n\r\n            //console.log(req.route.methods[\"put\"]) pa onda true/false -> 2. nacin za dohvati vrstu requesta\r\n            let obj = req.route.methods\r\n            project.method = Object.keys(obj).toString()\r\n        }\r\n        \r\n\r\n        project.id = req.params.id;\r\n        if (!project.updateDoc) project.updateDoc = 'false'\r\n\r\n        let response = await methods.changeInfo(project, 'projects')\r\n        \r\n        res.send(response)\r\n},\r\n\r\n\r\n\r\n    async changePartnerInfo (req, res)  {\r\n        let partnerInfo = req.body\r\n        delete partnerInfo._id;\r\n        partnerInfo.id = req.params.id;\r\n\r\n        let obj = req.route.methods\r\n        partnerInfo.method = Object.keys(obj).toString()\r\n\r\n        if (!partnersInfo.updateDoc)  partnersInfo.updateDoc = 'false'\r\n\r\n        let response = await methods.changeInfo(partnerInfo, 'partners')\r\n\r\n        res.send(response)\r\n},\r\n\r\n    async getStudents (req, res)  {\r\n            \r\n        let query = req.query\r\n        let atributi = [\"name\", \"surname\", \"jmbag\", \"year\", \"technology\", \"email\", \"account_type\"] \r\n\r\n        let result = await methods.search(query, atributi, 'users')\r\n        \r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getProjects (req, res)  {\r\n        \r\n        let query = req.query\r\n        let atributi = [\"company\", \"technologies\", \"location\", \"project_description\"] \r\n\r\n        let result = await methods.search(query, atributi, 'projects')\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n\r\n    async getPartners (req, res) {\r\n\r\n        let query = req.query\r\n        let atributi = [\"company\", \"about_us\"] \r\n\r\n        let result = await methods.search(query, atributi, 'partners')\r\n\r\n        res.json(result)\r\n},\r\n\r\n\r\n    async addProject (req, res)  {\r\n\r\n        let projectData = req.body\r\n \r\n        // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\r\n        let project = await methods.mapAttributes(projectData)\r\n        \r\n        //slika je hardcodana jer nema bas smisla imati custom sliku projekta\r\n        project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        project.userID = projectData.userID\r\n        project.views = 0\r\n        project.allocated_to = projectData.allocated_to\r\n \r\n        //brisanje atributa koji su prazni kod inicijalizacije projekta da shodno tome ne aktivira validateData\r\n        if (!project.selected_by) delete project.selected_by\r\n\r\n        try{\r\n            let result = await methods.pushData(project, 'projects')\r\n            \r\n            res.send(`project with id  ${result} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n\r\n    async createPartner (req, res)  {\r\n        console.log('tu samm')\r\n        let partnerData = req.body\r\n        \r\n        // ako će trebati kad stjepan implementira\r\n        //let project = await methods.mapAttributes(projectData)\r\n        \r\n        //dok stjepan ne implementira ce biti ovako hardcodano\r\n        partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        \r\n        //za raspoznavanje koji partneri su se sami kreirali, a koji ne\r\n        partnerData.created_by_admin = true\r\n        \r\n\r\n        try{\r\n            \r\n            let partnerID = await methods.pushData(partnerData, 'partners')\r\n            \r\n            \r\n            res.send(`partner with id  ${partnerID} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n    \r\n\r\n\r\n    async home (req, res)  {\r\n\r\n        let db = await connect()\r\n        let numberOfDocs = {}\r\n\r\n        numberOfDocs.projectsCounter = await db.collection(\"projects\").countDocuments();\r\n        numberOfDocs.partnersCounter = await db.collection(\"partners\").countDocuments();\r\n        numberOfDocs.studentsCounter = await db.collection(\"users\").countDocuments({ account_type : 'Student'});\r\n\r\n        \r\n\r\n        res.json(numberOfDocs)\r\n    }\r\n\r\n\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1598347752405
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//modul za pristup bazi\nvar connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'; //služi za pristup prema bazi na navedenom frameworku\n\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null; //nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\n// eksportamo Promise koji resolva na konekciju\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    // ako smo inicijalizirali bazu i klijent je još uvijek spojen\n    if (db && client.isConnected()) {\n      resolve(db);\n    } else {\n      client.connect(function (err) {\n        if (err) {\n          reject('Spajanje na bazu nije uspjelo:' + err);\n        } else {\n          console.log('Database connected successfully!');\n          db = client.db('moja_praksa');\n          resolve(db);\n        }\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtBQUdBLElBQUlBLGlCQUFpQixHQUFHLGdHQUF4QixDLENBR0E7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHLElBQUlDLG9CQUFNQyxXQUFWLENBQXNCSCxpQkFBdEIsRUFBd0M7QUFDakRJLEVBQUFBLGVBQWUsRUFBRSxJQURnQztBQUVqREMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGNkIsQ0FBeEMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFULEMsQ0FFQTtBQUNBO0FBRUE7O2VBQ2Usb0JBQU07QUFDakIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDO0FBQ0EsUUFBSUgsRUFBRSxJQUFJTCxNQUFNLENBQUNTLFdBQVAsRUFBVixFQUFnQztBQUM1QkYsTUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSCxLQUZELE1BRU87QUFDSEwsTUFBQUEsTUFBTSxDQUFDVSxPQUFQLENBQWUsVUFBQ0MsR0FBRCxFQUFTO0FBQ3BCLFlBQUlBLEdBQUosRUFBUztBQUNMSCxVQUFBQSxNQUFNLENBQUMsbUNBQW1DRyxHQUFwQyxDQUFOO0FBQ0gsU0FGRCxNQUVPO0FBQ0hDLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0FSLFVBQUFBLEVBQUUsR0FBR0wsTUFBTSxDQUFDSyxFQUFQLENBQVUsYUFBVixDQUFMO0FBQ0FFLFVBQUFBLE9BQU8sQ0FBQ0YsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0g7QUFDSixHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcbW9qYV9wcmFrc2FcXG1vamFfcHJha3NhX2JhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy9tb2R1bCB6YSBwcmlzdHVwIGJhemlcclxuaW1wb3J0IG1vbmdvIGZyb20gJ21vbmdvZGInXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSAnbW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBmby1jbHVzdGVyLmIxcjJnLm1vbmdvZGIubmV0L21vamFfcHJha3NhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSdcclxuXHJcblxyXG4vL3NsdcW+aSB6YSBwcmlzdHVwIHByZW1hIGJhemkgbmEgbmF2ZWRlbm9tIGZyYW1ld29ya3VcclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZyx7XHJcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGw7XHJcblxyXG4vL25ha29uIHNwYWphbmphIHZyYcSHYW1vIGRvYml2ZW51IGluc3RhbmN1IGJhemUgb3N0YWxpbSBtb2R1bGltYSBrb2ppIHRvIHRyZWJhanVcclxuLy9leHBvcnRhbW8gYXNpbmtyb251IGZ1bmtjaWp1IGtvamEgbmUgcHJpbWEgbmkgamVkYW4gcGFyYW1ldGFyXHJcblxyXG4vLyBla3Nwb3J0YW1vIFByb21pc2Uga29qaSByZXNvbHZhIG5hIGtvbmVrY2lqdVxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIC8vIGFrbyBzbW8gaW5pY2lqYWxpemlyYWxpIGJhenUgaSBrbGlqZW50IGplIGpvxaEgdXZpamVrIHNwb2plblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSkge1xyXG4gICAgICAgICAgICByZXNvbHZlKGRiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdTcGFqYW5qZSBuYSBiYXp1IG5pamUgdXNwamVsbzonICsgZXJyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoJ21vamFfcHJha3NhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAIA,iBAAiB,GAAG,gGAAxB,C,CAGA;;AACA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAwC;AACjDI,EAAAA,eAAe,EAAE,IADgC;AAEjDC,EAAAA,kBAAkB,EAAE;AAF6B,CAAxC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT,C,CAEA;AACA;AAEA;;eACe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAAgC;AAC5BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACU,OAAP,CAAe,UAACC,GAAD,EAAS;AACpB,YAAIA,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAAC,mCAAmCG,GAApC,CAAN;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAR,UAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,aAAV,CAAL;AACAE,UAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,OARD;AASH;AACJ,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//modul za pristup bazi\r\nimport mongo from 'mongodb'\r\n\r\nlet connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'\r\n\r\n\r\n//služi za pristup prema bazi na navedenom frameworku\r\nlet client = new mongo.MongoClient(connection_string,{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n})\r\n\r\nlet db = null;\r\n\r\n//nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\r\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\r\n\r\n// eksportamo Promise koji resolva na konekciju\r\nexport default () => {\r\n    return new Promise((resolve, reject) => {\r\n        // ako smo inicijalizirali bazu i klijent je još uvijek spojen\r\n        if (db && client.isConnected()) {\r\n            resolve(db);\r\n        } else {\r\n            client.connect((err) => {\r\n                if (err) {\r\n                    reject('Spajanje na bazu nije uspjelo:' + err);\r\n                } else {\r\n                    console.log('Database connected successfully!');\r\n                    db = client.db('moja_praksa');\r\n                    resolve(db);\r\n                }\r\n            });\r\n        }\r\n    });\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1594283075909
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          db.collection('users').createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  register: function register(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _i, _Object$entries, _Object$entries$_i, key, value, db, partner, user, insertResult;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _i = 0, _Object$entries = Object.entries(userData);\n\n            case 1:\n              if (!(_i < _Object$entries.length)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n\n              if (value) {\n                _context2.next = 6;\n                break;\n              }\n\n              res.json({\n                status: 'Missing data'\n              });\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _i++;\n              _context2.next = 1;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return (0, _db[\"default\"])();\n\n            case 11:\n              db = _context2.sent;\n              partner = {};\n              _context2.t0 = userData.email;\n              _context2.next = 16;\n              return _bcrypt[\"default\"].hash(userData.password, 8);\n\n            case 16:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = Date.now();\n              user = {\n                email: _context2.t0,\n                password: _context2.t1,\n                date_created: _context2.t2\n              };\n\n              if (userData.jmbag) {\n                user.account_type = 'Student', user.jmbag = userData.jmbag, user.name = userData.name, user.surname = userData.surname, user.technology = userData.technology;\n                user.year = userData.year;\n                user.journalID = false;\n              } else {\n                user.account_type = 'Poslodavac', partner.company = userData.name;\n                partner.technology = userData.technology, partner.adress = userData.adress, partner.about_us = userData.about_us, partner.website = userData.website, partner.date_created = Date.now();\n                partner.contact_email = userData.contact_email, partner.contact_number = userData.telephone_number;\n                partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80';\n              }\n\n              _context2.prev = 20;\n              _context2.next = 23;\n              return db.collection('users').insertOne(user);\n\n            case 23:\n              insertResult = _context2.sent;\n\n              if (!(insertResult && insertResult.insertedId)) {\n                _context2.next = 28;\n                break;\n              }\n\n              delete user.password;\n              partner.userID = (0, _mongodb.ObjectID)(insertResult.insertedId);\n              return _context2.abrupt(\"return\", partner);\n\n            case 28:\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t3 = _context2[\"catch\"](20);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 34;\n                break;\n              }\n\n              throw new Error(\"User already exists\");\n\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[20, 30]]);\n    }))();\n  },\n  authenticateUser: function authenticateUser(email, password) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"users\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              _context3.t0 = user && user.password;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(password, user.password);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 18;\n                break;\n              }\n\n              //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \n              //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\n              //naš token sadrži sve podatke o useru\n              //password nije potrebno spremati u token jer smo ga već provjerili\n              delete user.password;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              user.token = token;\n              return _context3.abrupt(\"return\", user);\n\n            case 18:\n              throw new Error('Cannot authenticate');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  isValidUser: function isValidUser(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var authorization, type, token;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              authorization = req.headers.authorization.split(' ');\n              type = authorization[0];\n              token = authorization[1];\n              console.log(req);\n\n              if (!(type != 'Bearer')) {\n                _context4.next = 10;\n                break;\n              }\n\n              //console.log('type:' + type)\n              res.status(401).send();\n              return _context4.abrupt(\"return\", false);\n\n            case 10:\n              //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\n              //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\n              req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n              return _context4.abrupt(\"return\", next());\n\n            case 12:\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 14]]);\n    }))();\n  },\n  isStudent: function isStudent(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context5.prev = 1;\n\n              if (!(accountType === 'Student')) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", next());\n\n            case 6:\n              res.status(401).send();\n              return _context5.abrupt(\"return\", false);\n\n            case 8:\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", res.status(401).send());\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 10]]);\n    }))();\n  },\n  isPartner: function isPartner(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              console.log('tu sam');\n              accountType = req.jwt.account_type;\n              console.log(req);\n              _context6.prev = 3;\n\n              if (!(accountType === 'Poslodavac' || accountType === 'Admin')) {\n                _context6.next = 11;\n                break;\n              }\n\n              if (!(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE'))) {\n                _context6.next = 8;\n                break;\n              }\n\n              res.status(401).send();\n              return _context6.abrupt(\"return\", false);\n\n            case 8:\n              return _context6.abrupt(\"return\", next());\n\n            case 11:\n              res.status(401).send();\n\n            case 12:\n              return _context6.abrupt(\"return\", false);\n\n            case 15:\n              _context6.prev = 15;\n              _context6.t0 = _context6[\"catch\"](3);\n              return _context6.abrupt(\"return\", res.status(401).send());\n\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[3, 15]]);\n    }))();\n  },\n  changeUserPassword: function changeUserPassword(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var db, user, newPasswordTransformed, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context7.sent;\n              _context7.next = 5;\n              return db.collection(\"users\").findOne({\n                email: userData.email\n              });\n\n            case 5:\n              user = _context7.sent;\n              _context7.t0 = user && user.password;\n\n              if (!_context7.t0) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 10;\n              return _bcrypt[\"default\"].compare(userData.oldPassword, user.password);\n\n            case 10:\n              _context7.t0 = _context7.sent;\n\n            case 11:\n              if (!_context7.t0) {\n                _context7.next = 19;\n                break;\n              }\n\n              _context7.next = 14;\n              return _bcrypt[\"default\"].hash(userData.newPassword, 8);\n\n            case 14:\n              newPasswordTransformed = _context7.sent;\n              _context7.next = 17;\n              return db.collection('users').updateOne({\n                _id: user._id\n              }, {\n                $set: {\n                  password: newPasswordTransformed\n                }\n              });\n\n            case 17:\n              result = _context7.sent;\n              return _context7.abrupt(\"return\", result.modifiedCount == 1);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "register",
        "userData",
        "Object",
        "entries",
        "key",
        "value",
        "res",
        "json",
        "status",
        "partner",
        "bcrypt",
        "hash",
        "password",
        "Date",
        "now",
        "user",
        "date_created",
        "jmbag",
        "account_type",
        "name",
        "surname",
        "technology",
        "year",
        "journalID",
        "company",
        "adress",
        "about_us",
        "website",
        "contact_email",
        "contact_number",
        "telephone_number",
        "img_url",
        "insertOne",
        "insertResult",
        "insertedId",
        "userID",
        "code",
        "Error",
        "authenticateUser",
        "findOne",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "isValidUser",
        "req",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "console",
        "log",
        "send",
        "verify",
        "isStudent",
        "accountType",
        "isPartner",
        "path",
        "method",
        "changeUserPassword",
        "oldPassword",
        "newPassword",
        "newPasswordTransformed",
        "updateOne",
        "_id",
        "$set",
        "result",
        "modifiedCount"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db'\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n(async () => {\r\n    let db = await connect();\r\n    db.collection('users').createIndex({ email: 1 }, { unique: true });\r\n})();\r\n\r\n\r\nexport default {\r\n    async register(userData){\r\n\r\n        for (const [key, value] of Object.entries(userData)) {\r\n            if(!value){\r\n              res.json({status: 'Missing data'})\r\n              return\r\n            }\r\n        }\r\n\r\n        let db = await connect()\r\n\r\n        let partner = {}\r\n        \r\n        let user = {\r\n            email: userData.email,\r\n            password: await bcrypt.hash(userData.password, 8),\r\n            date_created: Date.now()\r\n        }\r\n\r\n\r\n        if(userData.jmbag){\r\n            user.account_type = 'Student',\r\n            user.jmbag = userData.jmbag,\r\n            user.name = userData.name,\r\n            user.surname = userData.surname,\r\n            user.technology = userData.technology\r\n            user.year= userData.year\r\n            user.journalID = false\r\n        } else{\r\n            user.account_type = 'Poslodavac',\r\n            partner.company = userData.name\r\n            partner.technology= userData.technology,\r\n            partner.adress = userData.adress,\r\n            partner.about_us = userData.about_us,\r\n            partner.website = userData.website,\r\n            partner.date_created = Date.now()\r\n            partner.contact_email = userData.contact_email,\r\n            partner.contact_number = userData.telephone_number\r\n            partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80'\r\n        }\r\n        \r\n\r\n        try{\r\n            let insertResult = await db.collection('users').insertOne(user);\r\n      \r\n            if(insertResult && insertResult.insertedId){\r\n                delete user.password\r\n                partner.userID = ObjectID(insertResult.insertedId)\r\n\r\n                return partner \r\n            }\r\n        }\r\n        catch(e){\r\n            if (e.name ==\"MongoError\" && e.code == 11000){\r\n                throw new Error(\"User already exists\")\r\n            }\r\n        }   \r\n\r\n\r\n    },\r\n\r\n\r\n    async authenticateUser(email,password){\r\n        let db = await connect()\r\n        let user = await db.collection(\"users\").findOne({email : email})\r\n\r\n        // provjerava da li je ovaj hesh u bazi izveden iz cistog passworda\r\n        if(user && user.password && (await bcrypt.compare(password, user.password))){\r\n            //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \r\n            //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\r\n            //naš token sadrži sve podatke o useru\r\n            //password nije potrebno spremati u token jer smo ga već provjerili\r\n            delete user.password\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm: \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            })\r\n            \r\n            user.token = token\r\n\r\n            return user \r\n\r\n        }\r\n        else {\r\n            throw new Error('Cannot authenticate')\r\n        }\r\n    },\r\n\r\n\r\n    async isValidUser(req,res, next){\r\n        \r\n        try{\r\n            let authorization = req.headers.authorization.split(' ')\r\n            let type = authorization[0]\r\n            let token = authorization[1]\r\n            console.log(req)\r\n            if (type != 'Bearer'){\r\n                //console.log('type:' + type)\r\n         \r\n                res.status(401).send()\r\n                return false;\r\n            }\r\n            else {\r\n                //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\r\n                //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\r\n                req.jwt = jwt.verify(token, process.env.JWT_SECRET)\r\n                \r\n                return next()\r\n            }\r\n        }\r\n        catch(e){\r\n\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n    async isStudent(req,res, next){\r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            \r\n            if (accountType ===  'Student' )  return next() \r\n            //fali jos return false u else ako nece funkcionirati\r\n            else  {\r\n                res.status(401).send()\r\n                return false\r\n            }\r\n        }\r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n    async isPartner(req,res, next){\r\n        console.log('tu sam')\r\n        let accountType = req.jwt.account_type\r\n        console.log(req)\r\n        try{\r\n            if (accountType ===  'Poslodavac'   ||   accountType === 'Admin')  {\r\n                //poslodavac nema pristup kreiranju i brisanju poslodavaca odnosno partnera \r\n                if(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE') ){\r\n                        res.status(401).send()\r\n                        return false\r\n                }\r\n\r\n                return next() \r\n            }\r\n            else  {\r\n                res.status(401).send()}\r\n                return false\r\n            }\r\n\r\n        \r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n    \r\n\r\n\r\n    async changeUserPassword(userData){\r\n        let db = await connect()\r\n \r\n        let user = await db.collection(\"users\").findOne({email : userData.email})\r\n        \r\n\r\n        if (user && user.password && (await bcrypt.compare(userData.oldPassword, user.password))){\r\n            let newPasswordTransformed = await bcrypt.hash(userData.newPassword, 8)\r\n\r\n            let result = await db.collection('users').updateOne(\r\n                { _id: user._id },\r\n                {\r\n                    $set: {\r\n                        password: newPasswordTransformed,\r\n                    },\r\n                }\r\n            );\r\n            return result.modifiedCount == 1;\r\n        }\r\n    }\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1598349032868
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\methods.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "methods.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar methods = {\n  validateData: function validateData(data) {\n    for (var _i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      if (!value && key != 'views') {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  // jer je skoro identičan postupak za dodavanje partnera i projekta\n  pushData: function () {\n    var _pushData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data, collectionName) {\n      var db, getPartner, insertResult, id;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 2:\n              _context.next = 4;\n              return (0, _db[\"default\"])();\n\n            case 4:\n              db = _context.sent;\n              _context.prev = 5;\n\n              if (!(collectionName === 'projects')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(data.userID)\n              });\n\n            case 9:\n              getPartner = _context.sent;\n              data.partnerID = getPartner._id;\n\n            case 11:\n              _context.next = 13;\n              return db.collection(collectionName).insertOne(data);\n\n            case 13:\n              insertResult = _context.sent;\n              id = insertResult.insertedId;\n\n              if (!id) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\", id);\n\n            case 19:\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 20:\n              _context.next = 25;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0.name + ': ' + _context.t0.message);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 22]]);\n    }));\n\n    function pushData(_x, _x2) {\n      return _pushData.apply(this, arguments);\n    }\n\n    return pushData;\n  }(),\n  addPartner: function () {\n    var _addPartner = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(partnerData) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              delete partnerData.account_type;\n              partnerData.views = 0;\n              _context2.next = 5;\n              return methods.pushData(partnerData, 'partners');\n\n            case 5:\n              result = _context2.sent;\n              console.log('res', result);\n              return _context2.abrupt(\"return\", result);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.status(500).json({\n                error: _context2.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    function addPartner(_x3) {\n      return _addPartner.apply(this, arguments);\n    }\n\n    return addPartner;\n  }(),\n  // identičan postupak za promjenu info partnera i projekta -- REFakTORIRATI staviti sve u try catch i u routes.js?\n  changeInfo: function () {\n    var _changeInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, collectionName) {\n      var result, id, db;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 2:\n              if (data._id == null) {\n                id = data.id;\n                delete data.id;\n              } else {\n                id = data._id;\n                delete data._id;\n              }\n\n              _context3.next = 5;\n              return (0, _db[\"default\"])();\n\n            case 5:\n              db = _context3.sent;\n              _context3.prev = 6;\n\n              if (!(data.updateDoc === 'true' && data.method == 'put')) {\n                _context3.next = 15;\n                break;\n              }\n\n              delete data.updateDoc;\n              delete data.method;\n              _context3.next = 12;\n              return db.collection(collectionName).replaceOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, data);\n\n            case 12:\n              result = _context3.sent;\n              _context3.next = 26;\n              break;\n\n            case 15:\n              if (!(data.updateDoc === 'true' && data.method == 'patch')) {\n                _context3.next = 23;\n                break;\n              }\n\n              delete data.updateDoc;\n              delete data.method;\n              _context3.next = 20;\n              return db.collection(collectionName).updateOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, {\n                $set: data\n              });\n\n            case 20:\n              result = _context3.sent;\n              _context3.next = 26;\n              break;\n\n            case 23:\n              _context3.next = 25;\n              return db.collection(collectionName).deleteOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 25:\n              result = _context3.sent;\n\n            case 26:\n              _context3.next = 31;\n              break;\n\n            case 28:\n              _context3.prev = 28;\n              _context3.t0 = _context3[\"catch\"](6);\n              console.log(_context3.t0);\n\n            case 31:\n              if (!(result.modifiedCount == 1 || result.deletedCount == 1)) {\n                _context3.next = 35;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'success');\n\n            case 35:\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 36:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[6, 28]]);\n    }));\n\n    function changeInfo(_x4, _x5) {\n      return _changeInfo.apply(this, arguments);\n    }\n\n    return changeInfo;\n  }(),\n  //nece trebati ako su imena atributa ista\n  mapAttributes: function () {\n    var _mapAttributes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(projectData) {\n      var project;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              project = {\n                company: projectData.company,\n                project_description: projectData.project_description,\n                date_created: Date.now(),\n                contact: projectData.contact,\n                technologies: projectData.technologies,\n                preferences: projectData.preferences,\n                requirements: projectData.requirements,\n                duration: projectData.duration,\n                location: projectData.location,\n                note: projectData.note,\n                allocated_to: projectData.allocated_to,\n                selected_by: projectData.selected_by,\n                img_url: projectData.img_url\n              };\n              return _context4.abrupt(\"return\", project);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function mapAttributes(_x6) {\n      return _mapAttributes.apply(this, arguments);\n    }\n\n    return mapAttributes;\n  }(),\n  //  identičan postupak za pretragu partnera i projekta\n  search: function () {\n    var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(query, atributi, collectionName) {\n      var db, selekcija, pretraga, terms, cursor, results;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              selekcija = {};\n\n              if (query._any || collectionName === 'users') {\n                pretraga = query._any;\n\n                if (collectionName === 'users') {\n                  pretraga = pretraga + ' Student';\n                }\n\n                terms = pretraga.split(' ');\n                if (!query._any) terms.shift();\n                console.log('terms:', terms);\n                selekcija = {\n                  $and: []\n                };\n                /*\r\n                terms.map(function(term){\r\n                    let or = { $or: [] };\r\n                    atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                    selekcija.$and.push(or);\r\n                })\r\n                */\n\n                terms.forEach(function (term) {\n                  var or = {\n                    $or: []\n                  };\n                  atributi.forEach(function (atribut) {\n                    or.$or.push(_defineProperty({}, atribut, new RegExp(term, \"i\")));\n                  });\n                  selekcija.$and.push(or);\n                });\n              }\n\n              _context5.next = 7;\n              return db.collection(collectionName).find(selekcija).sort({\n                company: 1\n              });\n\n            case 7:\n              cursor = _context5.sent;\n              _context5.next = 10;\n              return cursor.toArray();\n\n            case 10:\n              results = _context5.sent;\n              results.forEach(function (doc) {\n                doc.id = doc._id;\n                delete doc._id;\n                if (collectionName == 'users') delete doc.password;\n              });\n              return _context5.abrupt(\"return\", results);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function search(_x7, _x8, _x9) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }()\n};\nvar _default = methods;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "methods.js"
      ],
      "names": [
        "methods",
        "validateData",
        "data",
        "Object",
        "entries",
        "key",
        "value",
        "pushData",
        "collectionName",
        "Error",
        "db",
        "collection",
        "findOne",
        "userID",
        "getPartner",
        "partnerID",
        "_id",
        "insertOne",
        "insertResult",
        "id",
        "insertedId",
        "console",
        "error",
        "name",
        "message",
        "addPartner",
        "partnerData",
        "account_type",
        "views",
        "result",
        "log",
        "res",
        "status",
        "json",
        "changeInfo",
        "updateDoc",
        "method",
        "replaceOne",
        "updateOne",
        "$set",
        "deleteOne",
        "modifiedCount",
        "deletedCount",
        "mapAttributes",
        "projectData",
        "project",
        "company",
        "project_description",
        "date_created",
        "Date",
        "now",
        "contact",
        "technologies",
        "preferences",
        "requirements",
        "duration",
        "location",
        "note",
        "allocated_to",
        "selected_by",
        "img_url",
        "search",
        "query",
        "atributi",
        "selekcija",
        "_any",
        "pretraga",
        "terms",
        "split",
        "shift",
        "$and",
        "forEach",
        "term",
        "or",
        "$or",
        "atribut",
        "push",
        "RegExp",
        "find",
        "sort",
        "cursor",
        "toArray",
        "results",
        "doc",
        "password"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "/* Svrha ovog filea je odvojiti metode odnosno funkcije od ruta i handlera radi preglednosti, a metode su pisane radi redundancije koda */\r\nimport connect from './db.js'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n\r\n\r\nlet methods  = {\r\n\r\n\r\n    validateData : (data) => {\r\n        for (const [key, value] of Object.entries(data)) {\r\n            if(!value && key != 'views'){\r\n\r\n              return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n\r\n    \r\n\r\n    // jer je skoro identičan postupak za dodavanje partnera i projekta\r\n    pushData : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n\r\n            throw new Error(\"Error accured during inserting project or partner\")        \r\n        }\r\n            \r\n        let db = await connect()\r\n     \r\n        try{\r\n            \r\n            //projektu pridodajemo partnerID radi lakšeg mapiranja i rada s podacima\r\n            if(collectionName === 'projects') {\r\n       \r\n                let getPartner  = await db.collection(\"partners\").findOne({userID: ObjectID(data.userID)})\r\n    \r\n                data.partnerID = getPartner._id\r\n            }\r\n            \r\n            let insertResult = await db.collection(collectionName).insertOne(data);\r\n            let id = insertResult.insertedId\r\n\r\n            if(id) return id\r\n            else throw new Error(\"Error accured during inserting project or partner\")\r\n        \r\n        }\r\n        \r\n            \r\n        catch(e){\r\n                console.error(e.name + ': ' + e.message)\r\n        } \r\n    },\r\n\r\n\r\n   \r\n    addPartner : async (partnerData) => {\r\n        \r\n        try{\r\n            delete partnerData.account_type\r\n            partnerData.views = 0\r\n\r\n            let result = await methods.pushData(partnerData, 'partners')\r\n            console.log('res',result)\r\n            return result\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n    // identičan postupak za promjenu info partnera i projekta -- REFakTORIRATI staviti sve u try catch i u routes.js?\r\n    changeInfo : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n            /* res nije tu definiran ali iskoristiti ovo drugdje\r\n            res.json({\r\n                status: 'fail',\r\n                reason : 'incomplete update data'\r\n            })\r\n            */\r\n            return 'fail'  \r\n        }\r\n        \r\n        let result, id \r\n\r\n        if (data._id == null){\r\n            id = data.id\r\n            delete data.id\r\n        }else{\r\n            id = data._id\r\n            delete data._id\r\n        }\r\n        \r\n        let db = await connect();\r\n\r\n        try {\r\n\r\n            if (data.updateDoc==='true' && data.method == 'put') {\r\n                delete data.updateDoc\r\n                delete data.method\r\n                result = await db.collection(collectionName).replaceOne( { _id: ObjectID(id) }, data);\r\n            } \r\n\r\n            else if (data.updateDoc==='true' && data.method == 'patch') {\r\n                delete data.updateDoc\r\n                delete data.method\r\n                result = await db.collection(collectionName).updateOne( { _id: ObjectID(id) },{ $set: data, });\r\n            } \r\n                \r\n            else    result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } )\r\n        }\r\n        \r\n\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n     \r\n\r\n        if (result.modifiedCount == 1 || result.deletedCount == 1)  return 'success'\r\n        else return 'fail'\r\n        \r\n    },\r\n\r\n\r\n    //nece trebati ako su imena atributa ista\r\n    mapAttributes : async (projectData) =>{\r\n     \r\n        let project = {\r\n                company: projectData.company,\r\n                project_description: projectData.project_description,\r\n                date_created: Date.now(),\r\n                contact: projectData.contact,\r\n                technologies: projectData.technologies,\r\n                preferences: projectData.preferences,\r\n                requirements: projectData.requirements,\r\n                duration: projectData.duration,\r\n                location: projectData.location,\r\n                note: projectData.note,\r\n                allocated_to: projectData.allocated_to,\r\n                selected_by: projectData.selected_by,\r\n                img_url: projectData.img_url\r\n                \r\n        }\r\n        return project\r\n    },\r\n\r\n\r\n    \r\n    //  identičan postupak za pretragu partnera i projekta\r\n    search : async (query, atributi, collectionName) =>{\r\n        let db = await connect()\r\n\r\n        let selekcija = {}\r\n        \r\n        if(query._any || collectionName === 'users'){\r\n            let pretraga = query._any\r\n\r\n            if (collectionName === 'users'){\r\n\r\n                pretraga = pretraga + ' Student'\r\n            } \r\n\r\n            let terms = pretraga.split(' ')\r\n            if (!query._any)  terms.shift()\r\n            console.log('terms:',terms)\r\n\r\n            selekcija = {\r\n                $and: []\r\n            }\r\n\r\n            /*\r\n            terms.map(function(term){\r\n                let or = { $or: [] };\r\n                atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                selekcija.$and.push(or);\r\n            })\r\n            */\r\n            \r\n            \r\n            terms.forEach((term) => {\r\n                let or = {\r\n                    $or: []\r\n                };\r\n\r\n                atributi.forEach(atribut => {\r\n                    or.$or.push({ [atribut]: new RegExp(term, \"i\") });\r\n                })\r\n                \r\n                selekcija.$and.push(or);\r\n            });\r\n            \r\n            \r\n     }\r\n     \r\n        let cursor = await db.collection(collectionName).find(selekcija).sort({company: 1})\r\n\r\n        let results =  await cursor.toArray()\r\n\r\n        results.forEach(doc => {\r\n            doc.id = doc._id\r\n            delete doc._id\r\n\r\n            if (collectionName == 'users') delete doc.password\r\n        })\r\n\r\n\r\n        return results\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1598337612433
  }
}