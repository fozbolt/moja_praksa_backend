{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].json({\n  limit: '50mb',\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].urlencoded({\n  limit: '50mb',\n  extended: true\n}));\napp.get('/', _routes[\"default\"].home);\napp.patch('/', _routes[\"default\"].addView);\napp.post('/register', _routes[\"default\"].registration);\napp.post('/login', _routes[\"default\"].login);\napp.patch('/register', [_auth[\"default\"].isValidUser], _routes[\"default\"].changePassword); //register? bolje change_password, ali onda je to nova ruta\n\napp.patch('/journal', _routes[\"default\"].submitJournal);\napp.post('/application_form', _routes[\"default\"].applicationForm);\napp.get('/instructions', _routes[\"default\"].getInstructions);\napp.patch('/instructions', _routes[\"default\"].changeInstructions); //promijeniti u put\n\napp.patch('/template', _routes[\"default\"].uploadTemplate);\napp.get('/template', _routes[\"default\"].getTemplate);\napp.patch('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo); //put\n\napp[\"delete\"]('/user', [_auth[\"default\"].isValidUser], _routes[\"default\"].changeUserInfo); //students\n//app.get('/students/:id', routes.getOneStudent)\n\napp.get('/students', _routes[\"default\"].getStudents);\napp.get('/journal/:id', _routes[\"default\"].getJournal); //projects\n\napp.get('/projects', _routes[\"default\"].getProjects);\napp.post('/projects', _routes[\"default\"].addProject);\napp.get('/projects/:id', _routes[\"default\"].getOneProject);\napp.patch('/projects/:id', _routes[\"default\"].changeProjectInfo); //put\n\napp[\"delete\"]('/projects/:id', _routes[\"default\"].changeProjectInfo);\napp.patch('/chosen_projects', _routes[\"default\"].submitChosenProjects); //ipak patch a ne post?\n\napp.get('/approved_project', _routes[\"default\"].getApprovedProject);\napp.get('/check_if_partner', _routes[\"default\"].checkIfPartner); //partners\n\napp.get('/partners', _routes[\"default\"].getPartners);\napp.get('/partners/:id', _routes[\"default\"].getOnePartner);\napp.patch('/partners/:id', _routes[\"default\"].changePartnerInfo); //promijeniti u 'partner'? i maknuti drugi parametar?\n\napp[\"delete\"]('/partners/:id', _routes[\"default\"].changePartnerInfo); //put\n\napp.get('/partner_projects/:id', _routes[\"default\"].getPartnerProjects);\napp.post('/partners', _routes[\"default\"].createPartner); // //projects\n// app.get('/projects', routes.getProjects)\n// app.post('/projects',[auth.isValidUser], [auth.isPartner], routes.addProject)\n// app.get('/projects/:id', routes.getOneProject)\n// app.patch('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo)\n// app.delete('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \n// app.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\n// app.get('/approved_project', routes.getApprovedProject)\n// //partners\n// app.get('/partners', routes.getPartners)\n// app.get('/partners/:id', routes.getOnePartner)\n// app.patch('/partners/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) //promijeniti u 'partner'?\n// app.delete('/partners/:id/:update', [auth.isValidUser], [auth.isPartner],  routes.changePartnerInfo)\n// app.get('/partner_projects/:id', routes.getPartnerProjects)\n// app.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) \n\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "port",
        "use",
        "bodyParser",
        "json",
        "limit",
        "extended",
        "urlencoded",
        "get",
        "routes",
        "home",
        "patch",
        "addView",
        "post",
        "registration",
        "login",
        "auth",
        "isValidUser",
        "changePassword",
        "submitJournal",
        "applicationForm",
        "getInstructions",
        "changeInstructions",
        "uploadTemplate",
        "getTemplate",
        "changeUserInfo",
        "getStudents",
        "getJournal",
        "getProjects",
        "addProject",
        "getOneProject",
        "changeProjectInfo",
        "submitChosenProjects",
        "getApprovedProject",
        "checkIfPartner",
        "getPartners",
        "getOnePartner",
        "changePartnerInfo",
        "getPartnerProjects",
        "createPartner",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AAGA;;AACA;;AACA;;AACA;;AACA;;;;AANAA,mBAAOC,MAAP;;AASA,IAAMC,GAAG,GAAG,0BAAZ,C,CAAsB;;AACtB,IAAMC,IAAI,GAAG,IAAb,C,CAAkB;;AAElBD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AAEAF,GAAG,CAACE,GAAJ,CAAQC,uBAAWC,IAAX,CAAgB;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAhB,CAAR;AACAN,GAAG,CAACE,GAAJ,CAAQC,uBAAWI,UAAX,CAAsB;AAACF,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,QAAQ,EAAE;AAA1B,CAAtB,CAAR;AAIAN,GAAG,CAACQ,GAAJ,CAAQ,GAAR,EAAaC,mBAAOC,IAApB;AACAV,GAAG,CAACW,KAAJ,CAAU,GAAV,EAAeF,mBAAOG,OAAtB;AACAZ,GAAG,CAACa,IAAJ,CAAS,WAAT,EAAsBJ,mBAAOK,YAA7B;AACAd,GAAG,CAACa,IAAJ,CAAS,QAAT,EAAmBJ,mBAAOM,KAA1B;AACAf,GAAG,CAACW,KAAJ,CAAU,WAAV,EAAuB,CAACK,iBAAKC,WAAN,CAAvB,EAA2CR,mBAAOS,cAAlD,E,CAAkE;;AAClElB,GAAG,CAACW,KAAJ,CAAU,UAAV,EAAsBF,mBAAOU,aAA7B;AACAnB,GAAG,CAACa,IAAJ,CAAS,mBAAT,EAA8BJ,mBAAOW,eAArC;AACApB,GAAG,CAACQ,GAAJ,CAAQ,eAAR,EAAyBC,mBAAOY,eAAhC;AACArB,GAAG,CAACW,KAAJ,CAAU,eAAV,EAA2BF,mBAAOa,kBAAlC,E,CAAsD;;AACtDtB,GAAG,CAACW,KAAJ,CAAU,WAAV,EAAuBF,mBAAOc,cAA9B;AACAvB,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBC,mBAAOe,WAA5B;AACAxB,GAAG,CAACW,KAAJ,CAAU,OAAV,EAAmB,CAACK,iBAAKC,WAAN,CAAnB,EAAuCR,mBAAOgB,cAA9C,E,CAA8D;;AAC9DzB,GAAG,UAAH,CAAW,OAAX,EAAoB,CAACgB,iBAAKC,WAAN,CAApB,EAAwCR,mBAAOgB,cAA/C,E,CAGA;AACA;;AACAzB,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBC,mBAAOiB,WAA5B;AACA1B,GAAG,CAACQ,GAAJ,CAAQ,cAAR,EAAwBC,mBAAOkB,UAA/B,E,CAEA;;AACA3B,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBC,mBAAOmB,WAA5B;AACA5B,GAAG,CAACa,IAAJ,CAAS,WAAT,EAAsBJ,mBAAOoB,UAA7B;AACA7B,GAAG,CAACQ,GAAJ,CAAQ,eAAR,EAAyBC,mBAAOqB,aAAhC;AACA9B,GAAG,CAACW,KAAJ,CAAU,eAAV,EAA4BF,mBAAOsB,iBAAnC,E,CAAsD;;AACtD/B,GAAG,UAAH,CAAW,eAAX,EAA6BS,mBAAOsB,iBAApC;AACA/B,GAAG,CAACW,KAAJ,CAAU,kBAAV,EAA8BF,mBAAOuB,oBAArC,E,CAA2D;;AAC3DhC,GAAG,CAACQ,GAAJ,CAAQ,mBAAR,EAA6BC,mBAAOwB,kBAApC;AACAjC,GAAG,CAACQ,GAAJ,CAAQ,mBAAR,EAA6BC,mBAAOyB,cAApC,E,CAGA;;AACAlC,GAAG,CAACQ,GAAJ,CAAQ,WAAR,EAAqBC,mBAAO0B,WAA5B;AACAnC,GAAG,CAACQ,GAAJ,CAAQ,eAAR,EAAyBC,mBAAO2B,aAAhC;AACApC,GAAG,CAACW,KAAJ,CAAU,eAAV,EAA2BF,mBAAO4B,iBAAlC,E,CAAqD;;AACrDrC,GAAG,UAAH,CAAW,eAAX,EAA4BS,mBAAO4B,iBAAnC,E,CAAwD;;AACxDrC,GAAG,CAACQ,GAAJ,CAAQ,uBAAR,EAAiCC,mBAAO6B,kBAAxC;AACAtC,GAAG,CAACa,IAAJ,CAAS,WAAT,EAAuBJ,mBAAO8B,aAA9B,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAvC,GAAG,CAACwC,MAAJ,CAAWvC,IAAX,EAAiB;AAAA,SAAMwC,OAAO,CAACC,GAAR,gCAA+BzC,IAA/B,OAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport routes from './routes'; \r\nimport cors from 'cors'\r\nimport auth from './auth.js'\r\n\r\n\r\nconst app = express() // instanciranje aplikacije\r\nconst port = 3000 // port na kojem će web server slušati\r\n\r\napp.use(cors())\r\n\r\napp.use(bodyParser.json({limit: '50mb', extended: true}))\r\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}))\r\n\r\n\r\n\r\napp.get('/', routes.home)\r\napp.patch('/', routes.addView)\r\napp.post('/register', routes.registration)\r\napp.post('/login', routes.login)\r\napp.patch('/register', [auth.isValidUser], routes.changePassword) //register? bolje change_password, ali onda je to nova ruta\r\napp.patch('/journal', routes.submitJournal)\r\napp.post('/application_form', routes.applicationForm)\r\napp.get('/instructions', routes.getInstructions)\r\napp.patch('/instructions', routes.changeInstructions) //promijeniti u put\r\napp.patch('/template', routes.uploadTemplate)\r\napp.get('/template', routes.getTemplate)\r\napp.patch('/user', [auth.isValidUser], routes.changeUserInfo) //put\r\napp.delete('/user', [auth.isValidUser], routes.changeUserInfo)\r\n\r\n\r\n//students\r\n//app.get('/students/:id', routes.getOneStudent)\r\napp.get('/students', routes.getStudents)\r\napp.get('/journal/:id', routes.getJournal)\r\n\r\n//projects\r\napp.get('/projects', routes.getProjects)\r\napp.post('/projects', routes.addProject)\r\napp.get('/projects/:id', routes.getOneProject)\r\napp.patch('/projects/:id',  routes.changeProjectInfo) //put\r\napp.delete('/projects/:id',  routes.changeProjectInfo) \r\napp.patch('/chosen_projects', routes.submitChosenProjects) //ipak patch a ne post?\r\napp.get('/approved_project', routes.getApprovedProject)\r\napp.get('/check_if_partner', routes.checkIfPartner)\r\n\r\n\r\n//partners\r\napp.get('/partners', routes.getPartners)\r\napp.get('/partners/:id', routes.getOnePartner)\r\napp.patch('/partners/:id', routes.changePartnerInfo) //promijeniti u 'partner'? i maknuti drugi parametar?\r\napp.delete('/partners/:id', routes.changePartnerInfo)   //put\r\napp.get('/partner_projects/:id', routes.getPartnerProjects)\r\napp.post('/partners',  routes.createPartner) \r\n\r\n\r\n// //projects\r\n// app.get('/projects', routes.getProjects)\r\n// app.post('/projects',[auth.isValidUser], [auth.isPartner], routes.addProject)\r\n// app.get('/projects/:id', routes.getOneProject)\r\n// app.patch('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo)\r\n// app.delete('/projects/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changeProjectInfo) \r\n// app.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\r\n// app.get('/approved_project', routes.getApprovedProject)\r\n\r\n\r\n// //partners\r\n// app.get('/partners', routes.getPartners)\r\n// app.get('/partners/:id', routes.getOnePartner)\r\n// app.patch('/partners/:id/:update', [auth.isValidUser], [auth.isPartner], routes.changePartnerInfo) //promijeniti u 'partner'?\r\n// app.delete('/partners/:id/:update', [auth.isValidUser], [auth.isPartner],  routes.changePartnerInfo)\r\n// app.get('/partner_projects/:id', routes.getPartnerProjects)\r\n// app.post('/partners', [auth.isValidUser], [auth.isPartner], routes.createPartner) \r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1597954545321
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _methods = _interopRequireDefault(require(\"./methods.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _default = {\n  //slicna kao neke funkcije, spojiti?\n  getJournal: function getJournal(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var journalID, db, journal;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              journalID = req.params.id;\n              _context.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context.sent;\n              _context.prev = 4;\n              _context.next = 7;\n              return db.collection(\"journals\").findOne({\n                _id: (0, _mongodb.ObjectID)(journalID)\n              });\n\n            case 7:\n              journal = _context.sent;\n              res.json(journal);\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0);\n              res.json({\n                error: _context.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 11]]);\n    }))();\n  },\n  //     //identicna kao getOnePartner, spojiti?\n  //     async getOneStudent (req,res) {\n  //         //ne vraca gresku kad je id nepostojeci\n  //         let id = req.params.id\n  //         //let id = req.body.id\n  //         let db = await connect()\n  //         try{\n  //             let result = await db.collection(\"users\").findOne({_id: ObjectID(id)})\n  //             result.id = result._id\n  //             delete result._id, \n  //             delete result.password\n  //             res.json(result)\n  //         }\n  //         catch(e){\n  //             if (id == null)  res.json({error: 'id is undefined'})\n  //             else  res.json({error: e.message})\n  //         }\n  // },\n  // id usera svugdje traziti preko req.jwt!!?\n  changeUserInfo: function changeUserInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var userInfo, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userInfo = req.body;\n              _context2.next = 3;\n              return _methods[\"default\"].changeInfo(userInfo, 'users');\n\n            case 3:\n              response = _context2.sent;\n              res.send(response);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  //skoro identicna kao getonePartner skoro, spojiti u jednu\n  checkIfPartner: function checkIfPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var id, db, data;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              id = req.body._id;\n              _context3.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context3.sent;\n              _context3.next = 6;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 6:\n              data = _context3.sent;\n              if (!data) res.status(401).json({\n                error: 'user is not a partner'\n              });\n              res.json(data);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  getTemplate: function getTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var db, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context4.sent;\n              _context4.next = 5;\n              return db.collection(\"content\").findOne();\n\n            case 5:\n              result = _context4.sent;\n              res.json(result.template);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  uploadTemplate: function uploadTemplate(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var db, content, data, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              _context5.next = 5;\n              return db.collection('content').findOne();\n\n            case 5:\n              content = _context5.sent;\n              data = {\n                template: req.body,\n                id: content._id,\n                updateDoc: 'true'\n              };\n              _context5.prev = 7;\n              _context5.next = 10;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 10:\n              result = _context5.sent;\n              res.send(\"\".concat(result, \" at changing template.\"));\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](7);\n              res.status(500).json({\n                error: _context5.t0.message\n              });\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[7, 14]]);\n    }))();\n  },\n  changeInstructions: function changeInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var db, content, data, result;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context6.sent;\n              _context6.next = 5;\n              return db.collection('content').findOne();\n\n            case 5:\n              content = _context6.sent;\n              data = {\n                instructions: req.body,\n                id: content._id,\n                updateDoc: 'true'\n              };\n              _context6.prev = 7;\n              _context6.next = 10;\n              return _methods[\"default\"].changeInfo(data, 'content');\n\n            case 10:\n              result = _context6.sent;\n              res.send(\"\".concat(result, \" at changing instructions.\"));\n              _context6.next = 17;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t0 = _context6[\"catch\"](7);\n              res.status(500).json({\n                error: _context6.t0.message\n              });\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[7, 14]]);\n    }))();\n  },\n  getInstructions: function getInstructions(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              id = req.params.id;\n              _context7.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context7.sent;\n              _context7.next = 6;\n              return db.collection(\"content\").findOne();\n\n            case 6:\n              result = _context7.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result.instructions);\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  getApprovedProject: function getApprovedProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n      return regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              //testna za sad\n              res.json({\n                message: 'here is your approved project'\n              });\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  },\n  applicationForm: function applicationForm(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n      var formData, db, appExists, result;\n      return regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              formData = {\n                id: req.body.userID,\n                application: req.body.form,\n                updateDoc: 'true'\n              };\n              _context9.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context9.sent;\n              _context9.next = 6;\n              return db.collection('users').find({\n                _id: (0, _mongodb.ObjectID)(formData.id),\n                application: {\n                  $exists: true\n                }\n              });\n\n            case 6:\n              appExists = _context9.sent;\n              _context9.prev = 7;\n\n              if (!(appExists == true)) {\n                _context9.next = 10;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting\");\n\n            case 10:\n              _context9.next = 12;\n              return _methods[\"default\"].changeInfo(formData, 'users');\n\n            case 12:\n              result = _context9.sent;\n              res.send(\"\".concat(result, \" at inserting application.\"));\n              _context9.next = 19;\n              break;\n\n            case 16:\n              _context9.prev = 16;\n              _context9.t0 = _context9[\"catch\"](7);\n              res.status(500).json({\n                error: _context9.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[7, 16]]);\n    }))();\n  },\n  //refaktorirati\n  submitJournal: function submitJournal(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10() {\n      var data, db, journal, user;\n      return regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              data = {\n                userID: req.body.user_id,\n                journal: req.body.journal,\n                upload_date: Date.now() // Date(Date.now())\n\n              };\n              _context10.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context10.sent;\n              _context10.prev = 4;\n              _context10.next = 7;\n              return db.collection('journals').insertOne(data);\n\n            case 7:\n              journal = _context10.sent;\n              _context10.prev = 8;\n              user = {\n                id: data.userID,\n                journalID: journal.insertedId,\n                updateDoc: 'true'\n              };\n              _context10.next = 12;\n              return _methods[\"default\"].changeInfo(user, 'users');\n\n            case 12:\n              res.json(true); //res.json({message: 'upload successful'})\n\n              _context10.next = 19;\n              break;\n\n            case 15:\n              _context10.prev = 15;\n              _context10.t0 = _context10[\"catch\"](8);\n              res.send('Error accured during connecting journal ID with user');\n              return _context10.abrupt(\"return\", false);\n\n            case 19:\n              _context10.next = 24;\n              break;\n\n            case 21:\n              _context10.prev = 21;\n              _context10.t1 = _context10[\"catch\"](4);\n              res.json(false); //res.json({error:e.message })\n\n            case 24:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[4, 21], [8, 15]]);\n    }))();\n  },\n  getOneProject: function getOneProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              id = req.params.id;\n              _context11.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context11.sent;\n              _context11.prev = 4;\n              _context11.next = 7;\n              return db.collection(\"projects\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context11.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context11.next = 16;\n              break;\n\n            case 13:\n              _context11.prev = 13;\n              _context11.t0 = _context11[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context11.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[4, 13]]);\n    }))();\n  },\n  getPartnerProjects: function getPartnerProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12() {\n      var partnerID, db, cursor, results;\n      return regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              partnerID = req.params.id;\n              _context12.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context12.sent;\n              _context12.next = 6;\n              return db.collection(\"projects\").find({\n                partnerID: (0, _mongodb.ObjectID)(partnerID)\n              });\n\n            case 6:\n              cursor = _context12.sent;\n              _context12.next = 9;\n              return cursor.toArray();\n\n            case 9:\n              results = _context12.sent;\n              res.send(results);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }))();\n  },\n  addView: function addView(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13() {\n      var data, collectionName, result;\n      return regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              data = req.body;\n              data.updateDoc = 'true';\n              collectionName = data.collectionName;\n              delete data.collectionName;\n              _context13.next = 6;\n              return _methods[\"default\"].changeInfo(data, collectionName);\n\n            case 6:\n              result = _context13.sent;\n              res.json(result);\n\n            case 8:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }))();\n  },\n  getOnePartner: function getOnePartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14() {\n      var id, db, result;\n      return regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              //ne vraca gresku kad je id nepostojeci\n              id = req.params.id;\n              _context14.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context14.sent;\n              _context14.prev = 4;\n              _context14.next = 7;\n              return db.collection(\"partners\").findOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 7:\n              result = _context14.sent;\n              result.id = result._id;\n              delete result._id;\n              res.json(result);\n              _context14.next = 16;\n              break;\n\n            case 13:\n              _context14.prev = 13;\n              _context14.t0 = _context14[\"catch\"](4);\n              if (id == null) res.json({\n                error: 'id is undefined'\n              });else res.json({\n                error: _context14.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[4, 13]]);\n    }))();\n  },\n  changePassword: function changePassword(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15() {\n      var data, result;\n      return regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              data = req.body; //dolazi iz metode isValidUser\n\n              data.email = req.jwt.email;\n\n              if (!(data.newPassword && data.oldPassword)) {\n                _context15.next = 9;\n                break;\n              }\n\n              _context15.next = 5;\n              return _auth[\"default\"].changeUserPassword(data);\n\n            case 5:\n              result = _context15.sent;\n\n              if (result) {\n                res.status(201).send({\n                  status: 'Success'\n                });\n              } else {\n                res.status(500).json({\n                  error: 'Server error'\n                });\n              }\n\n              _context15.next = 10;\n              break;\n\n            case 9:\n              res.status(400).json({\n                error: \"Invalid input data\"\n              });\n\n            case 10:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }))();\n  },\n  login: function login(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16() {\n      var user, result;\n      return regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              user = req.body;\n              _context16.prev = 1;\n              _context16.next = 4;\n              return _auth[\"default\"].authenticateUser(user.email, user.password);\n\n            case 4:\n              result = _context16.sent;\n              res.json(result);\n              _context16.next = 11;\n              break;\n\n            case 8:\n              _context16.prev = 8;\n              _context16.t0 = _context16[\"catch\"](1);\n              res.status(401).json({\n                error: _context16.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[1, 8]]);\n    }))();\n  },\n  registration: function registration(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {\n      var newUser, partner, result;\n      return regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              newUser = req.body;\n              _context17.prev = 1;\n              _context17.next = 4;\n              return _auth[\"default\"].register(newUser);\n\n            case 4:\n              partner = _context17.sent;\n\n              if (!(newUser.account_type === ('poslodavac' || 'Poslodavac'))) {\n                _context17.next = 9;\n                break;\n              }\n\n              _context17.next = 8;\n              return _methods[\"default\"].addPartner(partner);\n\n            case 8:\n              result = _context17.sent;\n\n            case 9:\n              console.log(result);\n              res.json({\n                status: \"user with id \".concat(result, \" added\")\n              });\n              _context17.next = 16;\n              break;\n\n            case 13:\n              _context17.prev = 13;\n              _context17.t0 = _context17[\"catch\"](1);\n              res.status(500).json({\n                error: _context17.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[1, 13]]);\n    }))();\n  },\n  submitChosenProjects: function submitChosenProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18() {\n      var data, db, result, selectedBy, entries, _iterator, _step, _step$value, index, _step$value$, key, value, projectID;\n\n      return regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              data = req.body;\n              _context18.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context18.sent;\n              selectedBy = {\n                first_priority: [],\n                second_priority: [],\n                third_priority: []\n              }; //destrukcija strukture\n\n              entries = Object.entries(selectedBy);\n              _iterator = _createForOfIteratorHelper(entries.entries());\n              _context18.prev = 7;\n\n              _iterator.s();\n\n            case 9:\n              if ((_step = _iterator.n()).done) {\n                _context18.next = 18;\n                break;\n              }\n\n              _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], _step$value$ = _slicedToArray(_step$value[1], 2), key = _step$value$[0], value = _step$value$[1];\n              projectID = data.selection[index];\n              /* https://stackoverflow.com/questions/30969382/mongodb-object-key-with-es6-template-string  da bi bilo moguce dinamicki updejtati*/\n              // var attributeName\n              // let query = { \"_id\": projectID }\n              // let update = { \"$addToSet\": {} }\n              // update[\"$addToSet\"][attributeName] = data.user\n              //trik za prevariti mongo kompajler\n\n              key = 'selected_by.' + key;\n              _context18.next = 15;\n              return db.collection('projects').updateOne({\n                _id: (0, _mongodb.ObjectID)(projectID)\n              }, {\n                $addToSet: _defineProperty({}, key, data.user)\n              });\n\n            case 15:\n              result = _context18.sent;\n\n            case 16:\n              _context18.next = 9;\n              break;\n\n            case 18:\n              _context18.next = 23;\n              break;\n\n            case 20:\n              _context18.prev = 20;\n              _context18.t0 = _context18[\"catch\"](7);\n\n              _iterator.e(_context18.t0);\n\n            case 23:\n              _context18.prev = 23;\n\n              _iterator.f();\n\n              return _context18.finish(23);\n\n            case 26:\n              res.json(result);\n\n            case 27:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[7, 20, 23, 26]]);\n    }))();\n  },\n  changeProjectInfo: function changeProjectInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19() {\n      var projectData, project, response;\n      return regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              projectData = req.body;\n              delete projectData.id;\n\n              if (!projectData) {\n                _context19.next = 8;\n                break;\n              }\n\n              _context19.next = 5;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 5:\n              project = _context19.sent;\n              _context19.next = 9;\n              break;\n\n            case 8:\n              project = {};\n\n            case 9:\n              // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\n              project.id = req.params.id;\n              project.updateDoc = projectData.updateDoc;\n              _context19.next = 13;\n              return _methods[\"default\"].changeInfo(project, 'projects');\n\n            case 13:\n              response = _context19.sent;\n              res.send(response);\n\n            case 15:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }))();\n  },\n  changePartnerInfo: function changePartnerInfo(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n      var partnerInfo, response;\n      return regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              partnerInfo = req.body;\n              delete partnerInfo._id;\n              partnerInfo.id = req.params.id;\n              _context20.next = 5;\n              return _methods[\"default\"].changeInfo(partnerInfo, 'partners');\n\n            case 5:\n              response = _context20.sent;\n              res.send(response);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }))();\n  },\n  getStudents: function getStudents(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"name\", \"surname\", \"jmbag\", \"year\", \"technology\", \"email\", \"account_type\"];\n              _context21.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'users');\n\n            case 4:\n              result = _context21.sent;\n              console.log(result);\n              res.json(result);\n\n            case 7:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }))();\n  },\n  getProjects: function getProjects(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"technologies\", \"location\", \"project_description\"];\n              _context22.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'projects');\n\n            case 4:\n              result = _context22.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22);\n    }))();\n  },\n  getPartners: function getPartners(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {\n      var query, atributi, result;\n      return regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              query = req.query;\n              atributi = [\"company\", \"about_us\"];\n              _context23.next = 4;\n              return _methods[\"default\"].search(query, atributi, 'partners');\n\n            case 4:\n              result = _context23.sent;\n              res.json(result);\n\n            case 6:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23);\n    }))();\n  },\n  addProject: function addProject(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24() {\n      var projectData, project, result;\n      return regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              projectData = req.body; // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\n\n              _context24.next = 3;\n              return _methods[\"default\"].mapAttributes(projectData);\n\n            case 3:\n              project = _context24.sent;\n              //slika je hardcodana jer nema bas smisla imati custom sliku projekta\n              project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\";\n              project.userID = projectData.userID;\n              project.views = 0;\n              _context24.prev = 7;\n              _context24.next = 10;\n              return _methods[\"default\"].pushData(project, 'projects');\n\n            case 10:\n              result = _context24.sent;\n              res.send(\"project with id  \".concat(result, \" added.\"));\n              _context24.next = 17;\n              break;\n\n            case 14:\n              _context24.prev = 14;\n              _context24.t0 = _context24[\"catch\"](7);\n              res.status(500).json({\n                error: _context24.t0.message\n              });\n\n            case 17:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, null, [[7, 14]]);\n    }))();\n  },\n  createPartner: function createPartner(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25() {\n      var partnerData, partnerID;\n      return regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              console.log('tu samm');\n              partnerData = req.body; // ako će trebati kad stjepan implementira\n              //let project = await methods.mapAttributes(projectData)\n              //dok stjepan ne implementira ce biti ovako hardcodano\n\n              partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"; //za raspoznavanje koji partneri su se sami kreirali, a koji ne\n\n              partnerData.created_by_admin = true;\n              _context25.prev = 4;\n              _context25.next = 7;\n              return _methods[\"default\"].pushData(partnerData, 'partners');\n\n            case 7:\n              partnerID = _context25.sent;\n              res.send(\"partner with id  \".concat(partnerID, \" added.\"));\n              _context25.next = 14;\n              break;\n\n            case 11:\n              _context25.prev = 11;\n              _context25.t0 = _context25[\"catch\"](4);\n              res.status(500).json({\n                error: _context25.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[4, 11]]);\n    }))();\n  },\n  home: function home(req, res) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26() {\n      var db, numberOfDocs;\n      return regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context26.sent;\n              numberOfDocs = {};\n              _context26.next = 6;\n              return db.collection(\"projects\").countDocuments();\n\n            case 6:\n              numberOfDocs.projectsCounter = _context26.sent;\n              _context26.next = 9;\n              return db.collection(\"partners\").countDocuments();\n\n            case 9:\n              numberOfDocs.partnersCounter = _context26.sent;\n              _context26.next = 12;\n              return db.collection(\"users\").countDocuments({\n                account_type: 'Student'\n              });\n\n            case 12:\n              numberOfDocs.studentsCounter = _context26.sent;\n              res.json(numberOfDocs);\n\n            case 14:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJnZXRKb3VybmFsIiwicmVxIiwicmVzIiwiam91cm5hbElEIiwicGFyYW1zIiwiaWQiLCJkYiIsImNvbGxlY3Rpb24iLCJmaW5kT25lIiwiX2lkIiwiam91cm5hbCIsImpzb24iLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJtZXNzYWdlIiwiY2hhbmdlVXNlckluZm8iLCJ1c2VySW5mbyIsImJvZHkiLCJtZXRob2RzIiwiY2hhbmdlSW5mbyIsInJlc3BvbnNlIiwic2VuZCIsImNoZWNrSWZQYXJ0bmVyIiwidXNlcklEIiwiZGF0YSIsInN0YXR1cyIsImdldFRlbXBsYXRlIiwicmVzdWx0IiwidGVtcGxhdGUiLCJ1cGxvYWRUZW1wbGF0ZSIsImNvbnRlbnQiLCJ1cGRhdGVEb2MiLCJjaGFuZ2VJbnN0cnVjdGlvbnMiLCJpbnN0cnVjdGlvbnMiLCJnZXRJbnN0cnVjdGlvbnMiLCJnZXRBcHByb3ZlZFByb2plY3QiLCJhcHBsaWNhdGlvbkZvcm0iLCJmb3JtRGF0YSIsImFwcGxpY2F0aW9uIiwiZm9ybSIsImZpbmQiLCIkZXhpc3RzIiwiYXBwRXhpc3RzIiwiRXJyb3IiLCJzdWJtaXRKb3VybmFsIiwidXNlcl9pZCIsInVwbG9hZF9kYXRlIiwiRGF0ZSIsIm5vdyIsImluc2VydE9uZSIsInVzZXIiLCJpbnNlcnRlZElkIiwiZ2V0T25lUHJvamVjdCIsImdldFBhcnRuZXJQcm9qZWN0cyIsInBhcnRuZXJJRCIsImN1cnNvciIsInRvQXJyYXkiLCJyZXN1bHRzIiwiYWRkVmlldyIsImNvbGxlY3Rpb25OYW1lIiwiZ2V0T25lUGFydG5lciIsImNoYW5nZVBhc3N3b3JkIiwiZW1haWwiLCJqd3QiLCJuZXdQYXNzd29yZCIsIm9sZFBhc3N3b3JkIiwiYXV0aCIsImNoYW5nZVVzZXJQYXNzd29yZCIsImxvZ2luIiwiYXV0aGVudGljYXRlVXNlciIsInBhc3N3b3JkIiwicmVnaXN0cmF0aW9uIiwibmV3VXNlciIsInJlZ2lzdGVyIiwicGFydG5lciIsImFjY291bnRfdHlwZSIsImFkZFBhcnRuZXIiLCJzdWJtaXRDaG9zZW5Qcm9qZWN0cyIsInNlbGVjdGVkQnkiLCJmaXJzdF9wcmlvcml0eSIsInNlY29uZF9wcmlvcml0eSIsInRoaXJkX3ByaW9yaXR5IiwiZW50cmllcyIsIk9iamVjdCIsImluZGV4Iiwia2V5IiwidmFsdWUiLCJwcm9qZWN0SUQiLCJzZWxlY3Rpb24iLCJ1cGRhdGVPbmUiLCIkYWRkVG9TZXQiLCJjaGFuZ2VQcm9qZWN0SW5mbyIsInByb2plY3REYXRhIiwibWFwQXR0cmlidXRlcyIsInByb2plY3QiLCJjaGFuZ2VQYXJ0bmVySW5mbyIsInBhcnRuZXJJbmZvIiwiZ2V0U3R1ZGVudHMiLCJxdWVyeSIsImF0cmlidXRpIiwic2VhcmNoIiwiZ2V0UHJvamVjdHMiLCJnZXRQYXJ0bmVycyIsImFkZFByb2plY3QiLCJpbWdfdXJsIiwidmlld3MiLCJwdXNoRGF0YSIsImNyZWF0ZVBhcnRuZXIiLCJwYXJ0bmVyRGF0YSIsImNyZWF0ZWRfYnlfYWRtaW4iLCJob21lIiwibnVtYmVyT2ZEb2NzIiwiY291bnREb2N1bWVudHMiLCJwcm9qZWN0c0NvdW50ZXIiLCJwYXJ0bmVyc0NvdW50ZXIiLCJzdHVkZW50c0NvdW50ZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBR2U7QUFHWDtBQUNNQSxFQUFBQSxVQUpLLHNCQUlPQyxHQUpQLEVBSVdDLEdBSlgsRUFJZ0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDbkJDLGNBQUFBLFNBRG1CLEdBQ1BGLEdBQUcsQ0FBQ0csTUFBSixDQUFXQyxFQURKO0FBQUE7QUFBQSxxQkFHUixxQkFIUTs7QUFBQTtBQUduQkMsY0FBQUEsRUFIbUI7QUFBQTtBQUFBO0FBQUEscUJBTUNBLEVBQUUsQ0FBQ0MsVUFBSCxDQUFjLFVBQWQsRUFBMEJDLE9BQTFCLENBQWtDO0FBQUNDLGdCQUFBQSxHQUFH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QUFBO0FBQUEscUJBTWtCNUcsRUFBRSxDQUFDQyxVQUFILENBQWMsVUFBZCxFQUEwQjBHLGNBQTFCLEVBTmxCOztBQUFBO0FBTW5CRCxjQUFBQSxZQUFZLENBQUNHLGVBTk07QUFBQTtBQUFBLHFCQU9rQjdHLEVBQUUsQ0FBQ0MsVUFBSCxDQUFjLE9BQWQsRUFBdUIwRyxjQUF2QixDQUFzQztBQUFFckMsZ0JBQUFBLFlBQVksRUFBRztBQUFqQixlQUF0QyxDQVBsQjs7QUFBQTtBQU9uQm9DLGNBQUFBLFlBQVksQ0FBQ0ksZUFQTTtBQVduQmxILGNBQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTcUcsWUFBVDs7QUFYbUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFZdEI7QUFsaUJVLEMiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxGSWxpcC1Qcm9ibmlcXG1vamFfcHJha3NhXFxtb2phX3ByYWtzYV9iYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25uZWN0IGZyb20gJy4vZGIuanMnXHJcbmltcG9ydCBhdXRoIGZyb20gJy4vYXV0aC5qcydcclxuaW1wb3J0IHsgT2JqZWN0SUQgfSBmcm9tICdtb25nb2RiJ1xyXG5pbXBvcnQgbWV0aG9kcyBmcm9tICcuL21ldGhvZHMuanMnXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cclxuXHJcbiAgICAvL3NsaWNuYSBrYW8gbmVrZSBmdW5rY2lqZSwgc3Bvaml0aT9cclxuICAgIGFzeW5jIGdldEpvdXJuYWwgKHJlcSxyZXMpIHtcclxuICAgICAgICBsZXQgam91cm5hbElEID0gcmVxLnBhcmFtcy5pZFxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuICAgICAgIFxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IGpvdXJuYWwgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiam91cm5hbHNcIikuZmluZE9uZSh7X2lkOiBPYmplY3RJRChqb3VybmFsSUQpfSlcclxuICAgICAgICAgICAgcmVzLmpzb24oam91cm5hbClcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxyXG4gICAgICAgICAgICByZXMuanNvbih7ZXJyb3I6IGUubWVzc2FnZX0pXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcblxyXG4vLyAgICAgLy9pZGVudGljbmEga2FvIGdldE9uZVBhcnRuZXIsIHNwb2ppdGk/XHJcbi8vICAgICBhc3luYyBnZXRPbmVTdHVkZW50IChyZXEscmVzKSB7XHJcbi8vICAgICAgICAgLy9uZSB2cmFjYSBncmVza3Uga2FkIGplIGlkIG5lcG9zdG9qZWNpXHJcblxyXG4vLyAgICAgICAgIGxldCBpZCA9IHJlcS5wYXJhbXMuaWRcclxuLy8gICAgICAgICAvL2xldCBpZCA9IHJlcS5ib2R5LmlkXHJcblxyXG4vLyAgICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuLy8gICAgICAgICB0cnl7XHJcbi8vICAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwidXNlcnNcIikuZmluZE9uZSh7X2lkOiBPYmplY3RJRChpZCl9KVxyXG5cclxuLy8gICAgICAgICAgICAgcmVzdWx0LmlkID0gcmVzdWx0Ll9pZFxyXG4vLyAgICAgICAgICAgICBkZWxldGUgcmVzdWx0Ll9pZCwgXHJcbi8vICAgICAgICAgICAgIGRlbGV0ZSByZXN1bHQucGFzc3dvcmRcclxuXHJcbi8vICAgICAgICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxuLy8gICAgICAgICB9XHJcblxyXG4vLyAgICAgICAgIGNhdGNoKGUpe1xyXG4vLyAgICAgICAgICAgICBpZiAoaWQgPT0gbnVsbCkgIHJlcy5qc29uKHtlcnJvcjogJ2lkIGlzIHVuZGVmaW5lZCd9KVxyXG5cclxuLy8gICAgICAgICAgICAgZWxzZSAgcmVzLmpzb24oe2Vycm9yOiBlLm1lc3NhZ2V9KVxyXG4vLyAgICAgICAgIH1cclxuICAgICAgICBcclxuLy8gfSxcclxuXHJcbiAgICAvLyBpZCB1c2VyYSBzdnVnZGplIHRyYXppdGkgcHJla28gcmVxLmp3dCEhP1xyXG4gICAgYXN5bmMgY2hhbmdlVXNlckluZm8gKHJlcSwgcmVzKSAge1xyXG5cclxuICAgICAgICBsZXQgdXNlckluZm8gPSByZXEuYm9keVxyXG5cclxuICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBtZXRob2RzLmNoYW5nZUluZm8odXNlckluZm8sICd1c2VycycpXHJcblxyXG4gICAgICAgIHJlcy5zZW5kKHJlc3BvbnNlKVxyXG4gICAgfSxcclxuXHJcbiAgICAvL3Nrb3JvIGlkZW50aWNuYSBrYW8gZ2V0b25lUGFydG5lciBza29ybywgc3Bvaml0aSB1IGplZG51XHJcbiAgICBhc3luYyBjaGVja0lmUGFydG5lcihyZXEsIHJlcykge1xyXG4gICAgICAgICAgICBsZXQgaWQgPSByZXEuYm9keS5faWRcclxuXHJcbiAgICAgICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInBhcnRuZXJzXCIpLmZpbmRPbmUoe3VzZXJJRCA6IE9iamVjdElEKGlkKX0pO1xyXG5cclxuICAgICAgICAgICAgaWYoIWRhdGEpICByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAndXNlciBpcyBub3QgYSBwYXJ0bmVyJ30pXHJcblxyXG4gICAgICAgICAgICByZXMuanNvbiAoZGF0YSk7XHJcbiAgICAgICAgXHJcbiAgICB9LFxyXG5cclxuICAgIGFzeW5jIGdldFRlbXBsYXRlKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcblxyXG4gICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiY29udGVudFwiKS5maW5kT25lKClcclxuXHJcblxyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdC50ZW1wbGF0ZSlcclxuXHJcbiAgICB9LFxyXG5cclxuICAgIGFzeW5jIHVwbG9hZFRlbXBsYXRlKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgLy9wb2JvbGpzYXRpXHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcclxuICAgICAgICBsZXQgY29udGVudCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2NvbnRlbnQnKS5maW5kT25lKCk7XHJcblxyXG4gICAgICAgIGxldCBkYXRhID0ge1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZSA6IHJlcS5ib2R5LFxyXG4gICAgICAgICAgICBpZCA6IGNvbnRlbnQuX2lkLFxyXG4gICAgICAgICAgICB1cGRhdGVEb2MgOiAndHJ1ZSdcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyhkYXRhLCAnY29udGVudCcpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXMuc2VuZChgJHtyZXN1bHR9IGF0IGNoYW5naW5nIHRlbXBsYXRlLmApXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZS5tZXNzYWdlfSk7XHJcbiAgICAgICAgfSAgXHJcblxyXG4gICAgfSxcclxuXHJcbiAgICBhc3luYyBjaGFuZ2VJbnN0cnVjdGlvbnMocmVxLCByZXMpIHtcclxuICAgICAgICAvL3BvYm9sanNhdGlcclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KCk7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdjb250ZW50JykuZmluZE9uZSgpO1xyXG5cclxuICAgICAgICBsZXQgZGF0YSA9IHtcclxuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25zIDogcmVxLmJvZHksXHJcbiAgICAgICAgICAgIGlkIDogY29udGVudC5faWQsXHJcbiAgICAgICAgICAgIHVwZGF0ZURvYyA6ICd0cnVlJ1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgbWV0aG9kcy5jaGFuZ2VJbmZvKGRhdGEsICdjb250ZW50JylcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKGAke3Jlc3VsdH0gYXQgY2hhbmdpbmcgaW5zdHJ1Y3Rpb25zLmApXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogZS5tZXNzYWdlfSk7XHJcbiAgICAgICAgfSAgXHJcblxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgYXN5bmMgZ2V0SW5zdHJ1Y3Rpb25zKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZFxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJjb250ZW50XCIpLmZpbmRPbmUoKVxyXG5cclxuICAgICAgICByZXN1bHQuaWQgPSByZXN1bHQuX2lkXHJcbiAgICAgICAgZGVsZXRlIHJlc3VsdC5faWRcclxuXHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0Lmluc3RydWN0aW9ucylcclxuICAgIH0sXHJcblxyXG4gICAgYXN5bmMgZ2V0QXBwcm92ZWRQcm9qZWN0KHJlcSwgcmVzKSB7XHJcbiAgICAgICAgLy90ZXN0bmEgemEgc2FkXHJcbiAgICAgICAgcmVzLmpzb24oe21lc3NhZ2U6ICdoZXJlIGlzIHlvdXIgYXBwcm92ZWQgcHJvamVjdCd9KVxyXG4gICAgfSxcclxuXHJcbiAgICBhc3luYyBhcHBsaWNhdGlvbkZvcm0gKHJlcSwgcmVzKSB7XHJcblxyXG4gICAgICAgIGxldCBmb3JtRGF0YSA9IHtcclxuICAgICAgICAgICAgaWQgOiByZXEuYm9keS51c2VySUQsXHJcbiAgICAgICAgICAgIGFwcGxpY2F0aW9uIDogcmVxLmJvZHkuZm9ybSxcclxuICAgICAgICAgICAgdXBkYXRlRG9jIDogJ3RydWUnXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICAgICAgbGV0IGFwcEV4aXN0cyA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZmluZCggeyBfaWQ6IE9iamVjdElEKGZvcm1EYXRhLmlkKSAsIGFwcGxpY2F0aW9uOiB7ICRleGlzdHM6IHRydWV9IH0gKVxyXG5cclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGlmIChhcHBFeGlzdHMgPT0gdHJ1ZSkgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgYWNjdXJlZCBkdXJpbmcgaW5zZXJ0aW5nXCIpXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgbWV0aG9kcy5jaGFuZ2VJbmZvKGZvcm1EYXRhLCAndXNlcnMnKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVzLnNlbmQoYCR7cmVzdWx0fSBhdCBpbnNlcnRpbmcgYXBwbGljYXRpb24uYClcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlLm1lc3NhZ2V9KTtcclxuICAgICAgICB9ICBcclxuICAgIFxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgLy9yZWZha3RvcmlyYXRpXHJcbiAgICBhc3luYyBzdWJtaXRKb3VybmFsIChyZXEscmVzKSB7XHJcbiAgICAgICAgbGV0IGRhdGEgPSB7XHJcbiAgICAgICAgICAgIHVzZXJJRCA6IHJlcS5ib2R5LnVzZXJfaWQsXHJcbiAgICAgICAgICAgIGpvdXJuYWwgOiByZXEuYm9keS5qb3VybmFsLFxyXG4gICAgICAgICAgICB1cGxvYWRfZGF0ZSA6ICBEYXRlLm5vdygpIC8vIERhdGUoRGF0ZS5ub3coKSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG4gICAgICAgIGxldCBqb3VybmFsXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgLyogYWtvIMW+ZWxpbW8gZGEga29yaXNuaWsgbmUgbW/FvmUgdmnFoWUgcHV0YSB1cGxvYWRhdGkgZG5ldm5payAqL1xyXG4gICAgICAgICAgICAvL2xldCBjaGVja1VzZXIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCd1c2VycycpLmZpbmRPbmUoe19pZCA6IE9iamVjdElEKGRhdGEudXNlcklEKX0pXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvL2lmIChjaGVja1VzZXIuam91cm5hbElEICE9IGZhbHNlKSB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBhY2N1cmVkIGR1cmluZyBpbnNlcnRpbmdcIilcclxuXHJcbiAgICAgICAgICAgIGpvdXJuYWwgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdqb3VybmFscycpLmluc2VydE9uZShkYXRhKVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGxldCB1c2VyID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlkIDogZGF0YS51c2VySUQsXHJcbiAgICAgICAgICAgICAgICAgICAgam91cm5hbElEIDogam91cm5hbC5pbnNlcnRlZElkLFxyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZURvYyA6ICd0cnVlJ1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyh1c2VyLCAndXNlcnMnKVxyXG5cclxuICAgICAgICAgICAgICAgIHJlcy5qc29uKHRydWUpXHJcbiAgICAgICAgICAgICAgICAvL3Jlcy5qc29uKHttZXNzYWdlOiAndXBsb2FkIHN1Y2Nlc3NmdWwnfSlcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgICAgICByZXMuc2VuZCgnRXJyb3IgYWNjdXJlZCBkdXJpbmcgY29ubmVjdGluZyBqb3VybmFsIElEIHdpdGggdXNlcicpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICByZXMuanNvbihmYWxzZSlcclxuICAgICAgICAgICAgLy9yZXMuanNvbih7ZXJyb3I6ZS5tZXNzYWdlIH0pXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBhc3luYyBnZXRPbmVQcm9qZWN0IChyZXEscmVzKSB7XHJcbiAgICAgICAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZFxyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kT25lKHtfaWQ6IE9iamVjdElEKGlkKX0pXHJcblxyXG4gICAgICAgICAgICByZXN1bHQuaWQgPSByZXN1bHQuX2lkXHJcbiAgICAgICAgICAgIGRlbGV0ZSByZXN1bHQuX2lkXHJcblxyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgaWYgKGlkID09IG51bGwpICByZXMuanNvbih7ZXJyb3I6ICdpZCBpcyB1bmRlZmluZWQnfSlcclxuXHJcbiAgICAgICAgICAgIGVsc2UgIHJlcy5qc29uKHtlcnJvcjogZS5tZXNzYWdlfSlcclxuICAgICAgICB9XHJcbn0sXHJcblxyXG5cclxuICAgIGFzeW5jIGdldFBhcnRuZXJQcm9qZWN0cyAocmVxLHJlcykge1xyXG5cclxuICAgICAgICBsZXQgcGFydG5lcklEID0gcmVxLnBhcmFtcy5pZFxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuICAgICAgICAvL25hxJFpIHByb2pla3RlIGtvamUgcHJpcGFkYWp1IG9kcmXEkWVub20gcG9zbG9kYXZjdVxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgbGV0IGZpbmRfSURzPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicGFydG5lcnNcIikuZmluZCh7X2lkOiBPYmplY3RJRChpZCl9KVxyXG4gICAgICAgIGxldCByZXN1bHQgPSAgYXdhaXQgZmluZF9JRHMudG9BcnJheSgpXHJcblxyXG4gICAgICAgIGxldCBmaWx0ZXJlZF9JRHMgPSByZXN1bHRbMF0ucHJvamVjdHNcclxuXHJcbiAgICAgICAgbGV0IGN1cnNvcjIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicHJvamVjdHNcIikuZmluZCh7X2lkOiB7JGluOiBmaWx0ZXJlZF9JRHN9fSlcclxuICAgICAgICBsZXQgZmluYWxSZXN1bHQgPSAgYXdhaXQgY3Vyc29yMi50b0FycmF5KClcclxuICAgICAgICAqL1xyXG4gICAgICAgIGxldCBjdXJzb3I9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5maW5kKHtwYXJ0bmVySUQ6IE9iamVjdElEKHBhcnRuZXJJRCl9KVxyXG5cclxuICAgICAgICBsZXQgcmVzdWx0cyA9ICBhd2FpdCBjdXJzb3IudG9BcnJheSgpXHJcbiAgICAgICAgXHJcbiAgICAgICAgcmVzLnNlbmQocmVzdWx0cylcclxuXHJcbn0sXHJcblxyXG4gICAgYXN5bmMgYWRkVmlldyhyZXEsIHJlcyl7XHJcbiAgICAgICAgbGV0IGRhdGEgPSByZXEuYm9keVxyXG4gICAgICAgIGRhdGEudXBkYXRlRG9jID0gJ3RydWUnXHJcbiAgICAgICAgbGV0IGNvbGxlY3Rpb25OYW1lID0gZGF0YS5jb2xsZWN0aW9uTmFtZVxyXG4gICAgICAgIGRlbGV0ZSBkYXRhLmNvbGxlY3Rpb25OYW1lXHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyhkYXRhLCBjb2xsZWN0aW9uTmFtZSlcclxuXHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgYXN5bmMgZ2V0T25lUGFydG5lciAocmVxLHJlcykge1xyXG4gICAgICAgIC8vbmUgdnJhY2EgZ3Jlc2t1IGthZCBqZSBpZCBuZXBvc3RvamVjaVxyXG5cclxuICAgICAgICBsZXQgaWQgPSByZXEucGFyYW1zLmlkXHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicGFydG5lcnNcIikuZmluZE9uZSh7X2lkOiBPYmplY3RJRChpZCl9KVxyXG5cclxuICAgICAgICAgICAgcmVzdWx0LmlkID0gcmVzdWx0Ll9pZFxyXG4gICAgICAgICAgICBkZWxldGUgcmVzdWx0Ll9pZFxyXG5cclxuICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIGlmIChpZCA9PSBudWxsKSAgcmVzLmpzb24oe2Vycm9yOiAnaWQgaXMgdW5kZWZpbmVkJ30pXHJcblxyXG4gICAgICAgICAgICBlbHNlICByZXMuanNvbih7ZXJyb3I6IGUubWVzc2FnZX0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG59LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgY2hhbmdlUGFzc3dvcmQgKHJlcSxyZXMpIHtcclxuICAgICAgICBsZXQgZGF0YSA9IHJlcS5ib2R5XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy9kb2xhemkgaXogbWV0b2RlIGlzVmFsaWRVc2VyXHJcbiAgICAgICAgZGF0YS5lbWFpbCA9IHJlcS5qd3QuZW1haWxcclxuXHJcbiAgICAgICAgaWYgKGRhdGEubmV3UGFzc3dvcmQgJiYgZGF0YS5vbGRQYXNzd29yZCl7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBhdXRoLmNoYW5nZVVzZXJQYXNzd29yZChkYXRhKVxyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoMjAxKS5zZW5kKHtzdGF0dXM6ICdTdWNjZXNzJ30pO1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdTZXJ2ZXIgZXJyb3InIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7ZXJyb3IgOiBcIkludmFsaWQgaW5wdXQgZGF0YVwifSlcclxuICAgICAgICB9XHJcbn0sXHJcblxyXG5cclxuICAgIGFzeW5jIGxvZ2luKHJlcSxyZXMpIHtcclxuICAgICAgICBsZXQgdXNlciA9IHJlcS5ib2R5XHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGF1dGguYXV0aGVudGljYXRlVXNlcih1c2VyLmVtYWlsLCB1c2VyLnBhc3N3b3JkKVxyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7ZXJyb3I6IGUubWVzc2FnZX0pXHJcbiAgICAgICAgfVxyXG59LFxyXG5cclxuXHJcbiAgICBhc3luYyByZWdpc3RyYXRpb24gKHJlcSwgcmVzKSB7IFxyXG4gICAgICAgIGxldCBuZXdVc2VyID0gcmVxLmJvZHk7XHJcblxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGxldCBwYXJ0bmVyID0gYXdhaXQgYXV0aC5yZWdpc3RlcihuZXdVc2VyKTtcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCBcclxuXHJcbiAgICAgICAgICAgIC8vZG9kYXZhbmplIGtvcmlzbmlrYSBhdXRvbWF0c2tpIHUgcGFydG5lcmUgxI1pbSBzZSByZWdpc3RyaXJhXHJcbiAgICAgICAgICAgIGlmIChuZXdVc2VyLmFjY291bnRfdHlwZSA9PT0gKCdwb3Nsb2RhdmFjJyB8fCAnUG9zbG9kYXZhYycpKSAgICByZXN1bHQgPSBhd2FpdCBtZXRob2RzLmFkZFBhcnRuZXIocGFydG5lcilcclxuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxyXG4gICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOiBgdXNlciB3aXRoIGlkICR7cmVzdWx0fSBhZGRlZGB9KVxyXG5cclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIGVycm9yOiBlLm1lc3NhZ2UsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxufSxcclxuXHJcblxyXG4gICAgYXN5bmMgc3VibWl0Q2hvc2VuUHJvamVjdHMgKHJlcSwgcmVzKSAge1xyXG4gICAgICAgIGxldCBkYXRhID0gcmVxLmJvZHlcclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuXHJcbiAgICAgICAgLy9vdm8gYmkgaXNsbyBzIC5tYXA/XHJcblxyXG4gICAgICAgIC8vIHtmaXJzdF9wcmlvcml0eTogW2lkMSwgaWQyLCBpZDJdLCBzZWNvbmRfcHJpb3JpdHk6Wy4uLl0sIHRoaXJkX3ByaW9yaXR5OlsuLi5dfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCByZXN1bHRcclxuXHJcbiAgICAgICAgbGV0IHNlbGVjdGVkQnkgPSB7XHJcbiAgICAgICAgICAgICAgICBmaXJzdF9wcmlvcml0eSA6IFtdLFxyXG4gICAgICAgICAgICAgICAgc2Vjb25kX3ByaW9yaXR5IDogW10sXHJcbiAgICAgICAgICAgICAgICB0aGlyZF9wcmlvcml0eSAgOiBbXVxyXG4gICAgICAgIH1cclxuICAgICAgICAvL2Rlc3RydWtjaWphIHN0cnVrdHVyZVxyXG4gICAgICAgIGxldCBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMoc2VsZWN0ZWRCeSk7XHJcblxyXG4gICAgICAgIGZvcihsZXQgW2luZGV4LCBba2V5LCB2YWx1ZV1dIG9mIGVudHJpZXMuZW50cmllcygpKXtcclxuXHJcbiAgICAgICAgICAgIGxldCBwcm9qZWN0SUQgPSBkYXRhLnNlbGVjdGlvbltpbmRleF1cclxuICAgICAgIFxyXG4gICAgICAgICAgICAvKiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zMDk2OTM4Mi9tb25nb2RiLW9iamVjdC1rZXktd2l0aC1lczYtdGVtcGxhdGUtc3RyaW5nICBkYSBiaSBiaWxvIG1vZ3VjZSBkaW5hbWlja2kgdXBkZWp0YXRpKi9cclxuICAgICAgICAgICAgLy8gdmFyIGF0dHJpYnV0ZU5hbWVcclxuICAgICAgICAgICAgLy8gbGV0IHF1ZXJ5ID0geyBcIl9pZFwiOiBwcm9qZWN0SUQgfVxyXG4gICAgICAgICAgICAvLyBsZXQgdXBkYXRlID0geyBcIiRhZGRUb1NldFwiOiB7fSB9XHJcbiAgICAgICAgICAgIC8vIHVwZGF0ZVtcIiRhZGRUb1NldFwiXVthdHRyaWJ1dGVOYW1lXSA9IGRhdGEudXNlclxyXG5cclxuICAgICAgICAgICAgLy90cmlrIHphIHByZXZhcml0aSBtb25nbyBrb21wYWpsZXJcclxuICAgICAgICAgICAga2V5ID0gJ3NlbGVjdGVkX2J5LicgKyBrZXlcclxuXHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3Byb2plY3RzJykudXBkYXRlT25lKCB7IF9pZDogT2JqZWN0SUQocHJvamVjdElEKSB9LHsgJGFkZFRvU2V0OiB7IFtrZXldIDogZGF0YS51c2VyIH19KVxyXG4gICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG59LFxyXG5cclxuXHJcbiAgICBhc3luYyBjaGFuZ2VQcm9qZWN0SW5mbyAocmVxLCByZXMpICB7XHJcblxyXG4gICAgICAgIGxldCBwcm9qZWN0RGF0YSA9IHJlcS5ib2R5IFxyXG4gICAgICAgIGRlbGV0ZSBwcm9qZWN0RGF0YS5pZDtcclxuICAgICAgICBsZXQgcHJvamVjdCBcclxuXHJcblxyXG4gICAgICAgIC8vYWtvIG5lbWEgcG9kYXRha2EgdSBib2R5LCB6bmHEjWkgZGEgc2UgdHJhxb5pIGRlbGV0ZSBwYSBpbmljaWphbGl6aXJhbW8gcHJhemFuIG9iamVrdCB1IGtvamkgc3RhdmxqYW1vIGplZGlubyBwb2RhdGtlIHBvdHJlYm5lIHphIGRlbGV0ZSwgaW5hxI1lIGlkZSB1cGRhdGVcclxuICAgICAgICBpZiAocHJvamVjdERhdGEpIHByb2plY3QgPSBhd2FpdCBtZXRob2RzLm1hcEF0dHJpYnV0ZXMocHJvamVjdERhdGEpXHJcbiAgICAgICAgZWxzZSAgICAgICAgIHByb2plY3QgPSB7fVxyXG5cclxuICAgICAgICAvLyBpZiAoIXByb2plY3QpIHByb2plY3QgPSB7fSAgICAgICAtLXZhcmlqYW50YSBiZXogbWFwaXJhbmphIGFrbyBzdSBuYXppdmkgYXRyaWJ1dGEgaXN0aSBwYSBuZSB0cmViYSBtYXBpcmF0aVxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBwcm9qZWN0LmlkID0gcmVxLnBhcmFtcy5pZDtcclxuICAgICAgICBwcm9qZWN0LnVwZGF0ZURvYyA9IHByb2plY3REYXRhLnVwZGF0ZURvY1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyhwcm9qZWN0LCAncHJvamVjdHMnKVxyXG4gICAgICAgIFxyXG4gICAgICAgIHJlcy5zZW5kKHJlc3BvbnNlKVxyXG59LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgY2hhbmdlUGFydG5lckluZm8gKHJlcSwgcmVzKSAge1xyXG4gICAgICAgIGxldCBwYXJ0bmVySW5mbyA9IHJlcS5ib2R5XHJcbiAgICAgICAgZGVsZXRlIHBhcnRuZXJJbmZvLl9pZDtcclxuICAgICAgICBwYXJ0bmVySW5mby5pZCA9IHJlcS5wYXJhbXMuaWQ7XHJcblxyXG4gICAgICAgIGxldCByZXNwb25zZSA9IGF3YWl0IG1ldGhvZHMuY2hhbmdlSW5mbyhwYXJ0bmVySW5mbywgJ3BhcnRuZXJzJylcclxuXHJcbiAgICAgICAgcmVzLnNlbmQocmVzcG9uc2UpXHJcbn0sXHJcblxyXG4gICAgYXN5bmMgZ2V0U3R1ZGVudHMgKHJlcSwgcmVzKSAge1xyXG4gICAgICAgICAgICBcclxuICAgICAgICBsZXQgcXVlcnkgPSByZXEucXVlcnlcclxuICAgICAgICBsZXQgYXRyaWJ1dGkgPSBbXCJuYW1lXCIsIFwic3VybmFtZVwiLCBcImptYmFnXCIsIFwieWVhclwiLCBcInRlY2hub2xvZ3lcIiwgXCJlbWFpbFwiLCBcImFjY291bnRfdHlwZVwiXSBcclxuXHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMuc2VhcmNoKHF1ZXJ5LCBhdHJpYnV0aSwgJ3VzZXJzJylcclxuICAgICAgICBcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KVxyXG5cclxuICAgICAgICByZXMuanNvbihyZXN1bHQpXHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBhc3luYyBnZXRQcm9qZWN0cyAocmVxLCByZXMpICB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHF1ZXJ5ID0gcmVxLnF1ZXJ5XHJcbiAgICAgICAgbGV0IGF0cmlidXRpID0gW1wiY29tcGFueVwiLCBcInRlY2hub2xvZ2llc1wiLCBcImxvY2F0aW9uXCIsIFwicHJvamVjdF9kZXNjcmlwdGlvblwiXSBcclxuXHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMuc2VhcmNoKHF1ZXJ5LCBhdHJpYnV0aSwgJ3Byb2plY3RzJylcclxuXHJcbiAgICAgICAgcmVzLmpzb24ocmVzdWx0KVxyXG4gICAgfSxcclxuXHJcblxyXG5cclxuICAgIGFzeW5jIGdldFBhcnRuZXJzIChyZXEsIHJlcykge1xyXG5cclxuICAgICAgICBsZXQgcXVlcnkgPSByZXEucXVlcnlcclxuICAgICAgICBsZXQgYXRyaWJ1dGkgPSBbXCJjb21wYW55XCIsIFwiYWJvdXRfdXNcIl0gXHJcblxyXG4gICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBtZXRob2RzLnNlYXJjaChxdWVyeSwgYXRyaWJ1dGksICdwYXJ0bmVycycpXHJcblxyXG4gICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxufSxcclxuXHJcblxyXG4gICAgYXN5bmMgYWRkUHJvamVjdCAocmVxLCByZXMpICB7XHJcblxyXG4gICAgICAgIGxldCBwcm9qZWN0RGF0YSA9IHJlcS5ib2R5XHJcbiBcclxuICAgICAgICAvLyBwdcWhdGVubyBvdmFrbyB1IHNsdcSNYWp1IGRhIHNlIGltZW5hIGF0cmlidXRhIHJhemxpa3VqdSBwYSBqZSBsYWvFoWUgcHJvbWlqZW5pdGksIGFsaSB6YSBzYWRhIG5lIHRyZWJhXHJcbiAgICAgICAgbGV0IHByb2plY3QgPSBhd2FpdCBtZXRob2RzLm1hcEF0dHJpYnV0ZXMocHJvamVjdERhdGEpXHJcbiAgICAgICAgXHJcbiAgICAgICAgLy9zbGlrYSBqZSBoYXJkY29kYW5hIGplciBuZW1hIGJhcyBzbWlzbGEgaW1hdGkgY3VzdG9tIHNsaWt1IHByb2pla3RhXHJcbiAgICAgICAgcHJvamVjdC5pbWdfdXJsID0gXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTUwNDYxMDkyNjA3OC1hMTYxMWZlYmNhZDM/aXhsaWI9cmItMS4yLjEmaXhpZD1leUpoY0hCZmFXUWlPakV5TURkOSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTgwMCZxPTgwXCJcclxuICAgICAgICBwcm9qZWN0LnVzZXJJRCA9IHByb2plY3REYXRhLnVzZXJJRFxyXG4gICAgICAgIHByb2plY3Qudmlld3MgPSAwXHJcbiAgICAgICAgXHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IG1ldGhvZHMucHVzaERhdGEocHJvamVjdCwgJ3Byb2plY3RzJylcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKGBwcm9qZWN0IHdpdGggaWQgICR7cmVzdWx0fSBhZGRlZC5gKVxyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUubWVzc2FnZX0pO1xyXG4gICAgICAgIH0gICBcclxuICAgIH0sXHJcblxyXG5cclxuXHJcbiAgICBhc3luYyBjcmVhdGVQYXJ0bmVyIChyZXEsIHJlcykgIHtcclxuICAgICAgICBjb25zb2xlLmxvZygndHUgc2FtbScpXHJcbiAgICAgICAgbGV0IHBhcnRuZXJEYXRhID0gcmVxLmJvZHlcclxuICAgICAgICBcclxuICAgICAgICAvLyBha28gxIdlIHRyZWJhdGkga2FkIHN0amVwYW4gaW1wbGVtZW50aXJhXHJcbiAgICAgICAgLy9sZXQgcHJvamVjdCA9IGF3YWl0IG1ldGhvZHMubWFwQXR0cmlidXRlcyhwcm9qZWN0RGF0YSlcclxuICAgICAgICBcclxuICAgICAgICAvL2RvayBzdGplcGFuIG5lIGltcGxlbWVudGlyYSBjZSBiaXRpIG92YWtvIGhhcmRjb2Rhbm9cclxuICAgICAgICBwYXJ0bmVyRGF0YS5pbWdfdXJsID0gXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTUwNDYxMDkyNjA3OC1hMTYxMWZlYmNhZDM/aXhsaWI9cmItMS4yLjEmaXhpZD1leUpoY0hCZmFXUWlPakV5TURkOSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTgwMCZxPTgwXCJcclxuICAgICAgICBcclxuICAgICAgICAvL3phIHJhc3Bvem5hdmFuamUga29qaSBwYXJ0bmVyaSBzdSBzZSBzYW1pIGtyZWlyYWxpLCBhIGtvamkgbmVcclxuICAgICAgICBwYXJ0bmVyRGF0YS5jcmVhdGVkX2J5X2FkbWluID0gdHJ1ZVxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBsZXQgcGFydG5lcklEID0gYXdhaXQgbWV0aG9kcy5wdXNoRGF0YShwYXJ0bmVyRGF0YSwgJ3BhcnRuZXJzJylcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICByZXMuc2VuZChgcGFydG5lciB3aXRoIGlkICAke3BhcnRuZXJJRH0gYWRkZWQuYClcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlLm1lc3NhZ2V9KTtcclxuICAgICAgICB9ICAgXHJcbiAgICB9LFxyXG4gICAgXHJcblxyXG5cclxuICAgIGFzeW5jIGhvbWUgKHJlcSwgcmVzKSAge1xyXG5cclxuICAgICAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KClcclxuICAgICAgICBsZXQgbnVtYmVyT2ZEb2NzID0ge31cclxuXHJcbiAgICAgICAgbnVtYmVyT2ZEb2NzLnByb2plY3RzQ291bnRlciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJwcm9qZWN0c1wiKS5jb3VudERvY3VtZW50cygpO1xyXG4gICAgICAgIG51bWJlck9mRG9jcy5wYXJ0bmVyc0NvdW50ZXIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwicGFydG5lcnNcIikuY291bnREb2N1bWVudHMoKTtcclxuICAgICAgICBudW1iZXJPZkRvY3Muc3R1ZGVudHNDb3VudGVyID0gYXdhaXQgZGIuY29sbGVjdGlvbihcInVzZXJzXCIpLmNvdW50RG9jdW1lbnRzKHsgYWNjb3VudF90eXBlIDogJ1N0dWRlbnQnfSk7XHJcblxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICByZXMuanNvbihudW1iZXJPZkRvY3MpXHJcbiAgICB9XHJcblxyXG5cclxufSAiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "getJournal",
        "req",
        "res",
        "journalID",
        "params",
        "id",
        "db",
        "collection",
        "findOne",
        "_id",
        "journal",
        "json",
        "console",
        "log",
        "error",
        "message",
        "changeUserInfo",
        "userInfo",
        "body",
        "methods",
        "changeInfo",
        "response",
        "send",
        "checkIfPartner",
        "userID",
        "data",
        "status",
        "getTemplate",
        "result",
        "template",
        "uploadTemplate",
        "content",
        "updateDoc",
        "changeInstructions",
        "instructions",
        "getInstructions",
        "getApprovedProject",
        "applicationForm",
        "formData",
        "application",
        "form",
        "find",
        "$exists",
        "appExists",
        "Error",
        "submitJournal",
        "user_id",
        "upload_date",
        "Date",
        "now",
        "insertOne",
        "user",
        "insertedId",
        "getOneProject",
        "getPartnerProjects",
        "partnerID",
        "cursor",
        "toArray",
        "results",
        "addView",
        "collectionName",
        "getOnePartner",
        "changePassword",
        "email",
        "jwt",
        "newPassword",
        "oldPassword",
        "auth",
        "changeUserPassword",
        "login",
        "authenticateUser",
        "password",
        "registration",
        "newUser",
        "register",
        "partner",
        "account_type",
        "addPartner",
        "submitChosenProjects",
        "selectedBy",
        "first_priority",
        "second_priority",
        "third_priority",
        "entries",
        "Object",
        "index",
        "key",
        "value",
        "projectID",
        "selection",
        "updateOne",
        "$addToSet",
        "changeProjectInfo",
        "projectData",
        "mapAttributes",
        "project",
        "changePartnerInfo",
        "partnerInfo",
        "getStudents",
        "query",
        "atributi",
        "search",
        "getProjects",
        "getPartners",
        "addProject",
        "img_url",
        "views",
        "pushData",
        "createPartner",
        "partnerData",
        "created_by_admin",
        "home",
        "numberOfDocs",
        "countDocuments",
        "projectsCounter",
        "partnersCounter",
        "studentsCounter"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db.js'\r\nimport auth from './auth.js'\r\nimport { ObjectID } from 'mongodb'\r\nimport methods from './methods.js'\r\n\r\n\r\nexport default {\r\n\r\n\r\n    //slicna kao neke funkcije, spojiti?\r\n    async getJournal (req,res) {\r\n        let journalID = req.params.id\r\n\r\n        let db = await connect()\r\n       \r\n        try{\r\n            let journal = await db.collection(\"journals\").findOne({_id: ObjectID(journalID)})\r\n            res.json(journal)\r\n        }\r\n\r\n        catch(e){\r\n            console.log(e)\r\n            res.json({error: e.message})\r\n        }\r\n    },\r\n\r\n\r\n//     //identicna kao getOnePartner, spojiti?\r\n//     async getOneStudent (req,res) {\r\n//         //ne vraca gresku kad je id nepostojeci\r\n\r\n//         let id = req.params.id\r\n//         //let id = req.body.id\r\n\r\n//         let db = await connect()\r\n\r\n//         try{\r\n//             let result = await db.collection(\"users\").findOne({_id: ObjectID(id)})\r\n\r\n//             result.id = result._id\r\n//             delete result._id, \r\n//             delete result.password\r\n\r\n//             res.json(result)\r\n//         }\r\n\r\n//         catch(e){\r\n//             if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n//             else  res.json({error: e.message})\r\n//         }\r\n        \r\n// },\r\n\r\n    // id usera svugdje traziti preko req.jwt!!?\r\n    async changeUserInfo (req, res)  {\r\n\r\n        let userInfo = req.body\r\n\r\n        let response = await methods.changeInfo(userInfo, 'users')\r\n\r\n        res.send(response)\r\n    },\r\n\r\n    //skoro identicna kao getonePartner skoro, spojiti u jednu\r\n    async checkIfPartner(req, res) {\r\n            let id = req.body._id\r\n\r\n            let db = await connect()\r\n            const data = await db.collection(\"partners\").findOne({userID : ObjectID(id)});\r\n\r\n            if(!data)  res.status(401).json({ error: 'user is not a partner'})\r\n\r\n            res.json (data);\r\n        \r\n    },\r\n\r\n    async getTemplate(req, res) {\r\n        let db = await connect()\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n\r\n        res.json(result.template)\r\n\r\n    },\r\n\r\n    async uploadTemplate(req, res) {\r\n        //poboljsati\r\n\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n\r\n        let data = {\r\n            template : req.body,\r\n            id : content._id,\r\n            updateDoc : 'true'\r\n        }\r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing template.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n    async changeInstructions(req, res) {\r\n        //poboljsati\r\n        let db = await connect();\r\n        let content = await db.collection('content').findOne();\r\n\r\n        let data = {\r\n            instructions : req.body,\r\n            id : content._id,\r\n            updateDoc : 'true'\r\n        }\r\n        \r\n        \r\n        try{\r\n            \r\n            let result = await methods.changeInfo(data, 'content')\r\n            \r\n            res.send(`${result} at changing instructions.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n\r\n    },\r\n\r\n\r\n    async getInstructions(req, res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        let result = await db.collection(\"content\").findOne()\r\n\r\n        result.id = result._id\r\n        delete result._id\r\n\r\n        res.json(result.instructions)\r\n    },\r\n\r\n    async getApprovedProject(req, res) {\r\n        //testna za sad\r\n        res.json({message: 'here is your approved project'})\r\n    },\r\n\r\n    async applicationForm (req, res) {\r\n\r\n        let formData = {\r\n            id : req.body.userID,\r\n            application : req.body.form,\r\n            updateDoc : 'true'\r\n        }\r\n        \r\n\r\n        let db = await connect()\r\n\r\n        let appExists = await db.collection('users').find( { _id: ObjectID(formData.id) , application: { $exists: true} } )\r\n\r\n        try{\r\n            if (appExists == true) throw new Error(\"Error accured during inserting\")\r\n            \r\n            let result = await methods.changeInfo(formData, 'users')\r\n            \r\n            res.send(`${result} at inserting application.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }  \r\n    \r\n    },\r\n\r\n\r\n    //refaktorirati\r\n    async submitJournal (req,res) {\r\n        let data = {\r\n            userID : req.body.user_id,\r\n            journal : req.body.journal,\r\n            upload_date :  Date.now() // Date(Date.now())\r\n        }\r\n\r\n        let db = await connect()\r\n        let journal\r\n\r\n        try{\r\n            /* ako želimo da korisnik ne može više puta uploadati dnevnik */\r\n            //let checkUser = await db.collection('users').findOne({_id : ObjectID(data.userID)})\r\n            \r\n            //if (checkUser.journalID != false) throw new Error(\"Error accured during inserting\")\r\n\r\n            journal = await db.collection('journals').insertOne(data)\r\n            \r\n            try {\r\n                let user = {\r\n                    id : data.userID,\r\n                    journalID : journal.insertedId,\r\n                    updateDoc : 'true'\r\n                }\r\n\r\n                await methods.changeInfo(user, 'users')\r\n\r\n                res.json(true)\r\n                //res.json({message: 'upload successful'})\r\n            }\r\n\r\n            catch(e){\r\n                res.send('Error accured during connecting journal ID with user')\r\n                return false;\r\n            }\r\n\r\n        }\r\n        \r\n        catch(e){\r\n            res.json(false)\r\n            //res.json({error:e.message })\r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n    async getOneProject (req,res) {\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n\r\n        try{\r\n            let result = await db.collection(\"projects\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async getPartnerProjects (req,res) {\r\n\r\n        let partnerID = req.params.id\r\n        let db = await connect()\r\n\r\n        //nađi projekte koje pripadaju određenom poslodavcu\r\n        /*\r\n        let find_IDs= await db.collection(\"partners\").find({_id: ObjectID(id)})\r\n        let result =  await find_IDs.toArray()\r\n\r\n        let filtered_IDs = result[0].projects\r\n\r\n        let cursor2 = await db.collection(\"projects\").find({_id: {$in: filtered_IDs}})\r\n        let finalResult =  await cursor2.toArray()\r\n        */\r\n        let cursor= await db.collection(\"projects\").find({partnerID: ObjectID(partnerID)})\r\n\r\n        let results =  await cursor.toArray()\r\n        \r\n        res.send(results)\r\n\r\n},\r\n\r\n    async addView(req, res){\r\n        let data = req.body\r\n        data.updateDoc = 'true'\r\n        let collectionName = data.collectionName\r\n        delete data.collectionName\r\n        \r\n        let result = await methods.changeInfo(data, collectionName)\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getOnePartner (req,res) {\r\n        //ne vraca gresku kad je id nepostojeci\r\n\r\n        let id = req.params.id\r\n\r\n        let db = await connect()\r\n\r\n        try{\r\n            let result = await db.collection(\"partners\").findOne({_id: ObjectID(id)})\r\n\r\n            result.id = result._id\r\n            delete result._id\r\n\r\n            res.json(result)\r\n        }\r\n\r\n        catch(e){\r\n            if (id == null)  res.json({error: 'id is undefined'})\r\n\r\n            else  res.json({error: e.message})\r\n        }\r\n        \r\n},\r\n\r\n\r\n\r\n    async changePassword (req,res) {\r\n        let data = req.body\r\n        \r\n        //dolazi iz metode isValidUser\r\n        data.email = req.jwt.email\r\n\r\n        if (data.newPassword && data.oldPassword){\r\n            let result = await auth.changeUserPassword(data)\r\n            \r\n\r\n            if (result) {\r\n                res.status(201).send({status: 'Success'});\r\n            } \r\n            else {\r\n                res.status(500).json({ error: 'Server error' });\r\n            }\r\n        }\r\n\r\n        else{\r\n            res.status(400).json({error : \"Invalid input data\"})\r\n        }\r\n},\r\n\r\n\r\n    async login(req,res) {\r\n        let user = req.body\r\n\r\n        try{\r\n            let result = await auth.authenticateUser(user.email, user.password)\r\n            res.json(result)\r\n        }\r\n        catch(e){\r\n            res.status(401).json({error: e.message})\r\n        }\r\n},\r\n\r\n\r\n    async registration (req, res) { \r\n        let newUser = req.body;\r\n\r\n        try {\r\n            let partner = await auth.register(newUser);\r\n            let result \r\n\r\n            //dodavanje korisnika automatski u partnere čim se registrira\r\n            if (newUser.account_type === ('poslodavac' || 'Poslodavac'))    result = await methods.addPartner(partner)\r\n            console.log(result)\r\n            res.json({status: `user with id ${result} added`})\r\n\r\n        } catch (e) {\r\n            res.status(500).json({\r\n                error: e.message,\r\n            });\r\n        }\r\n},\r\n\r\n\r\n    async submitChosenProjects (req, res)  {\r\n        let data = req.body\r\n        let db = await connect()\r\n\r\n        //ovo bi islo s .map?\r\n\r\n        // {first_priority: [id1, id2, id2], second_priority:[...], third_priority:[...]}\r\n        \r\n        let result\r\n\r\n        let selectedBy = {\r\n                first_priority : [],\r\n                second_priority : [],\r\n                third_priority  : []\r\n        }\r\n        //destrukcija strukture\r\n        let entries = Object.entries(selectedBy);\r\n\r\n        for(let [index, [key, value]] of entries.entries()){\r\n\r\n            let projectID = data.selection[index]\r\n       \r\n            /* https://stackoverflow.com/questions/30969382/mongodb-object-key-with-es6-template-string  da bi bilo moguce dinamicki updejtati*/\r\n            // var attributeName\r\n            // let query = { \"_id\": projectID }\r\n            // let update = { \"$addToSet\": {} }\r\n            // update[\"$addToSet\"][attributeName] = data.user\r\n\r\n            //trik za prevariti mongo kompajler\r\n            key = 'selected_by.' + key\r\n\r\n            result = await db.collection('projects').updateOne( { _id: ObjectID(projectID) },{ $addToSet: { [key] : data.user }})\r\n     \r\n        }\r\n                                                                                       \r\n        \r\n        res.json(result)\r\n},\r\n\r\n\r\n    async changeProjectInfo (req, res)  {\r\n\r\n        let projectData = req.body \r\n        delete projectData.id;\r\n        let project \r\n\r\n\r\n        //ako nema podataka u body, znači da se traži delete pa inicijaliziramo prazan objekt u koji stavljamo jedino podatke potrebne za delete, inače ide update\r\n        if (projectData) project = await methods.mapAttributes(projectData)\r\n        else         project = {}\r\n\r\n        // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\r\n        \r\n\r\n        project.id = req.params.id;\r\n        project.updateDoc = projectData.updateDoc\r\n        \r\n        let response = await methods.changeInfo(project, 'projects')\r\n        \r\n        res.send(response)\r\n},\r\n\r\n\r\n\r\n    async changePartnerInfo (req, res)  {\r\n        let partnerInfo = req.body\r\n        delete partnerInfo._id;\r\n        partnerInfo.id = req.params.id;\r\n\r\n        let response = await methods.changeInfo(partnerInfo, 'partners')\r\n\r\n        res.send(response)\r\n},\r\n\r\n    async getStudents (req, res)  {\r\n            \r\n        let query = req.query\r\n        let atributi = [\"name\", \"surname\", \"jmbag\", \"year\", \"technology\", \"email\", \"account_type\"] \r\n\r\n        let result = await methods.search(query, atributi, 'users')\r\n        \r\n        \r\n\r\n        console.log(result)\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n    async getProjects (req, res)  {\r\n        \r\n        let query = req.query\r\n        let atributi = [\"company\", \"technologies\", \"location\", \"project_description\"] \r\n\r\n        let result = await methods.search(query, atributi, 'projects')\r\n\r\n        res.json(result)\r\n    },\r\n\r\n\r\n\r\n    async getPartners (req, res) {\r\n\r\n        let query = req.query\r\n        let atributi = [\"company\", \"about_us\"] \r\n\r\n        let result = await methods.search(query, atributi, 'partners')\r\n\r\n        res.json(result)\r\n},\r\n\r\n\r\n    async addProject (req, res)  {\r\n\r\n        let projectData = req.body\r\n \r\n        // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\r\n        let project = await methods.mapAttributes(projectData)\r\n        \r\n        //slika je hardcodana jer nema bas smisla imati custom sliku projekta\r\n        project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        project.userID = projectData.userID\r\n        project.views = 0\r\n        \r\n        try{\r\n            \r\n            let result = await methods.pushData(project, 'projects')\r\n            \r\n            res.send(`project with id  ${result} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n\r\n    async createPartner (req, res)  {\r\n        console.log('tu samm')\r\n        let partnerData = req.body\r\n        \r\n        // ako će trebati kad stjepan implementira\r\n        //let project = await methods.mapAttributes(projectData)\r\n        \r\n        //dok stjepan ne implementira ce biti ovako hardcodano\r\n        partnerData.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n        \r\n        //za raspoznavanje koji partneri su se sami kreirali, a koji ne\r\n        partnerData.created_by_admin = true\r\n        \r\n\r\n        try{\r\n            \r\n            let partnerID = await methods.pushData(partnerData, 'partners')\r\n            \r\n            \r\n            res.send(`partner with id  ${partnerID} added.`)\r\n\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n    \r\n\r\n\r\n    async home (req, res)  {\r\n\r\n        let db = await connect()\r\n        let numberOfDocs = {}\r\n\r\n        numberOfDocs.projectsCounter = await db.collection(\"projects\").countDocuments();\r\n        numberOfDocs.partnersCounter = await db.collection(\"partners\").countDocuments();\r\n        numberOfDocs.studentsCounter = await db.collection(\"users\").countDocuments({ account_type : 'Student'});\r\n\r\n        \r\n\r\n        res.json(numberOfDocs)\r\n    }\r\n\r\n\r\n} "
      ]
    },
    "sourceType": "script",
    "mtime": 1598021661707
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//modul za pristup bazi\nvar connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'; //služi za pristup prema bazi na navedenom frameworku\n\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null; //nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\n// eksportamo Promise koji resolva na konekciju\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    // ako smo inicijalizirali bazu i klijent je još uvijek spojen\n    if (db && client.isConnected()) {\n      resolve(db);\n    } else {\n      client.connect(function (err) {\n        if (err) {\n          reject('Spajanje na bazu nije uspjelo:' + err);\n        } else {\n          console.log('Database connected successfully!');\n          db = client.db('moja_praksa');\n          resolve(db);\n        }\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtBQUdBLElBQUlBLGlCQUFpQixHQUFHLGdHQUF4QixDLENBR0E7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHLElBQUlDLG9CQUFNQyxXQUFWLENBQXNCSCxpQkFBdEIsRUFBd0M7QUFDakRJLEVBQUFBLGVBQWUsRUFBRSxJQURnQztBQUVqREMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGNkIsQ0FBeEMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFULEMsQ0FFQTtBQUNBO0FBRUE7O2VBQ2Usb0JBQU07QUFDakIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDO0FBQ0EsUUFBSUgsRUFBRSxJQUFJTCxNQUFNLENBQUNTLFdBQVAsRUFBVixFQUFnQztBQUM1QkYsTUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSCxLQUZELE1BRU87QUFDSEwsTUFBQUEsTUFBTSxDQUFDVSxPQUFQLENBQWUsVUFBQ0MsR0FBRCxFQUFTO0FBQ3BCLFlBQUlBLEdBQUosRUFBUztBQUNMSCxVQUFBQSxNQUFNLENBQUMsbUNBQW1DRyxHQUFwQyxDQUFOO0FBQ0gsU0FGRCxNQUVPO0FBQ0hDLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0FSLFVBQUFBLEVBQUUsR0FBR0wsTUFBTSxDQUFDSyxFQUFQLENBQVUsYUFBVixDQUFMO0FBQ0FFLFVBQUFBLE9BQU8sQ0FBQ0YsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0g7QUFDSixHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcbW9qYV9wcmFrc2FcXG1vamFfcHJha3NhX2JhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy9tb2R1bCB6YSBwcmlzdHVwIGJhemlcclxuaW1wb3J0IG1vbmdvIGZyb20gJ21vbmdvZGInXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSAnbW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBmby1jbHVzdGVyLmIxcjJnLm1vbmdvZGIubmV0L21vamFfcHJha3NhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSdcclxuXHJcblxyXG4vL3NsdcW+aSB6YSBwcmlzdHVwIHByZW1hIGJhemkgbmEgbmF2ZWRlbm9tIGZyYW1ld29ya3VcclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZyx7XHJcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGw7XHJcblxyXG4vL25ha29uIHNwYWphbmphIHZyYcSHYW1vIGRvYml2ZW51IGluc3RhbmN1IGJhemUgb3N0YWxpbSBtb2R1bGltYSBrb2ppIHRvIHRyZWJhanVcclxuLy9leHBvcnRhbW8gYXNpbmtyb251IGZ1bmtjaWp1IGtvamEgbmUgcHJpbWEgbmkgamVkYW4gcGFyYW1ldGFyXHJcblxyXG4vLyBla3Nwb3J0YW1vIFByb21pc2Uga29qaSByZXNvbHZhIG5hIGtvbmVrY2lqdVxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIC8vIGFrbyBzbW8gaW5pY2lqYWxpemlyYWxpIGJhenUgaSBrbGlqZW50IGplIGpvxaEgdXZpamVrIHNwb2plblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSkge1xyXG4gICAgICAgICAgICByZXNvbHZlKGRiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdTcGFqYW5qZSBuYSBiYXp1IG5pamUgdXNwamVsbzonICsgZXJyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoJ21vamFfcHJha3NhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAIA,iBAAiB,GAAG,gGAAxB,C,CAGA;;AACA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAwC;AACjDI,EAAAA,eAAe,EAAE,IADgC;AAEjDC,EAAAA,kBAAkB,EAAE;AAF6B,CAAxC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT,C,CAEA;AACA;AAEA;;eACe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAAgC;AAC5BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACU,OAAP,CAAe,UAACC,GAAD,EAAS;AACpB,YAAIA,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAAC,mCAAmCG,GAApC,CAAN;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAR,UAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,aAAV,CAAL;AACAE,UAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,OARD;AASH;AACJ,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//modul za pristup bazi\r\nimport mongo from 'mongodb'\r\n\r\nlet connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'\r\n\r\n\r\n//služi za pristup prema bazi na navedenom frameworku\r\nlet client = new mongo.MongoClient(connection_string,{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n})\r\n\r\nlet db = null;\r\n\r\n//nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\r\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\r\n\r\n// eksportamo Promise koji resolva na konekciju\r\nexport default () => {\r\n    return new Promise((resolve, reject) => {\r\n        // ako smo inicijalizirali bazu i klijent je još uvijek spojen\r\n        if (db && client.isConnected()) {\r\n            resolve(db);\r\n        } else {\r\n            client.connect((err) => {\r\n                if (err) {\r\n                    reject('Spajanje na bazu nije uspjelo:' + err);\r\n                } else {\r\n                    console.log('Database connected successfully!');\r\n                    db = client.db('moja_praksa');\r\n                    resolve(db);\r\n                }\r\n            });\r\n        }\r\n    });\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1594283075909
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          db.collection('users').createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  register: function register(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _i, _Object$entries, _Object$entries$_i, key, value, db, partner, user, insertResult;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _i = 0, _Object$entries = Object.entries(userData);\n\n            case 1:\n              if (!(_i < _Object$entries.length)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n\n              if (value) {\n                _context2.next = 6;\n                break;\n              }\n\n              res.json({\n                status: 'Missing data'\n              });\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _i++;\n              _context2.next = 1;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return (0, _db[\"default\"])();\n\n            case 11:\n              db = _context2.sent;\n              partner = {};\n              _context2.t0 = userData.email;\n              _context2.next = 16;\n              return _bcrypt[\"default\"].hash(userData.password, 8);\n\n            case 16:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = Date.now();\n              user = {\n                email: _context2.t0,\n                password: _context2.t1,\n                date_created: _context2.t2\n              };\n\n              if (userData.jmbag) {\n                user.account_type = 'Student', user.jmbag = userData.jmbag, user.name = userData.name, user.surname = userData.surname, user.technology = userData.technology;\n                user.year = userData.year;\n                user.journalID = false;\n              } else {\n                user.account_type = 'Poslodavac', partner.company = userData.name;\n                partner.technology = userData.technology, partner.adress = userData.adress, partner.about_us = userData.about_us, partner.website = userData.website, partner.date_created = Date.now();\n                partner.contact_email = userData.contact_email, partner.contact_number = userData.telephone_number;\n                partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80';\n              }\n\n              _context2.prev = 20;\n              _context2.next = 23;\n              return db.collection('users').insertOne(user);\n\n            case 23:\n              insertResult = _context2.sent;\n\n              if (!(insertResult && insertResult.insertedId)) {\n                _context2.next = 28;\n                break;\n              }\n\n              delete user.password;\n              partner.userID = (0, _mongodb.ObjectID)(insertResult.insertedId);\n              return _context2.abrupt(\"return\", partner);\n\n            case 28:\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t3 = _context2[\"catch\"](20);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 34;\n                break;\n              }\n\n              throw new Error(\"User already exists\");\n\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[20, 30]]);\n    }))();\n  },\n  authenticateUser: function authenticateUser(email, password) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"users\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              _context3.t0 = user && user.password;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(password, user.password);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 18;\n                break;\n              }\n\n              //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \n              //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\n              //naš token sadrži sve podatke o useru\n              //password nije potrebno spremati u token jer smo ga već provjerili\n              delete user.password;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              user.token = token;\n              return _context3.abrupt(\"return\", user);\n\n            case 18:\n              throw new Error('Cannot authenticate');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  isValidUser: function isValidUser(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var authorization, type, token;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              authorization = req.headers.authorization.split(' ');\n              type = authorization[0];\n              token = authorization[1];\n\n              if (!(type != 'Bearer')) {\n                _context4.next = 9;\n                break;\n              }\n\n              //console.log('type:' + type)\n              res.status(401).send();\n              return _context4.abrupt(\"return\", false);\n\n            case 9:\n              //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\n              //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\n              req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n              return _context4.abrupt(\"return\", next());\n\n            case 11:\n              _context4.next = 16;\n              break;\n\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 13]]);\n    }))();\n  },\n  isStudent: function isStudent(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context5.prev = 1;\n\n              if (!(accountType === 'Student')) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", next());\n\n            case 6:\n              //fali jos return false u else ako nece funkcionirati\n              res.status(401).send();\n\n            case 7:\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              return _context5.abrupt(\"return\", res.status(401).send());\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9]]);\n    }))();\n  },\n  isPartner: function isPartner(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var accountType;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              accountType = req.jwt.account_type;\n              _context6.prev = 1;\n\n              if (!(accountType === 'Poslodavac' || accountType === 'Admin')) {\n                _context6.next = 9;\n                break;\n              }\n\n              if (!(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE'))) {\n                _context6.next = 6;\n                break;\n              }\n\n              res.status(401).send();\n              return _context6.abrupt(\"return\", false);\n\n            case 6:\n              return _context6.abrupt(\"return\", next());\n\n            case 9:\n              res.status(401).send();\n\n            case 10:\n              return _context6.abrupt(\"return\", false);\n\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](1);\n              return _context6.abrupt(\"return\", res.status(401).send());\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 13]]);\n    }))();\n  },\n  changeUserPassword: function changeUserPassword(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n      var db, user, newPasswordTransformed, result;\n      return regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context7.sent;\n              _context7.next = 5;\n              return db.collection(\"users\").findOne({\n                email: userData.email\n              });\n\n            case 5:\n              user = _context7.sent;\n              _context7.t0 = user && user.password;\n\n              if (!_context7.t0) {\n                _context7.next = 11;\n                break;\n              }\n\n              _context7.next = 10;\n              return _bcrypt[\"default\"].compare(userData.oldPassword, user.password);\n\n            case 10:\n              _context7.t0 = _context7.sent;\n\n            case 11:\n              if (!_context7.t0) {\n                _context7.next = 19;\n                break;\n              }\n\n              _context7.next = 14;\n              return _bcrypt[\"default\"].hash(userData.newPassword, 8);\n\n            case 14:\n              newPasswordTransformed = _context7.sent;\n              _context7.next = 17;\n              return db.collection('users').updateOne({\n                _id: user._id\n              }, {\n                $set: {\n                  password: newPasswordTransformed\n                }\n              });\n\n            case 17:\n              result = _context7.sent;\n              return _context7.abrupt(\"return\", result.modifiedCount == 1);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZGIiLCJjb2xsZWN0aW9uIiwiY3JlYXRlSW5kZXgiLCJlbWFpbCIsInVuaXF1ZSIsInJlZ2lzdGVyIiwidXNlckRhdGEiLCJPYmplY3QiLCJlbnRyaWVzIiwia2V5IiwidmFsdWUiLCJyZXMiLCJqc29uIiwic3RhdHVzIiwicGFydG5lciIsImJjcnlwdCIsImhhc2giLCJwYXNzd29yZCIsIkRhdGUiLCJub3ciLCJ1c2VyIiwiZGF0ZV9jcmVhdGVkIiwiam1iYWciLCJhY2NvdW50X3R5cGUiLCJuYW1lIiwic3VybmFtZSIsInRlY2hub2xvZ3kiLCJ5ZWFyIiwiam91cm5hbElEIiwiY29tcGFueSIsImFkcmVzcyIsImFib3V0X3VzIiwid2Vic2l0ZSIsImNvbnRhY3RfZW1haWwiLCJjb250YWN0X251bWJlciIsInRlbGVwaG9uZV9udW1iZXIiLCJpbWdfdXJsIiwiaW5zZXJ0T25lIiwiaW5zZXJ0UmVzdWx0IiwiaW5zZXJ0ZWRJZCIsInVzZXJJRCIsImNvZGUiLCJFcnJvciIsImF1dGhlbnRpY2F0ZVVzZXIiLCJmaW5kT25lIiwiY29tcGFyZSIsInRva2VuIiwiand0Iiwic2lnbiIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiYWxnb3JpdGhtIiwiZXhwaXJlc0luIiwiaXNWYWxpZFVzZXIiLCJyZXEiLCJuZXh0IiwiYXV0aG9yaXphdGlvbiIsImhlYWRlcnMiLCJzcGxpdCIsInR5cGUiLCJzZW5kIiwidmVyaWZ5IiwiaXNTdHVkZW50IiwiYWNjb3VudFR5cGUiLCJpc1BhcnRuZXIiLCJwYXRoIiwibWV0aG9kIiwiY2hhbmdlVXNlclBhc3N3b3JkIiwib2xkUGFzc3dvcmQiLCJuZXdQYXNzd29yZCIsIm5ld1Bhc3N3b3JkVHJhbnNmb3JtZWQiLCJ1cGRhdGVPbmUiLCJfaWQiLCIkc2V0IiwicmVzdWx0IiwibW9kaWZpZWRDb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7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QjtBQUFBO0FBQUEscUJBU1B2RSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxPQUFkLEVBQXVCdUUsU0FBdkIsQ0FDZjtBQUFFQyxnQkFBQUEsR0FBRyxFQUFFckQsSUFBSSxDQUFDcUQ7QUFBWixlQURlLEVBRWY7QUFDSUMsZ0JBQUFBLElBQUksRUFBRTtBQUNGekQsa0JBQUFBLFFBQVEsRUFBRXNEO0FBRFI7QUFEVixlQUZlLENBVE87O0FBQUE7QUFTdEJJLGNBQUFBLE1BVHNCO0FBQUEsZ0RBaUJuQkEsTUFBTSxDQUFDQyxhQUFQLElBQXdCLENBakJMOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBbUJqQztBQTFMVSxDIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFxtb2phX3ByYWtzYVxcbW9qYV9wcmFrc2FfYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29ubmVjdCBmcm9tICcuL2RiJ1xyXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdCdcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXHJcbmltcG9ydCB7IE9iamVjdElEIH0gZnJvbSAnbW9uZ29kYidcclxuXHJcbihhc3luYyAoKSA9PiB7XHJcbiAgICBsZXQgZGIgPSBhd2FpdCBjb25uZWN0KCk7XHJcbiAgICBkYi5jb2xsZWN0aW9uKCd1c2VycycpLmNyZWF0ZUluZGV4KHsgZW1haWw6IDEgfSwgeyB1bmlxdWU6IHRydWUgfSk7XHJcbn0pKCk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgYXN5bmMgcmVnaXN0ZXIodXNlckRhdGEpe1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh1c2VyRGF0YSkpIHtcclxuICAgICAgICAgICAgaWYoIXZhbHVlKXtcclxuICAgICAgICAgICAgICByZXMuanNvbih7c3RhdHVzOiAnTWlzc2luZyBkYXRhJ30pXHJcbiAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKVxyXG5cclxuICAgICAgICBsZXQgcGFydG5lciA9IHt9XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHVzZXIgPSB7XHJcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyRGF0YS5lbWFpbCxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6IGF3YWl0IGJjcnlwdC5oYXNoKHVzZXJEYXRhLnBhc3N3b3JkLCA4KSxcclxuICAgICAgICAgICAgZGF0ZV9jcmVhdGVkOiBEYXRlLm5vdygpXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgaWYodXNlckRhdGEuam1iYWcpe1xyXG4gICAgICAgICAgICB1c2VyLmFjY291bnRfdHlwZSA9ICdTdHVkZW50JyxcclxuICAgICAgICAgICAgdXNlci5qbWJhZyA9IHVzZXJEYXRhLmptYmFnLFxyXG4gICAgICAgICAgICB1c2VyLm5hbWUgPSB1c2VyRGF0YS5uYW1lLFxyXG4gICAgICAgICAgICB1c2VyLnN1cm5hbWUgPSB1c2VyRGF0YS5zdXJuYW1lLFxyXG4gICAgICAgICAgICB1c2VyLnRlY2hub2xvZ3kgPSB1c2VyRGF0YS50ZWNobm9sb2d5XHJcbiAgICAgICAgICAgIHVzZXIueWVhcj0gdXNlckRhdGEueWVhclxyXG4gICAgICAgICAgICB1c2VyLmpvdXJuYWxJRCA9IGZhbHNlXHJcbiAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICB1c2VyLmFjY291bnRfdHlwZSA9ICdQb3Nsb2RhdmFjJyxcclxuICAgICAgICAgICAgcGFydG5lci5jb21wYW55ID0gdXNlckRhdGEubmFtZVxyXG4gICAgICAgICAgICBwYXJ0bmVyLnRlY2hub2xvZ3k9IHVzZXJEYXRhLnRlY2hub2xvZ3ksXHJcbiAgICAgICAgICAgIHBhcnRuZXIuYWRyZXNzID0gdXNlckRhdGEuYWRyZXNzLFxyXG4gICAgICAgICAgICBwYXJ0bmVyLmFib3V0X3VzID0gdXNlckRhdGEuYWJvdXRfdXMsXHJcbiAgICAgICAgICAgIHBhcnRuZXIud2Vic2l0ZSA9IHVzZXJEYXRhLndlYnNpdGUsXHJcbiAgICAgICAgICAgIHBhcnRuZXIuZGF0ZV9jcmVhdGVkID0gRGF0ZS5ub3coKVxyXG4gICAgICAgICAgICBwYXJ0bmVyLmNvbnRhY3RfZW1haWwgPSB1c2VyRGF0YS5jb250YWN0X2VtYWlsLFxyXG4gICAgICAgICAgICBwYXJ0bmVyLmNvbnRhY3RfbnVtYmVyID0gdXNlckRhdGEudGVsZXBob25lX251bWJlclxyXG4gICAgICAgICAgICBwYXJ0bmVyLmltZ191cmwgPSAnaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE0OTMxMTk1MDgwMjctMmI1ODRmMjM0ZDZjP2l4bGliPXJiLTEuMi4xJml4aWQ9ZXlKaGNIQmZhV1FpT2pFeU1EZDkmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz01MDAmcT04MCdcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgbGV0IGluc2VydFJlc3VsdCA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuaW5zZXJ0T25lKHVzZXIpO1xyXG4gICAgICBcclxuICAgICAgICAgICAgaWYoaW5zZXJ0UmVzdWx0ICYmIGluc2VydFJlc3VsdC5pbnNlcnRlZElkKXtcclxuICAgICAgICAgICAgICAgIGRlbGV0ZSB1c2VyLnBhc3N3b3JkXHJcbiAgICAgICAgICAgICAgICBwYXJ0bmVyLnVzZXJJRCA9IE9iamVjdElEKGluc2VydFJlc3VsdC5pbnNlcnRlZElkKVxyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJ0bmVyIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoKGUpe1xyXG4gICAgICAgICAgICBpZiAoZS5uYW1lID09XCJNb25nb0Vycm9yXCIgJiYgZS5jb2RlID09IDExMDAwKXtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVzZXIgYWxyZWFkeSBleGlzdHNcIilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gICBcclxuXHJcblxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgYXN5bmMgYXV0aGVudGljYXRlVXNlcihlbWFpbCxwYXNzd29yZCl7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcbiAgICAgICAgbGV0IHVzZXIgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKFwidXNlcnNcIikuZmluZE9uZSh7ZW1haWwgOiBlbWFpbH0pXHJcblxyXG4gICAgICAgIC8vIHByb3ZqZXJhdmEgZGEgbGkgamUgb3ZhaiBoZXNoIHUgYmF6aSBpenZlZGVuIGl6IGNpc3RvZyBwYXNzd29yZGFcclxuICAgICAgICBpZih1c2VyICYmIHVzZXIucGFzc3dvcmQgJiYgKGF3YWl0IGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCB1c2VyLnBhc3N3b3JkKSkpe1xyXG4gICAgICAgICAgICAvL8WhaWZyYSB6YSBwb3RwaXNpdmFuamUga29yaXNuaWthKGtyaXB0b2dyYWZza2kgcG90cGlzKSB2ZcW+ZW1vIGplIHV6IG5hxaEgYmFja2VuZCwgcyB0b20gxaFpZnJvbSBwb3RwaXN1amVtbyBcclxuICAgICAgICAgICAgLy90b2tlbmUgc3ZpaCBrb3Jpc25pa2EsIGthZCBuYW0ga29yaXNuaWsgdnJhxIdhIHRva2VuIHByb3ZqZXJhdmFtbyBkYSBsaSBqZSBvbiBwb3RwaXNhbiBzIG5hxaFvbSDFoWlmcm9tXHJcbiAgICAgICAgICAgIC8vbmHFoSB0b2tlbiBzYWRyxb5pIHN2ZSBwb2RhdGtlIG8gdXNlcnVcclxuICAgICAgICAgICAgLy9wYXNzd29yZCBuaWplIHBvdHJlYm5vIHNwcmVtYXRpIHUgdG9rZW4gamVyIHNtbyBnYSB2ZcSHIHByb3ZqZXJpbGlcclxuICAgICAgICAgICAgZGVsZXRlIHVzZXIucGFzc3dvcmRcclxuICAgICAgICAgICAgbGV0IHRva2VuID0gand0LnNpZ24odXNlciwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwge1xyXG4gICAgICAgICAgICAgICAgYWxnb3JpdGhtOiBcIkhTNTEyXCIsXHJcbiAgICAgICAgICAgICAgICBleHBpcmVzSW46IFwiMSB3ZWVrXCJcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHVzZXIudG9rZW4gPSB0b2tlblxyXG5cclxuICAgICAgICAgICAgcmV0dXJuIHVzZXIgXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgYXV0aGVudGljYXRlJylcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuXHJcbiAgICBhc3luYyBpc1ZhbGlkVXNlcihyZXEscmVzLCBuZXh0KXtcclxuICAgICAgICBcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGxldCBhdXRob3JpemF0aW9uID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zcGxpdCgnICcpXHJcbiAgICAgICAgICAgIGxldCB0eXBlID0gYXV0aG9yaXphdGlvblswXVxyXG4gICAgICAgICAgICBsZXQgdG9rZW4gPSBhdXRob3JpemF0aW9uWzFdXHJcbiAgICAgICAgICAgIFxyXG4gICAgXHJcbiAgICAgICAgICAgIGlmICh0eXBlICE9ICdCZWFyZXInKXtcclxuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ3R5cGU6JyArIHR5cGUpXHJcbiAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy9zcHJlbWF0aSB1IGp3dCBrbGp1YyBwb2RhdGtlIHUga29yaXNuaWt1IGRhIHNlIG1vemUgbmEgYmlsbyBrb2plbSBtamVzdHVcclxuICAgICAgICAgICAgICAgIC8va29yaXN0aXRpIHRpIHBvZGFjaSBvIGtvcmlzbmlrdSAtPiBkYSBzZSB6bmEga28gc2FsamUgdXBpdCBpdGRcclxuICBcclxuICAgICAgICAgICAgICAgIHJlcS5qd3QgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2goZSl7XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgaXNTdHVkZW50KHJlcSxyZXMsIG5leHQpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBhY2NvdW50VHlwZSA9IHJlcS5qd3QuYWNjb3VudF90eXBlXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmIChhY2NvdW50VHlwZSA9PT0gICdTdHVkZW50JyApICByZXR1cm4gbmV4dCgpIFxyXG4gICAgICAgICAgICAvL2ZhbGkgam9zIHJldHVybiBmYWxzZSB1IGVsc2UgYWtvIG5lY2UgZnVua2Npb25pcmF0aVxyXG4gICAgICAgICAgICBlbHNlICByZXMuc3RhdHVzKDQwMSkuc2VuZCgpXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuXHJcblxyXG4gICAgYXN5bmMgaXNQYXJ0bmVyKHJlcSxyZXMsIG5leHQpe1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCBhY2NvdW50VHlwZSA9IHJlcS5qd3QuYWNjb3VudF90eXBlXHJcblxyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgaWYgKGFjY291bnRUeXBlID09PSAgJ1Bvc2xvZGF2YWMnICAgfHwgICBhY2NvdW50VHlwZSA9PT0gJ0FkbWluJykgIHtcclxuICAgICAgICAgICAgICAgIC8vcG9zbG9kYXZhYyBuZW1hIHByaXN0dXAga3JlaXJhbmp1IGkgYnJpc2FuanUgcG9zbG9kYXZhY2Egb2Rub3NubyBwYXJ0bmVyYSBcclxuICAgICAgICAgICAgICAgIGlmKGFjY291bnRUeXBlID09PSAnUG9zbG9kYXZhYycgJiYgcmVxLnBhdGggPT09ICdwYXJ0bmVycycgJiYgKHJlcS5tZXRob2QgPT09ICdQT1NUJyB8fCByZXEubWV0aG9kID09PSAnREVMRVRFJykgKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dCgpIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKCl9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICBcclxuICAgICAgICBjYXRjaChlKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgXHJcblxyXG5cclxuICAgIGFzeW5jIGNoYW5nZVVzZXJQYXNzd29yZCh1c2VyRGF0YSl7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpXHJcbiBcclxuICAgICAgICBsZXQgdXNlciA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJ1c2Vyc1wiKS5maW5kT25lKHtlbWFpbCA6IHVzZXJEYXRhLmVtYWlsfSlcclxuICAgICAgICBcclxuXHJcbiAgICAgICAgaWYgKHVzZXIgJiYgdXNlci5wYXNzd29yZCAmJiAoYXdhaXQgYmNyeXB0LmNvbXBhcmUodXNlckRhdGEub2xkUGFzc3dvcmQsIHVzZXIucGFzc3dvcmQpKSl7XHJcbiAgICAgICAgICAgIGxldCBuZXdQYXNzd29yZFRyYW5zZm9ybWVkID0gYXdhaXQgYmNyeXB0Lmhhc2godXNlckRhdGEubmV3UGFzc3dvcmQsIDgpXHJcblxyXG4gICAgICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgZGIuY29sbGVjdGlvbigndXNlcnMnKS51cGRhdGVPbmUoXHJcbiAgICAgICAgICAgICAgICB7IF9pZDogdXNlci5faWQgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAkc2V0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBuZXdQYXNzd29yZFRyYW5zZm9ybWVkLFxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQubW9kaWZpZWRDb3VudCA9PSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "register",
        "userData",
        "Object",
        "entries",
        "key",
        "value",
        "res",
        "json",
        "status",
        "partner",
        "bcrypt",
        "hash",
        "password",
        "Date",
        "now",
        "user",
        "date_created",
        "jmbag",
        "account_type",
        "name",
        "surname",
        "technology",
        "year",
        "journalID",
        "company",
        "adress",
        "about_us",
        "website",
        "contact_email",
        "contact_number",
        "telephone_number",
        "img_url",
        "insertOne",
        "insertResult",
        "insertedId",
        "userID",
        "code",
        "Error",
        "authenticateUser",
        "findOne",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "isValidUser",
        "req",
        "next",
        "authorization",
        "headers",
        "split",
        "type",
        "send",
        "verify",
        "isStudent",
        "accountType",
        "isPartner",
        "path",
        "method",
        "changeUserPassword",
        "oldPassword",
        "newPassword",
        "newPasswordTransformed",
        "updateOne",
        "_id",
        "$set",
        "result",
        "modifiedCount"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db'\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n(async () => {\r\n    let db = await connect();\r\n    db.collection('users').createIndex({ email: 1 }, { unique: true });\r\n})();\r\n\r\n\r\nexport default {\r\n    async register(userData){\r\n\r\n        for (const [key, value] of Object.entries(userData)) {\r\n            if(!value){\r\n              res.json({status: 'Missing data'})\r\n              return\r\n            }\r\n        }\r\n\r\n        let db = await connect()\r\n\r\n        let partner = {}\r\n        \r\n        let user = {\r\n            email: userData.email,\r\n            password: await bcrypt.hash(userData.password, 8),\r\n            date_created: Date.now()\r\n        }\r\n\r\n\r\n        if(userData.jmbag){\r\n            user.account_type = 'Student',\r\n            user.jmbag = userData.jmbag,\r\n            user.name = userData.name,\r\n            user.surname = userData.surname,\r\n            user.technology = userData.technology\r\n            user.year= userData.year\r\n            user.journalID = false\r\n        } else{\r\n            user.account_type = 'Poslodavac',\r\n            partner.company = userData.name\r\n            partner.technology= userData.technology,\r\n            partner.adress = userData.adress,\r\n            partner.about_us = userData.about_us,\r\n            partner.website = userData.website,\r\n            partner.date_created = Date.now()\r\n            partner.contact_email = userData.contact_email,\r\n            partner.contact_number = userData.telephone_number\r\n            partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80'\r\n        }\r\n        \r\n\r\n        try{\r\n            let insertResult = await db.collection('users').insertOne(user);\r\n      \r\n            if(insertResult && insertResult.insertedId){\r\n                delete user.password\r\n                partner.userID = ObjectID(insertResult.insertedId)\r\n\r\n                return partner \r\n            }\r\n        }\r\n        catch(e){\r\n            if (e.name ==\"MongoError\" && e.code == 11000){\r\n                throw new Error(\"User already exists\")\r\n            }\r\n        }   \r\n\r\n\r\n    },\r\n\r\n\r\n    async authenticateUser(email,password){\r\n        let db = await connect()\r\n        let user = await db.collection(\"users\").findOne({email : email})\r\n\r\n        // provjerava da li je ovaj hesh u bazi izveden iz cistog passworda\r\n        if(user && user.password && (await bcrypt.compare(password, user.password))){\r\n            //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \r\n            //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\r\n            //naš token sadrži sve podatke o useru\r\n            //password nije potrebno spremati u token jer smo ga već provjerili\r\n            delete user.password\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm: \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            })\r\n            \r\n            user.token = token\r\n\r\n            return user \r\n\r\n        }\r\n        else {\r\n            throw new Error('Cannot authenticate')\r\n        }\r\n    },\r\n\r\n\r\n    async isValidUser(req,res, next){\r\n        \r\n        try{\r\n            let authorization = req.headers.authorization.split(' ')\r\n            let type = authorization[0]\r\n            let token = authorization[1]\r\n            \r\n    \r\n            if (type != 'Bearer'){\r\n                //console.log('type:' + type)\r\n               \r\n                res.status(401).send()\r\n                return false;\r\n            }\r\n            else {\r\n                //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\r\n                //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\r\n  \r\n                req.jwt = jwt.verify(token, process.env.JWT_SECRET)\r\n                \r\n                return next()\r\n            }\r\n        }\r\n        catch(e){\r\n\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n\r\n    async isStudent(req,res, next){\r\n        \r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            \r\n            if (accountType ===  'Student' )  return next() \r\n            //fali jos return false u else ako nece funkcionirati\r\n            else  res.status(401).send()\r\n\r\n        }\r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n\r\n    async isPartner(req,res, next){\r\n        \r\n        let accountType = req.jwt.account_type\r\n\r\n        try{\r\n            if (accountType ===  'Poslodavac'   ||   accountType === 'Admin')  {\r\n                //poslodavac nema pristup kreiranju i brisanju poslodavaca odnosno partnera \r\n                if(accountType === 'Poslodavac' && req.path === 'partners' && (req.method === 'POST' || req.method === 'DELETE') ){\r\n                        res.status(401).send()\r\n                        return false\r\n                }\r\n\r\n                return next() \r\n            }\r\n            else  {\r\n                res.status(401).send()}\r\n                return false\r\n            }\r\n\r\n        \r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n    \r\n\r\n\r\n    async changeUserPassword(userData){\r\n        let db = await connect()\r\n \r\n        let user = await db.collection(\"users\").findOne({email : userData.email})\r\n        \r\n\r\n        if (user && user.password && (await bcrypt.compare(userData.oldPassword, user.password))){\r\n            let newPasswordTransformed = await bcrypt.hash(userData.newPassword, 8)\r\n\r\n            let result = await db.collection('users').updateOne(\r\n                { _id: user._id },\r\n                {\r\n                    $set: {\r\n                        password: newPasswordTransformed,\r\n                    },\r\n                }\r\n            );\r\n            return result.modifiedCount == 1;\r\n        }\r\n    }\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1597760820505
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\methods.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "methods.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar methods = {\n  validateData: function validateData(data) {\n    for (var _i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      if (!value && key != 'views') {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  // jer je skoro identičan postupak za dodavanje partnera i projekta\n  pushData: function () {\n    var _pushData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data, collectionName) {\n      var db, getPartner, insertResult, id;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 2:\n              _context.next = 4;\n              return (0, _db[\"default\"])();\n\n            case 4:\n              db = _context.sent;\n              _context.prev = 5;\n\n              if (!(collectionName === 'projects')) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(data.userID)\n              });\n\n            case 9:\n              getPartner = _context.sent;\n              data.partnerID = getPartner._id;\n\n            case 11:\n              _context.next = 13;\n              return db.collection(collectionName).insertOne(data);\n\n            case 13:\n              insertResult = _context.sent;\n              id = insertResult.insertedId;\n\n              if (!(insertResult && id)) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\", id);\n\n            case 17:\n              return _context.abrupt(\"return\", id);\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](5);\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 20]]);\n    }));\n\n    function pushData(_x, _x2) {\n      return _pushData.apply(this, arguments);\n    }\n\n    return pushData;\n  }(),\n  addPartner: function () {\n    var _addPartner = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(partnerData) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              delete partnerData.account_type;\n              partnerData.views = 0;\n              _context2.next = 5;\n              return methods.pushData(partnerData, 'partners');\n\n            case 5:\n              result = _context2.sent;\n              console.log('res', result);\n              return _context2.abrupt(\"return\", result);\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.status(500).json({\n                error: _context2.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    function addPartner(_x3) {\n      return _addPartner.apply(this, arguments);\n    }\n\n    return addPartner;\n  }(),\n  // identičan postupak za promjenu info partnera i projekta\n  changeInfo: function () {\n    var _changeInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, collectionName) {\n      var result, id, db;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (data._id == null) {\n                id = data.id;\n                delete data.id;\n              } else {\n                id = data._id;\n                delete data._id;\n              }\n\n              _context3.next = 3;\n              return (0, _db[\"default\"])();\n\n            case 3:\n              db = _context3.sent;\n\n              if (!(data.updateDoc === 'true')) {\n                _context3.next = 11;\n                break;\n              }\n\n              delete data.updateDoc;\n              _context3.next = 8;\n              return db.collection(collectionName).updateOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, {\n                $set: data\n              });\n\n            case 8:\n              result = _context3.sent;\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.next = 13;\n              return db.collection(collectionName).deleteOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 13:\n              result = _context3.sent;\n\n            case 14:\n              if (!(result.modifiedCount == 1 || result.deletedCount == 1)) {\n                _context3.next = 18;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'success');\n\n            case 18:\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function changeInfo(_x4, _x5) {\n      return _changeInfo.apply(this, arguments);\n    }\n\n    return changeInfo;\n  }(),\n  //nece trebati ako su imena atributa ista\n  mapAttributes: function () {\n    var _mapAttributes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(projectData) {\n      var project;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              project = {\n                company: projectData.company,\n                project_description: projectData.description,\n                date_created: Date.now(),\n                contact: projectData.contact,\n                technologies: projectData.technologies,\n                preferences: projectData.preferences,\n                requirements: projectData.requirements,\n                duration: projectData.duration,\n                location: projectData.location,\n                note: projectData.note,\n                allocated_to: projectData.allocatedTo\n              };\n              return _context4.abrupt(\"return\", project);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function mapAttributes(_x6) {\n      return _mapAttributes.apply(this, arguments);\n    }\n\n    return mapAttributes;\n  }(),\n  //  identičan postupak za pretragu partnera i projekta\n  search: function () {\n    var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(query, atributi, collectionName) {\n      var db, selekcija, pretraga, terms, cursor, results;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              selekcija = {};\n\n              if (query._any || collectionName === 'users') {\n                pretraga = query._any;\n\n                if (collectionName === 'users') {\n                  pretraga = pretraga + ' Student';\n                }\n\n                terms = pretraga.split(' ');\n                if (!query._any) terms.shift();\n                console.log('terms:', terms);\n                selekcija = {\n                  $and: []\n                };\n                /*\r\n                terms.map(function(term){\r\n                    let or = { $or: [] };\r\n                    atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                    selekcija.$and.push(or);\r\n                })\r\n                */\n\n                terms.forEach(function (term) {\n                  var or = {\n                    $or: []\n                  };\n                  atributi.forEach(function (atribut) {\n                    or.$or.push(_defineProperty({}, atribut, new RegExp(term, \"i\")));\n                  });\n                  selekcija.$and.push(or);\n                });\n              }\n\n              _context5.next = 7;\n              return db.collection(collectionName).find(selekcija).sort({\n                company: 1\n              });\n\n            case 7:\n              cursor = _context5.sent;\n              _context5.next = 10;\n              return cursor.toArray();\n\n            case 10:\n              results = _context5.sent;\n              results.forEach(function (doc) {\n                doc.id = doc._id;\n                delete doc._id;\n              });\n              return _context5.abrupt(\"return\", results);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function search(_x7, _x8, _x9) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }()\n};\nvar _default = methods;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "methods.js"
      ],
      "names": [
        "methods",
        "validateData",
        "data",
        "Object",
        "entries",
        "key",
        "value",
        "pushData",
        "collectionName",
        "Error",
        "db",
        "collection",
        "findOne",
        "userID",
        "getPartner",
        "partnerID",
        "_id",
        "insertOne",
        "insertResult",
        "id",
        "insertedId",
        "addPartner",
        "partnerData",
        "account_type",
        "views",
        "result",
        "console",
        "log",
        "res",
        "status",
        "json",
        "error",
        "message",
        "changeInfo",
        "updateDoc",
        "updateOne",
        "$set",
        "deleteOne",
        "modifiedCount",
        "deletedCount",
        "mapAttributes",
        "projectData",
        "project",
        "company",
        "project_description",
        "description",
        "date_created",
        "Date",
        "now",
        "contact",
        "technologies",
        "preferences",
        "requirements",
        "duration",
        "location",
        "note",
        "allocated_to",
        "allocatedTo",
        "search",
        "query",
        "atributi",
        "selekcija",
        "_any",
        "pretraga",
        "terms",
        "split",
        "shift",
        "$and",
        "forEach",
        "term",
        "or",
        "$or",
        "atribut",
        "push",
        "RegExp",
        "find",
        "sort",
        "cursor",
        "toArray",
        "results",
        "doc"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "/* Svrha ovog filea je odvojiti metode odnosno funkcije od ruta i handlera radi preglednosti, a metode su pisane radi redundancije koda */\r\nimport connect from './db.js'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n\r\n\r\nlet methods  = {\r\n\r\n\r\n    validateData : (data) => {\r\n        for (const [key, value] of Object.entries(data)) {\r\n            if(!value && key != 'views'){\r\n\r\n              return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n\r\n    \r\n\r\n    // jer je skoro identičan postupak za dodavanje partnera i projekta\r\n    pushData : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n\r\n            throw new Error(\"Error accured during inserting project or partner\")        \r\n        }\r\n            \r\n        let db = await connect()\r\n\r\n        \r\n        try{\r\n            \r\n            \r\n            //projektu pridodajemo partnerID radi lakšeg mapiranja i rada s podacima\r\n            if(collectionName === 'projects') {\r\n                let getPartner  = await db.collection(\"partners\").findOne({userID: ObjectID(data.userID)})\r\n                data.partnerID = getPartner._id\r\n            }\r\n            \r\n            \r\n            let insertResult = await db.collection(collectionName).insertOne(data);\r\n            let id = insertResult.insertedId\r\n\r\n            if(insertResult && id){ \r\n                 // 1. način\r\n                 return id\r\n                }\r\n                \r\n                /*\r\n                // pushanje projectId-a u listu projekata određenog partnera, 2. način\r\n\r\n                if(collectionName === 'projects'){\r\n                    let partnerID = data.partnerID\r\n                    delete data.partnerID\r\n                    \r\n                    await db.collection('partners').updateOne( { _id: ObjectID(partnerID) },{$addToSet:{ \"projects\": id}}, true);\r\n                }\r\n                */\r\n                return id\r\n            }\r\n        \r\n        catch(e){\r\n                throw new Error(\"Error accured during inserting project or partner\")\r\n        } \r\n    },\r\n\r\n\r\n   \r\n    addPartner : async (partnerData) => {\r\n        \r\n        try{\r\n            delete partnerData.account_type\r\n            partnerData.views = 0\r\n\r\n            let result = await methods.pushData(partnerData, 'partners')\r\n            console.log('res',result)\r\n            return result\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n    // identičan postupak za promjenu info partnera i projekta\r\n    changeInfo : async (data, collectionName) => {\r\n        \r\n        let result, id \r\n\r\n        if (data._id == null){\r\n            id = data.id\r\n            delete data.id\r\n        }else{\r\n            id = data._id\r\n            delete data._id\r\n        }\r\n        \r\n        let db = await connect();\r\n\r\n        //za ovakav update više odgovara put, a ne patch?\r\n        if (data.updateDoc==='true') {\r\n            delete data.updateDoc\r\n            result = await db.collection(collectionName).updateOne( { _id: ObjectID(id) },{ $set: data, });\r\n        } \r\n            \r\n        else    result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } )\r\n\r\n        // 2 način\r\n        /*\r\n        else{\r\n            await db.collection('partners').updateOne( {}, {\r\n                $pull: { _id: ObjectID(id)  } } \r\n              )\r\n\r\n            result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } );\r\n        } \r\n        */\r\n     \r\n        if (result.modifiedCount == 1 || result.deletedCount == 1)  return 'success'\r\n        else return 'fail'\r\n    },\r\n\r\n\r\n    //nece trebati ako su imena atributa ista\r\n    mapAttributes : async (projectData) =>{\r\n     \r\n        let project = {\r\n                company: projectData.company,\r\n                project_description: projectData.description,\r\n                date_created: Date.now(),\r\n                contact: projectData.contact,\r\n                technologies: projectData.technologies,\r\n                preferences: projectData.preferences,\r\n                requirements: projectData.requirements,\r\n                duration: projectData.duration,\r\n                location: projectData.location,\r\n                note: projectData.note,\r\n                allocated_to: projectData.allocatedTo\r\n        }\r\n        return project\r\n    },\r\n\r\n\r\n    \r\n    //  identičan postupak za pretragu partnera i projekta\r\n    search : async (query, atributi, collectionName) =>{\r\n        let db = await connect()\r\n\r\n        let selekcija = {}\r\n        \r\n        if(query._any || collectionName === 'users'){\r\n            let pretraga = query._any\r\n\r\n            if (collectionName === 'users'){\r\n\r\n                pretraga = pretraga + ' Student'\r\n            } \r\n\r\n            let terms = pretraga.split(' ')\r\n            if (!query._any)  terms.shift()\r\n            console.log('terms:',terms)\r\n\r\n            selekcija = {\r\n                $and: []\r\n            }\r\n\r\n            /*\r\n            terms.map(function(term){\r\n                let or = { $or: [] };\r\n                atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                selekcija.$and.push(or);\r\n            })\r\n            */\r\n            \r\n            \r\n            terms.forEach((term) => {\r\n                let or = {\r\n                    $or: []\r\n                };\r\n\r\n                atributi.forEach(atribut => {\r\n                    or.$or.push({ [atribut]: new RegExp(term, \"i\") });\r\n                })\r\n                \r\n                selekcija.$and.push(or);\r\n            });\r\n            \r\n            \r\n     }\r\n     \r\n        let cursor = await db.collection(collectionName).find(selekcija).sort({company: 1})\r\n\r\n        let results =  await cursor.toArray()\r\n\r\n        results.forEach(doc => {\r\n            doc.id = doc._id\r\n            delete doc._id\r\n        })\r\n\r\n\r\n        return results\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1597952376016
  }
}