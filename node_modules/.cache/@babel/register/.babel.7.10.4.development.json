{
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa_backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa_backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa_backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa_backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa_backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconsole.log('Prvi dan projekta');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFxtb2phX3ByYWtzYV9iYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnNvbGUubG9nKCdQcnZpIGRhbiBwcm9qZWt0YScpIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "console.log('Prvi dan projekta')"
      ]
    },
    "sourceType": "script",
    "mtime": 1594157128662
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _routes = _interopRequireDefault(require(\"./routes\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar app = (0, _express[\"default\"])(); // instanciranje aplikacije\n\nvar port = 3000; // port na kojem će web server slušati\n\napp.use((0, _cors[\"default\"])());\napp.use(_express[\"default\"].json());\napp.get('/', _routes[\"default\"].home);\napp.get('/profile', _routes[\"default\"].userProfile);\napp.post('/register', _routes[\"default\"].registration);\napp.post('/login', _routes[\"default\"].login);\napp.get('/projects', _routes[\"default\"].getProjects);\napp.post('/projects', _routes[\"default\"].addProject);\napp.get('/partners', _routes[\"default\"].getPartners);\napp.patch('/register', [_auth[\"default\"].isValidUser], _routes[\"default\"].changePassword); //register?\n\napp.get('/projects/:id', _routes[\"default\"].getOneProject);\napp.get('/partners/:id', _routes[\"default\"].getOnePartner);\napp.patch('/projects/:id/:update', _routes[\"default\"].changeProjectInfo);\napp[\"delete\"]('/projects/:id/:update', _routes[\"default\"].changeProjectInfo);\napp.patch('/partners/:id/:update', _routes[\"default\"].changePartnerInfo); //promijeniti u 'partner'?\n\napp[\"delete\"]('/partners/:id/:update', _routes[\"default\"].changePartnerInfo);\napp.get('/partner_projects/:id', _routes[\"default\"].getPartnerProjects);\napp.post('/chosen_projects', [_auth[\"default\"].isValidUser], [_auth[\"default\"].isStudent], _routes[\"default\"].chosenProjects);\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsImFwcCIsInBvcnQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsImdldCIsInJvdXRlcyIsImhvbWUiLCJ1c2VyUHJvZmlsZSIsInBvc3QiLCJyZWdpc3RyYXRpb24iLCJsb2dpbiIsImdldFByb2plY3RzIiwiYWRkUHJvamVjdCIsImdldFBhcnRuZXJzIiwicGF0Y2giLCJhdXRoIiwiaXNWYWxpZFVzZXIiLCJjaGFuZ2VQYXNzd29yZCIsImdldE9uZVByb2plY3QiLCJnZXRPbmVQYXJ0bmVyIiwiY2hhbmdlUHJvamVjdEluZm8iLCJjaGFuZ2VQYXJ0bmVySW5mbyIsImdldFBhcnRuZXJQcm9qZWN0cyIsImlzU3R1ZGVudCIsImNob3NlblByb2plY3RzIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUxBQSxtQkFBT0MsTUFBUDs7QUFRQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUFzQjs7QUFDdEIsSUFBTUMsSUFBSSxHQUFHLElBQWIsQyxDQUFrQjs7QUFFbEJELEdBQUcsQ0FBQ0UsR0FBSixDQUFRLHVCQUFSO0FBQ0FGLEdBQUcsQ0FBQ0UsR0FBSixDQUFRQyxvQkFBUUMsSUFBUixFQUFSO0FBRUFKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLEdBQVIsRUFBYUMsbUJBQU9DLElBQXBCO0FBQ0FQLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFVBQVIsRUFBb0JDLG1CQUFPRSxXQUEzQjtBQUNBUixHQUFHLENBQUNTLElBQUosQ0FBUyxXQUFULEVBQXNCSCxtQkFBT0ksWUFBN0I7QUFDQVYsR0FBRyxDQUFDUyxJQUFKLENBQVMsUUFBVCxFQUFtQkgsbUJBQU9LLEtBQTFCO0FBQ0FYLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLFdBQVIsRUFBcUJDLG1CQUFPTSxXQUE1QjtBQUNBWixHQUFHLENBQUNTLElBQUosQ0FBUyxXQUFULEVBQXNCSCxtQkFBT08sVUFBN0I7QUFDQWIsR0FBRyxDQUFDSyxHQUFKLENBQVEsV0FBUixFQUFxQkMsbUJBQU9RLFdBQTVCO0FBQ0FkLEdBQUcsQ0FBQ2UsS0FBSixDQUFVLFdBQVYsRUFBdUIsQ0FBQ0MsaUJBQUtDLFdBQU4sQ0FBdkIsRUFBMkNYLG1CQUFPWSxjQUFsRCxFLENBQWtFOztBQUNsRWxCLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGVBQVIsRUFBeUJDLG1CQUFPYSxhQUFoQztBQUNBbkIsR0FBRyxDQUFDSyxHQUFKLENBQVEsZUFBUixFQUF5QkMsbUJBQU9jLGFBQWhDO0FBQ0FwQixHQUFHLENBQUNlLEtBQUosQ0FBVSx1QkFBVixFQUFtQ1QsbUJBQU9lLGlCQUExQztBQUNBckIsR0FBRyxVQUFILENBQVcsdUJBQVgsRUFBb0NNLG1CQUFPZSxpQkFBM0M7QUFDQXJCLEdBQUcsQ0FBQ2UsS0FBSixDQUFVLHVCQUFWLEVBQW1DVCxtQkFBT2dCLGlCQUExQyxFLENBQTZEOztBQUM3RHRCLEdBQUcsVUFBSCxDQUFXLHVCQUFYLEVBQW9DTSxtQkFBT2dCLGlCQUEzQztBQUNBdEIsR0FBRyxDQUFDSyxHQUFKLENBQVEsdUJBQVIsRUFBaUNDLG1CQUFPaUIsa0JBQXhDO0FBQ0F2QixHQUFHLENBQUNTLElBQUosQ0FBUyxrQkFBVCxFQUE2QixDQUFDTyxpQkFBS0MsV0FBTixDQUE3QixFQUFpRCxDQUFDRCxpQkFBS1EsU0FBTixDQUFqRCxFQUFtRWxCLG1CQUFPbUIsY0FBMUU7QUFFQXpCLEdBQUcsQ0FBQzBCLE1BQUosQ0FBV3pCLElBQVgsRUFBaUI7QUFBQSxTQUFNMEIsT0FBTyxDQUFDQyxHQUFSLGdDQUErQjNCLElBQS9CLE9BQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcbW9qYV9wcmFrc2FcXG1vamFfcHJha3NhX2JhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnXHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJzsgXHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXHJcbmltcG9ydCBhdXRoIGZyb20gJy4vYXV0aC5qcydcclxuXHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCkgLy8gaW5zdGFuY2lyYW5qZSBhcGxpa2FjaWplXHJcbmNvbnN0IHBvcnQgPSAzMDAwIC8vIHBvcnQgbmEga29qZW0gxIdlIHdlYiBzZXJ2ZXIgc2x1xaFhdGlcclxuXHJcbmFwcC51c2UoY29ycygpKVxyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKVxyXG5cclxuYXBwLmdldCgnLycsIHJvdXRlcy5ob21lKVxyXG5hcHAuZ2V0KCcvcHJvZmlsZScsIHJvdXRlcy51c2VyUHJvZmlsZSlcclxuYXBwLnBvc3QoJy9yZWdpc3RlcicsIHJvdXRlcy5yZWdpc3RyYXRpb24pXHJcbmFwcC5wb3N0KCcvbG9naW4nLCByb3V0ZXMubG9naW4pXHJcbmFwcC5nZXQoJy9wcm9qZWN0cycsIHJvdXRlcy5nZXRQcm9qZWN0cylcclxuYXBwLnBvc3QoJy9wcm9qZWN0cycsIHJvdXRlcy5hZGRQcm9qZWN0KVxyXG5hcHAuZ2V0KCcvcGFydG5lcnMnLCByb3V0ZXMuZ2V0UGFydG5lcnMpXHJcbmFwcC5wYXRjaCgnL3JlZ2lzdGVyJywgW2F1dGguaXNWYWxpZFVzZXJdLCByb3V0ZXMuY2hhbmdlUGFzc3dvcmQpIC8vcmVnaXN0ZXI/XHJcbmFwcC5nZXQoJy9wcm9qZWN0cy86aWQnLCByb3V0ZXMuZ2V0T25lUHJvamVjdClcclxuYXBwLmdldCgnL3BhcnRuZXJzLzppZCcsIHJvdXRlcy5nZXRPbmVQYXJ0bmVyKVxyXG5hcHAucGF0Y2goJy9wcm9qZWN0cy86aWQvOnVwZGF0ZScsIHJvdXRlcy5jaGFuZ2VQcm9qZWN0SW5mbylcclxuYXBwLmRlbGV0ZSgnL3Byb2plY3RzLzppZC86dXBkYXRlJywgcm91dGVzLmNoYW5nZVByb2plY3RJbmZvKVxyXG5hcHAucGF0Y2goJy9wYXJ0bmVycy86aWQvOnVwZGF0ZScsIHJvdXRlcy5jaGFuZ2VQYXJ0bmVySW5mbykgLy9wcm9taWplbml0aSB1ICdwYXJ0bmVyJz9cclxuYXBwLmRlbGV0ZSgnL3BhcnRuZXJzLzppZC86dXBkYXRlJywgcm91dGVzLmNoYW5nZVBhcnRuZXJJbmZvKVxyXG5hcHAuZ2V0KCcvcGFydG5lcl9wcm9qZWN0cy86aWQnLCByb3V0ZXMuZ2V0UGFydG5lclByb2plY3RzKVxyXG5hcHAucG9zdCgnL2Nob3Nlbl9wcm9qZWN0cycsIFthdXRoLmlzVmFsaWRVc2VyXSwgW2F1dGguaXNTdHVkZW50XSwgcm91dGVzLmNob3NlblByb2plY3RzKVxyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiBjb25zb2xlLmxvZyhgU2x1xaFhbSBuYSBwb3J0dSAke3BvcnR9IWApKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "app",
        "port",
        "use",
        "express",
        "json",
        "get",
        "routes",
        "home",
        "userProfile",
        "post",
        "registration",
        "login",
        "getProjects",
        "addProject",
        "getPartners",
        "patch",
        "auth",
        "isValidUser",
        "changePassword",
        "getOneProject",
        "getOnePartner",
        "changeProjectInfo",
        "changePartnerInfo",
        "getPartnerProjects",
        "isStudent",
        "chosenProjects",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AAGA;;AACA;;AACA;;AACA;;;;AALAA,mBAAOC,MAAP;;AAQA,IAAMC,GAAG,GAAG,0BAAZ,C,CAAsB;;AACtB,IAAMC,IAAI,GAAG,IAAb,C,CAAkB;;AAElBD,GAAG,CAACE,GAAJ,CAAQ,uBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaC,mBAAOC,IAApB;AACAP,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoBC,mBAAOE,WAA3B;AACAR,GAAG,CAACS,IAAJ,CAAS,WAAT,EAAsBH,mBAAOI,YAA7B;AACAV,GAAG,CAACS,IAAJ,CAAS,QAAT,EAAmBH,mBAAOK,KAA1B;AACAX,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAqBC,mBAAOM,WAA5B;AACAZ,GAAG,CAACS,IAAJ,CAAS,WAAT,EAAsBH,mBAAOO,UAA7B;AACAb,GAAG,CAACK,GAAJ,CAAQ,WAAR,EAAqBC,mBAAOQ,WAA5B;AACAd,GAAG,CAACe,KAAJ,CAAU,WAAV,EAAuB,CAACC,iBAAKC,WAAN,CAAvB,EAA2CX,mBAAOY,cAAlD,E,CAAkE;;AAClElB,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyBC,mBAAOa,aAAhC;AACAnB,GAAG,CAACK,GAAJ,CAAQ,eAAR,EAAyBC,mBAAOc,aAAhC;AACApB,GAAG,CAACe,KAAJ,CAAU,uBAAV,EAAmCT,mBAAOe,iBAA1C;AACArB,GAAG,UAAH,CAAW,uBAAX,EAAoCM,mBAAOe,iBAA3C;AACArB,GAAG,CAACe,KAAJ,CAAU,uBAAV,EAAmCT,mBAAOgB,iBAA1C,E,CAA6D;;AAC7DtB,GAAG,UAAH,CAAW,uBAAX,EAAoCM,mBAAOgB,iBAA3C;AACAtB,GAAG,CAACK,GAAJ,CAAQ,uBAAR,EAAiCC,mBAAOiB,kBAAxC;AACAvB,GAAG,CAACS,IAAJ,CAAS,kBAAT,EAA6B,CAACO,iBAAKC,WAAN,CAA7B,EAAiD,CAACD,iBAAKQ,SAAN,CAAjD,EAAmElB,mBAAOmB,cAA1E;AAEAzB,GAAG,CAAC0B,MAAJ,CAAWzB,IAAX,EAAiB;AAAA,SAAM0B,OAAO,CAACC,GAAR,gCAA+B3B,IAA/B,OAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nimport express from 'express';\r\nimport routes from './routes'; \r\nimport cors from 'cors'\r\nimport auth from './auth.js'\r\n\r\n\r\nconst app = express() // instanciranje aplikacije\r\nconst port = 3000 // port na kojem će web server slušati\r\n\r\napp.use(cors())\r\napp.use(express.json())\r\n\r\napp.get('/', routes.home)\r\napp.get('/profile', routes.userProfile)\r\napp.post('/register', routes.registration)\r\napp.post('/login', routes.login)\r\napp.get('/projects', routes.getProjects)\r\napp.post('/projects', routes.addProject)\r\napp.get('/partners', routes.getPartners)\r\napp.patch('/register', [auth.isValidUser], routes.changePassword) //register?\r\napp.get('/projects/:id', routes.getOneProject)\r\napp.get('/partners/:id', routes.getOnePartner)\r\napp.patch('/projects/:id/:update', routes.changeProjectInfo)\r\napp.delete('/projects/:id/:update', routes.changeProjectInfo)\r\napp.patch('/partners/:id/:update', routes.changePartnerInfo) //promijeniti u 'partner'?\r\napp.delete('/partners/:id/:update', routes.changePartnerInfo)\r\napp.get('/partner_projects/:id', routes.getPartnerProjects)\r\napp.post('/chosen_projects', [auth.isValidUser], [auth.isStudent], routes.chosenProjects)\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1596551703016
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\routes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "routes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _methods = _interopRequireDefault(require(\"./methods.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar getOneProject = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var id, db, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //a kad bi bilo ?id=23432 onda dohvacamo s req.query, a url parametre ovako:\n            id = req.params.id;\n            _context.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context.sent;\n            _context.next = 6;\n            return db.collection(\"projects\").findOne({\n              _id: (0, _mongodb.ObjectID)(id)\n            });\n\n          case 6:\n            result = _context.sent;\n            result.id = result._id;\n            delete result._id;\n            res.json(result);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getOneProject(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getPartnerProjects = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var partnerID, db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            partnerID = req.params.id;\n            _context2.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context2.sent;\n            _context2.next = 6;\n            return db.collection(\"projects\").find({\n              partnerID: (0, _mongodb.ObjectID)(partnerID)\n            });\n\n          case 6:\n            cursor = _context2.sent;\n            _context2.next = 9;\n            return cursor.toArray();\n\n          case 9:\n            results = _context2.sent;\n            res.send(results);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getPartnerProjects(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getOnePartner = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var id, db, result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = req.params.id;\n            _context3.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context3.sent;\n            _context3.next = 6;\n            return db.collection(\"partners\").findOne({\n              _id: (0, _mongodb.ObjectID)(id)\n            });\n\n          case 6:\n            result = _context3.sent;\n            result.id = result._id;\n            delete result._id;\n            res.json(result);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getOnePartner(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar changePassword = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var data, email, result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            data = req.body; //dolazi iz metode isValidUser\n\n            email = req.jwt.email;\n\n            if (!(data.newPassword && data.oldPassword)) {\n              _context4.next = 9;\n              break;\n            }\n\n            _context4.next = 5;\n            return _auth[\"default\"].changeUserPassword(email, data.oldPassword, data.newPassword);\n\n          case 5:\n            result = _context4.sent;\n\n            if (result) {\n              res.status(201).send();\n            } else {\n              res.status(500).json({\n                error: 'Server error'\n              });\n            }\n\n            _context4.next = 10;\n            break;\n\n          case 9:\n            res.status(400).json({\n              error: \"Invalid input data\"\n            });\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function changePassword(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar login = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var user, result;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            user = req.body;\n            _context5.prev = 1;\n            _context5.next = 4;\n            return _auth[\"default\"].authenticateUser(user.email, user.password);\n\n          case 4:\n            result = _context5.sent;\n            res.json(result);\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](1);\n            res.status(401).json({\n              error: _context5.t0.message\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 8]]);\n  }));\n\n  return function login(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar registration = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var newUser, partner, result;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            newUser = req.body;\n            _context6.prev = 1;\n            _context6.next = 4;\n            return _auth[\"default\"].register(newUser);\n\n          case 4:\n            partner = _context6.sent;\n\n            if (!(newUser.account_type === ('poslodavac' || 'Poslodavac'))) {\n              _context6.next = 9;\n              break;\n            }\n\n            _context6.next = 8;\n            return _methods[\"default\"].addPartner(partner);\n\n          case 8:\n            result = _context6.sent;\n\n          case 9:\n            res.json({\n              status: \"user with id \".concat(result, \" added\")\n            });\n            _context6.next = 15;\n            break;\n\n          case 12:\n            _context6.prev = 12;\n            _context6.t0 = _context6[\"catch\"](1);\n            res.status(500).json({\n              error: _context6.t0.message\n            });\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 12]]);\n  }));\n\n  return function registration(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar chosenProjects = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var data, db, result;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            data = req.body;\n            _context7.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context7.sent;\n            _context7.next = 6;\n            return db.collection('users').updateOne({\n              _id: (0, _mongodb.ObjectID)(data.user)\n            }, {\n              $set: {\n                \"chosenProjects\": data.selection\n              }\n            });\n\n          case 6:\n            result = _context7.sent;\n            res.json(result);\n\n          case 8:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function chosenProjects(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar changeProjectInfo = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var project, response;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            project = req.body;\n            delete project.id; //ako nema podataka u body, znači da se traži delete pa inicijaliziramo prazan objekt u koji stavljamo jedino podatke potrebne za delete, inače ide update\n\n            if (!project) {\n              _context8.next = 8;\n              break;\n            }\n\n            _context8.next = 5;\n            return _methods[\"default\"].mapAttributes(project);\n\n          case 5:\n            project = _context8.sent;\n            _context8.next = 9;\n            break;\n\n          case 8:\n            project = {};\n\n          case 9:\n            // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\n            project.id = req.params.id;\n            project.updateDoc = req.params.update;\n            _context8.next = 13;\n            return _methods[\"default\"].changeInfo(project, 'projects');\n\n          case 13:\n            response = _context8.sent;\n            res.send(response);\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function changeProjectInfo(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar changePartnerInfo = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var partnerInfo;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            partnerInfo = req.body;\n            delete partnerInfo._id;\n            partnerInfo.id = req.params.id;\n            partnerInfo.updateDoc = req.params.update;\n            _context9.next = 6;\n            return _methods[\"default\"].changeInfo(partnerInfo, 'partners');\n\n          case 6:\n            response = _context9.sent;\n            res.send(response);\n\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function changePartnerInfo(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nvar getProjects = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var query, atributi, result;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            query = req.query;\n            atributi = [\"company\", \"technologies\", \"location\", \"project_description\"];\n            _context10.next = 4;\n            return _methods[\"default\"].search(query, atributi, 'projects');\n\n          case 4:\n            result = _context10.sent;\n            res.json(result);\n\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function getProjects(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nvar getPartners = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var query, atributi, result;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            query = req.query;\n            atributi = [\"company\", \"about_us\"];\n            _context11.next = 4;\n            return _methods[\"default\"].search(query, atributi, 'partners');\n\n          case 4:\n            result = _context11.sent;\n            res.json(result);\n\n          case 6:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function getPartners(_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nvar addProject = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var projectData, project, result;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            projectData = req.body; // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\n\n            _context12.next = 3;\n            return _methods[\"default\"].mapAttributes(projectData);\n\n          case 3:\n            project = _context12.sent;\n            //slika je hardcodana jer nema bas smisla imati custom sliku projekta\n            project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\";\n            project.userID = projectData.userID;\n            _context12.prev = 6;\n            _context12.next = 9;\n            return _methods[\"default\"].pushData(project, 'projects');\n\n          case 9:\n            result = _context12.sent;\n            res.send(\"project with id  \".concat(result, \" added.\"));\n            _context12.next = 16;\n            break;\n\n          case 13:\n            _context12.prev = 13;\n            _context12.t0 = _context12[\"catch\"](6);\n            res.status(500).json({\n              error: _context12.t0.message\n            });\n\n          case 16:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[6, 13]]);\n  }));\n\n  return function addProject(_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}(); //testna\n\n\nvar userProfile = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var db, cursor, results;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context13.sent;\n            _context13.next = 5;\n            return db.collection(\"users\").find();\n\n          case 5:\n            cursor = _context13.sent;\n            _context13.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            results = _context13.sent;\n            //console.log(results)\n            res.json(results);\n\n          case 10:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n\n  return function userProfile(_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nvar home = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var db, numberOfDocs;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context14.sent;\n            numberOfDocs = {};\n            _context14.next = 6;\n            return db.collection(\"projects\").countDocuments();\n\n          case 6:\n            numberOfDocs.projectsCounter = _context14.sent;\n            _context14.next = 9;\n            return db.collection(\"partners\").countDocuments();\n\n          case 9:\n            numberOfDocs.partnersCounter = _context14.sent;\n            res.json(numberOfDocs);\n\n          case 11:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n\n  return function home(_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}();\n\nvar _default = {\n  home: home,\n  registration: registration,\n  login: login,\n  userProfile: userProfile,\n  getProjects: getProjects,\n  addProject: addProject,\n  getPartnerProjects: getPartnerProjects,\n  chosenProjects: chosenProjects,\n  getPartners: getPartners,\n  changePassword: changePassword,\n  getOneProject: getOneProject,\n  getOnePartner: getOnePartner,\n  changeProjectInfo: changeProjectInfo,\n  changePartnerInfo: changePartnerInfo\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "getOneProject",
        "req",
        "res",
        "id",
        "params",
        "db",
        "collection",
        "findOne",
        "_id",
        "result",
        "json",
        "getPartnerProjects",
        "partnerID",
        "find",
        "cursor",
        "toArray",
        "results",
        "send",
        "getOnePartner",
        "changePassword",
        "data",
        "body",
        "email",
        "jwt",
        "newPassword",
        "oldPassword",
        "auth",
        "changeUserPassword",
        "status",
        "error",
        "login",
        "user",
        "authenticateUser",
        "password",
        "message",
        "registration",
        "newUser",
        "register",
        "partner",
        "account_type",
        "methods",
        "addPartner",
        "chosenProjects",
        "updateOne",
        "$set",
        "selection",
        "changeProjectInfo",
        "project",
        "mapAttributes",
        "updateDoc",
        "update",
        "changeInfo",
        "response",
        "changePartnerInfo",
        "partnerInfo",
        "getProjects",
        "query",
        "atributi",
        "search",
        "getPartners",
        "addProject",
        "projectData",
        "img_url",
        "userID",
        "pushData",
        "userProfile",
        "home",
        "numberOfDocs",
        "countDocuments",
        "projectsCounter",
        "partnersCounter"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db.js'\r\nimport auth from './auth.js'\r\nimport { ObjectID } from 'mongodb'\r\nimport methods from './methods.js'\r\n\r\n\r\n\r\nlet getOneProject = async (req,res) =>{\r\n    //a kad bi bilo ?id=23432 onda dohvacamo s req.query, a url parametre ovako:\r\n    let id = req.params.id\r\n\r\n    let db = await connect()\r\n\r\n    //findOne ne pretvara rezultate u kursor koji treba pretvoriti u  array\r\n    // u mongu kada pretrazujemo po id-u, moramo omotati s posebnim konstruktorom objectID\r\n    let result = await db.collection(\"projects\").findOne({_id: ObjectID(id)})\r\n\r\n    result.id = result._id\r\n    delete result._id\r\n\r\n    res.json(result)\r\n}\r\n\r\n\r\nlet getPartnerProjects  = async (req,res) =>{\r\n\r\n    let partnerID = req.params.id\r\n    let db = await connect()\r\n\r\n    //nađi projekte koje pripadaju određenom poslodavcu\r\n    /*\r\n    let find_IDs= await db.collection(\"partners\").find({_id: ObjectID(id)})\r\n    let result =  await find_IDs.toArray()\r\n\r\n    let filtered_IDs = result[0].projects\r\n\r\n    let cursor2 = await db.collection(\"projects\").find({_id: {$in: filtered_IDs}})\r\n    let finalResult =  await cursor2.toArray()\r\n    */\r\n    let cursor= await db.collection(\"projects\").find({partnerID: ObjectID(partnerID)})\r\n\r\n    let results =  await cursor.toArray()\r\n    \r\n    res.send(results)\r\n\r\n}\r\n\r\n\r\nlet getOnePartner = async (req,res) =>{\r\n    let id = req.params.id\r\n    let db = await connect()\r\n\r\n    let result = await db.collection(\"partners\").findOne({_id: ObjectID(id)})\r\n\r\n    result.id = result._id\r\n    delete result._id\r\n\r\n    res.json(result)\r\n}\r\n\r\n\r\nlet changePassword = async (req,res) => {\r\n    let data = req.body\r\n    \r\n    //dolazi iz metode isValidUser\r\n    let email = req.jwt.email\r\n\r\n    if (data.newPassword && data.oldPassword){\r\n        let result = await auth.changeUserPassword(email, data.oldPassword, data.newPassword)\r\n        \r\n\r\n        if (result) {\r\n            res.status(201).send();\r\n        } \r\n        else {\r\n            res.status(500).json({ error: 'Server error' });\r\n        }\r\n    }\r\n\r\n    else{\r\n        res.status(400).json({error : \"Invalid input data\"})\r\n    }\r\n}\r\n\r\n\r\nlet login = async (req,res) => {\r\n    let user = req.body\r\n\r\n    try{\r\n        let result = await auth.authenticateUser(user.email, user.password)\r\n        res.json(result)\r\n    }\r\n    catch(e){\r\n        res.status(401).json({error: e.message})\r\n    }\r\n}\r\n\r\n\r\nlet registration = async (req, res) => { \r\n    let newUser = req.body;\r\n\r\n    try {\r\n        let partner = await auth.register(newUser);\r\n        let result \r\n\r\n        //dodavanje korisnika automatski u partnere čim se registrira\r\n        if (newUser.account_type === ('poslodavac' || 'Poslodavac'))    result = await methods.addPartner(partner)\r\n\r\n        res.json({status: `user with id ${result} added`})\r\n\r\n    } catch (e) {\r\n        res.status(500).json({\r\n            error: e.message,\r\n        });\r\n    }\r\n}\r\n\r\nlet chosenProjects = async (req, res) => {\r\n    let data = req.body\r\n    let db = await connect()\r\n\r\n    let result = await db.collection('users').updateOne( { _id: ObjectID(data.user) },{ $set:{ \"chosenProjects\": data.selection} });\r\n    \r\n    res.json(result)\r\n}\r\n\r\n\r\n\r\nlet changeProjectInfo = async (req,res) => {\r\n\r\n    let project = req.body \r\n    delete project.id;\r\n\r\n    //ako nema podataka u body, znači da se traži delete pa inicijaliziramo prazan objekt u koji stavljamo jedino podatke potrebne za delete, inače ide update\r\n    if (project) project = await methods.mapAttributes(project)\r\n    else         project = {}\r\n\r\n    // if (!project) project = {}       --varijanta bez mapiranja ako su nazivi atributa isti pa ne treba mapirati\r\n    \r\n\r\n    project.id = req.params.id;\r\n    project.updateDoc = req.params.update \r\n    \r\n    let response = await methods.changeInfo(project, 'projects')\r\n    \r\n    res.send(response)\r\n}\r\n\r\n\r\n\r\nlet changePartnerInfo = async (req,res) => {\r\n    let partnerInfo = req.body\r\n    delete partnerInfo._id;\r\n    partnerInfo.id = req.params.id;\r\n    partnerInfo.updateDoc = req.params.update \r\n\r\n\r\n    response = await methods.changeInfo(partnerInfo, 'partners')\r\n\r\n    res.send(response)\r\n}\r\n\r\n\r\n\r\nlet getProjects = async (req, res) => {\r\n    \r\n    let query = req.query\r\n    let atributi = [\"company\", \"technologies\", \"location\", \"project_description\"] \r\n\r\n    let result = await methods.search(query, atributi, 'projects')\r\n\r\n    res.json(result)\r\n}\r\n\r\n\r\n\r\nlet getPartners = async (req, res) => {  \r\n    let query = req.query\r\n    let atributi = [\"company\", \"about_us\"] \r\n\r\n    let result = await methods.search(query, atributi, 'partners')\r\n\r\n    res.json(result)\r\n}\r\n\r\n\r\nlet addProject = async (req,res) => {\r\n\r\n    let projectData = req.body\r\n    \r\n    // pušteno ovako u slučaju da se imena atributa razlikuju pa je lakše promijeniti, ali za sada ne treba\r\n    let project = await methods.mapAttributes(projectData)\r\n    \r\n    //slika je hardcodana jer nema bas smisla imati custom sliku projekta\r\n    project.img_url = \"https://images.unsplash.com/photo-1504610926078-a1611febcad3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\"\r\n    project.userID = projectData.userID\r\n    \r\n\r\n    try{\r\n        \r\n        let result = await methods.pushData(project, 'projects')\r\n        \r\n        res.send(`project with id  ${result} added.`)\r\n\r\n    }\r\n    catch(e){\r\n        res.status(500).json({ error: e.message});\r\n    }   \r\n}\r\n\r\n\r\n\r\n//testna\r\nlet userProfile = async (req, res) => {\r\n    \r\n    let db = await connect()\r\n\r\n    //nacin kako se pristupa podacima u mongu je kursor\r\n    let cursor = await db.collection(\"users\").find();\r\n\r\n    let results = await cursor.toArray()\r\n\r\n    //console.log(results)\r\n    res.json(results)\r\n}\r\n\r\n\r\nlet  home = async (req, res) => {\r\n\r\n    let db = await connect()\r\n    let numberOfDocs = {}\r\n\r\n    numberOfDocs.projectsCounter = await db.collection(\"projects\").countDocuments();\r\n    numberOfDocs.partnersCounter = await db.collection(\"partners\").countDocuments();\r\n\r\n    res.json(numberOfDocs)\r\n}\r\n\r\n\r\n\r\nexport default { home, registration, login, userProfile , getProjects, addProject, getPartnerProjects, chosenProjects,\r\n                 getPartners, changePassword, getOneProject, getOnePartner, changeProjectInfo, changePartnerInfo  } "
      ]
    },
    "sourceType": "script",
    "mtime": 1596551242344
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\user_data.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\user_data.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\user_data.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\user_data.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "user_data.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n//objekt storage s atributom users koji je lista objekata\nvar storage = {\n  users: [{\n    ime: \"Filip\",\n    id: '1'\n  }, {\n    ime: \"Stjepan\",\n    id: '2'\n  }]\n};\nvar _default = storage;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfZGF0YS5qcyJdLCJuYW1lcyI6WyJzdG9yYWdlIiwidXNlcnMiLCJpbWUiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxJQUFJQSxPQUFPLEdBQUc7QUFDVkMsRUFBQUEsS0FBSyxFQUFFLENBQ0g7QUFDSUMsSUFBQUEsR0FBRyxFQUFHLE9BRFY7QUFFSUMsSUFBQUEsRUFBRSxFQUFHO0FBRlQsR0FERyxFQUtIO0FBQ0lELElBQUFBLEdBQUcsRUFBRyxTQURWO0FBRUlDLElBQUFBLEVBQUUsRUFBRztBQUZULEdBTEc7QUFERyxDQUFkO2VBYWVILE8iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxGSWxpcC1Qcm9ibmlcXG1vamFfcHJha3NhXFxtb2phX3ByYWtzYV9iYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vb2JqZWt0IHN0b3JhZ2UgcyBhdHJpYnV0b20gdXNlcnMga29qaSBqZSBsaXN0YSBvYmpla2F0YVxyXG5sZXQgc3RvcmFnZSA9IHtcclxuICAgIHVzZXJzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpbWUgOiBcIkZpbGlwXCIsXHJcbiAgICAgICAgICAgIGlkIDogJzEnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGltZSA6IFwiU3RqZXBhblwiLFxyXG4gICAgICAgICAgICBpZCA6ICcyJ1xyXG4gICAgICAgIH1cclxuICAgIF1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3RvcmFnZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user_data.js"
      ],
      "names": [
        "storage",
        "users",
        "ime",
        "id"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAIA,OAAO,GAAG;AACVC,EAAAA,KAAK,EAAE,CACH;AACIC,IAAAA,GAAG,EAAG,OADV;AAEIC,IAAAA,EAAE,EAAG;AAFT,GADG,EAKH;AACID,IAAAA,GAAG,EAAG,SADV;AAEIC,IAAAA,EAAE,EAAG;AAFT,GALG;AADG,CAAd;eAaeH,O",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//objekt storage s atributom users koji je lista objekata\r\nlet storage = {\r\n    users: [\r\n        {\r\n            ime : \"Filip\",\r\n            id : '1'\r\n        },\r\n        {\r\n            ime : \"Stjepan\",\r\n            id : '2'\r\n        }\r\n    ]\r\n}\r\n\r\nexport default storage;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594214809974
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\storage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\storage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\storage.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\storage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "storage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n//objekt storage s atributom users koji je lista objekata\nvar storage = {\n  users: [{\n    'username': \"Filip\",\n    'password': '124'\n  }, {\n    'username': \"Stjepan\",\n    'password': '1234'\n  }]\n};\nvar _default = storage;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JhZ2UuanMiXSwibmFtZXMiOlsic3RvcmFnZSIsInVzZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBLElBQUlBLE9BQU8sR0FBRztBQUNWQyxFQUFBQSxLQUFLLEVBQUUsQ0FDSDtBQUNJLGdCQUFZLE9BRGhCO0FBRUksZ0JBQVk7QUFGaEIsR0FERyxFQUtIO0FBQ0ksZ0JBQVksU0FEaEI7QUFFSSxnQkFBWTtBQUZoQixHQUxHO0FBREcsQ0FBZDtlQWFlRCxPIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRklsaXAtUHJvYm5pXFxtb2phX3ByYWtzYVxcbW9qYV9wcmFrc2FfYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyIvL29iamVrdCBzdG9yYWdlIHMgYXRyaWJ1dG9tIHVzZXJzIGtvamkgamUgbGlzdGEgb2JqZWthdGFcclxubGV0IHN0b3JhZ2UgPSB7XHJcbiAgICB1c2VyczogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgJ3VzZXJuYW1lJzogXCJGaWxpcFwiLFxyXG4gICAgICAgICAgICAncGFzc3dvcmQnOiAnMTI0J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAndXNlcm5hbWUnOiBcIlN0amVwYW5cIixcclxuICAgICAgICAgICAgJ3Bhc3N3b3JkJzogJzEyMzQnXHJcbiAgICAgICAgfVxyXG4gICAgXVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdG9yYWdlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "storage.js"
      ],
      "names": [
        "storage",
        "users"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAIA,OAAO,GAAG;AACVC,EAAAA,KAAK,EAAE,CACH;AACI,gBAAY,OADhB;AAEI,gBAAY;AAFhB,GADG,EAKH;AACI,gBAAY,SADhB;AAEI,gBAAY;AAFhB,GALG;AADG,CAAd;eAaeD,O",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//objekt storage s atributom users koji je lista objekata\r\nlet storage = {\r\n    users: [\r\n        {\r\n            'username': \"Filip\",\r\n            'password': '124'\r\n        },\r\n        {\r\n            'username': \"Stjepan\",\r\n            'password': '1234'\r\n        }\r\n    ]\r\n}\r\n\r\nexport default storage;"
      ]
    },
    "sourceType": "script",
    "mtime": 1594242623559
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//modul za pristup bazi\nvar connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'; //služi za pristup prema bazi na navedenom frameworku\n\nvar client = new _mongodb[\"default\"].MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null; //nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\n// eksportamo Promise koji resolva na konekciju\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    // ako smo inicijalizirali bazu i klijent je još uvijek spojen\n    if (db && client.isConnected()) {\n      resolve(db);\n    } else {\n      client.connect(function (err) {\n        if (err) {\n          reject('Spajanje na bazu nije uspjelo:' + err);\n        } else {\n          console.log('Database connected successfully!');\n          db = client.db('moja_praksa');\n          resolve(db);\n        }\n      });\n    }\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwibW9uZ28iLCJNb25nb0NsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7QUFEQTtBQUdBLElBQUlBLGlCQUFpQixHQUFHLGdHQUF4QixDLENBR0E7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHLElBQUlDLG9CQUFNQyxXQUFWLENBQXNCSCxpQkFBdEIsRUFBd0M7QUFDakRJLEVBQUFBLGVBQWUsRUFBRSxJQURnQztBQUVqREMsRUFBQUEsa0JBQWtCLEVBQUU7QUFGNkIsQ0FBeEMsQ0FBYjtBQUtBLElBQUlDLEVBQUUsR0FBRyxJQUFULEMsQ0FFQTtBQUNBO0FBRUE7O2VBQ2Usb0JBQU07QUFDakIsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDO0FBQ0EsUUFBSUgsRUFBRSxJQUFJTCxNQUFNLENBQUNTLFdBQVAsRUFBVixFQUFnQztBQUM1QkYsTUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSCxLQUZELE1BRU87QUFDSEwsTUFBQUEsTUFBTSxDQUFDVSxPQUFQLENBQWUsVUFBQ0MsR0FBRCxFQUFTO0FBQ3BCLFlBQUlBLEdBQUosRUFBUztBQUNMSCxVQUFBQSxNQUFNLENBQUMsbUNBQW1DRyxHQUFwQyxDQUFOO0FBQ0gsU0FGRCxNQUVPO0FBQ0hDLFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGtDQUFaO0FBQ0FSLFVBQUFBLEVBQUUsR0FBR0wsTUFBTSxDQUFDSyxFQUFQLENBQVUsYUFBVixDQUFMO0FBQ0FFLFVBQUFBLE9BQU8sQ0FBQ0YsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0g7QUFDSixHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEZJbGlwLVByb2JuaVxcbW9qYV9wcmFrc2FcXG1vamFfcHJha3NhX2JhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy9tb2R1bCB6YSBwcmlzdHVwIGJhemlcclxuaW1wb3J0IG1vbmdvIGZyb20gJ21vbmdvZGInXHJcblxyXG5sZXQgY29ubmVjdGlvbl9zdHJpbmcgPSAnbW9uZ29kYitzcnY6Ly9hZG1pbjphZG1pbkBmby1jbHVzdGVyLmIxcjJnLm1vbmdvZGIubmV0L21vamFfcHJha3NhP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSdcclxuXHJcblxyXG4vL3NsdcW+aSB6YSBwcmlzdHVwIHByZW1hIGJhemkgbmEgbmF2ZWRlbm9tIGZyYW1ld29ya3VcclxubGV0IGNsaWVudCA9IG5ldyBtb25nby5Nb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZyx7XHJcbiAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcclxufSlcclxuXHJcbmxldCBkYiA9IG51bGw7XHJcblxyXG4vL25ha29uIHNwYWphbmphIHZyYcSHYW1vIGRvYml2ZW51IGluc3RhbmN1IGJhemUgb3N0YWxpbSBtb2R1bGltYSBrb2ppIHRvIHRyZWJhanVcclxuLy9leHBvcnRhbW8gYXNpbmtyb251IGZ1bmtjaWp1IGtvamEgbmUgcHJpbWEgbmkgamVkYW4gcGFyYW1ldGFyXHJcblxyXG4vLyBla3Nwb3J0YW1vIFByb21pc2Uga29qaSByZXNvbHZhIG5hIGtvbmVrY2lqdVxyXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIC8vIGFrbyBzbW8gaW5pY2lqYWxpemlyYWxpIGJhenUgaSBrbGlqZW50IGplIGpvxaEgdXZpamVrIHNwb2plblxyXG4gICAgICAgIGlmIChkYiAmJiBjbGllbnQuaXNDb25uZWN0ZWQoKSkge1xyXG4gICAgICAgICAgICByZXNvbHZlKGRiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbGllbnQuY29ubmVjdCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KCdTcGFqYW5qZSBuYSBiYXp1IG5pamUgdXNwamVsbzonICsgZXJyKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGFiYXNlIGNvbm5lY3RlZCBzdWNjZXNzZnVsbHkhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGIgPSBjbGllbnQuZGIoJ21vamFfcHJha3NhJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "connection_string",
        "client",
        "mongo",
        "MongoClient",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "isConnected",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA;;;;AADA;AAGA,IAAIA,iBAAiB,GAAG,gGAAxB,C,CAGA;;AACA,IAAIC,MAAM,GAAG,IAAIC,oBAAMC,WAAV,CAAsBH,iBAAtB,EAAwC;AACjDI,EAAAA,eAAe,EAAE,IADgC;AAEjDC,EAAAA,kBAAkB,EAAE;AAF6B,CAAxC,CAAb;AAKA,IAAIC,EAAE,GAAG,IAAT,C,CAEA;AACA;AAEA;;eACe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA,QAAIH,EAAE,IAAIL,MAAM,CAACS,WAAP,EAAV,EAAgC;AAC5BF,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFD,MAEO;AACHL,MAAAA,MAAM,CAACU,OAAP,CAAe,UAACC,GAAD,EAAS;AACpB,YAAIA,GAAJ,EAAS;AACLH,UAAAA,MAAM,CAAC,mCAAmCG,GAApC,CAAN;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAR,UAAAA,EAAE,GAAGL,MAAM,CAACK,EAAP,CAAU,aAAV,CAAL;AACAE,UAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,OARD;AASH;AACJ,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "//modul za pristup bazi\r\nimport mongo from 'mongodb'\r\n\r\nlet connection_string = 'mongodb+srv://admin:admin@fo-cluster.b1r2g.mongodb.net/moja_praksa?retryWrites=true&w=majority'\r\n\r\n\r\n//služi za pristup prema bazi na navedenom frameworku\r\nlet client = new mongo.MongoClient(connection_string,{\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true\r\n})\r\n\r\nlet db = null;\r\n\r\n//nakon spajanja vraćamo dobivenu instancu baze ostalim modulima koji to trebaju\r\n//exportamo asinkronu funkciju koja ne prima ni jedan parametar\r\n\r\n// eksportamo Promise koji resolva na konekciju\r\nexport default () => {\r\n    return new Promise((resolve, reject) => {\r\n        // ako smo inicijalizirali bazu i klijent je još uvijek spojen\r\n        if (db && client.isConnected()) {\r\n            resolve(db);\r\n        } else {\r\n            client.connect((err) => {\r\n                if (err) {\r\n                    reject('Spajanje na bazu nije uspjelo:' + err);\r\n                } else {\r\n                    console.log('Database connected successfully!');\r\n                    db = client.db('moja_praksa');\r\n                    resolve(db);\r\n                }\r\n            });\r\n        }\r\n    });\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1594283075909
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          db.collection('users').createIndex({\n            email: 1\n          }, {\n            unique: true\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  register: function register(userData) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _i, _Object$entries, _Object$entries$_i, key, value, db, partner, user, insertResult;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _i = 0, _Object$entries = Object.entries(userData);\n\n            case 1:\n              if (!(_i < _Object$entries.length)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n\n              if (value) {\n                _context2.next = 6;\n                break;\n              }\n\n              res.json({\n                status: 'Missing data'\n              });\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              _i++;\n              _context2.next = 1;\n              break;\n\n            case 9:\n              _context2.next = 11;\n              return (0, _db[\"default\"])();\n\n            case 11:\n              db = _context2.sent;\n              partner = {};\n              _context2.t0 = userData.email;\n              _context2.next = 16;\n              return _bcrypt[\"default\"].hash(userData.password, 8);\n\n            case 16:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = Date.now();\n              user = {\n                email: _context2.t0,\n                password: _context2.t1,\n                date_created: _context2.t2\n              };\n\n              if (userData.jmbag) {\n                user.account_type = 'Student', user.jmbag = userData.jmbag, user.name = userData.name, user.surname = userData.surname, user.technology = userData.technology;\n                user.year = userData.year;\n              } else {\n                user.account_type = 'Poslodavac', partner.company = userData.name;\n                partner.technology = userData.technology, partner.adress = userData.adress, partner.about_us = userData.about_us, partner.website = userData.website, partner.date_created = Date.now();\n                partner.contact_email = userData.contact_email, partner.contact_number = userData.telephone_number;\n                partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80';\n              }\n\n              _context2.prev = 20;\n              _context2.next = 23;\n              return db.collection('users').insertOne(user);\n\n            case 23:\n              insertResult = _context2.sent;\n\n              if (!(insertResult && insertResult.insertedId)) {\n                _context2.next = 28;\n                break;\n              }\n\n              delete user.password;\n              partner.userID = (0, _mongodb.ObjectID)(insertResult.insertedId);\n              return _context2.abrupt(\"return\", partner);\n\n            case 28:\n              _context2.next = 34;\n              break;\n\n            case 30:\n              _context2.prev = 30;\n              _context2.t3 = _context2[\"catch\"](20);\n\n              if (!(_context2.t3.name == \"MongoError\" && _context2.t3.code == 11000)) {\n                _context2.next = 34;\n                break;\n              }\n\n              throw new Error(\"User already exists\");\n\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[20, 30]]);\n    }))();\n  },\n  authenticateUser: function authenticateUser(email, password) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, user, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection(\"users\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context3.sent;\n              _context3.t0 = user && user.password;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(password, user.password);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 18;\n                break;\n              }\n\n              //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \n              //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\n              //naš token sadrži sve podatke o useru\n              //password nije potrebno spremati u token jer smo ga već provjerili\n              delete user.password;\n              token = _jsonwebtoken[\"default\"].sign(user, process.env.JWT_SECRET, {\n                algorithm: \"HS512\",\n                expiresIn: \"1 week\"\n              });\n              user.token = token;\n              return _context3.abrupt(\"return\", user);\n\n            case 18:\n              throw new Error('Cannot authenticate');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  //ako nam isValidUser prode zovemo next, ako ne prode javljamo gresku\n  isValidUser: function isValidUser(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var authorization, type, token;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log('tu sam223:');\n              _context4.prev = 1;\n              authorization = req.headers.authorization.split(' ');\n              type = authorization[0];\n              token = authorization[1];\n\n              if (!(type != 'Bearer')) {\n                _context4.next = 10;\n                break;\n              }\n\n              //console.log('type:' + type)\n              res.status(401).send();\n              return _context4.abrupt(\"return\", false);\n\n            case 10:\n              //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\n              //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\n              req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n              res.locals.sth = 2;\n              return _context4.abrupt(\"return\", next());\n\n            case 13:\n              _context4.next = 18;\n              break;\n\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](1);\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 18:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 15]]);\n    }))();\n  },\n  isStudent: function isStudent(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log('tu sam22:');\n              console.log({\n                sth: sth\n              });\n              _context5.prev = 2;\n              console.log('tu sam22:');\n\n              if (!(req.body.account_type == ('student' || 'Student'))) {\n                _context5.next = 10;\n                break;\n              }\n\n              console.log(req.jwt);\n              return _context5.abrupt(\"return\", next());\n\n            case 10:\n              res.status(401).send();\n              return _context5.abrupt(\"return\", false);\n\n            case 12:\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](2);\n              return _context5.abrupt(\"return\", res.status(401).send());\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 14]]);\n    }))();\n  },\n  changeUserPassword: function changeUserPassword(email, oldPassword, newPassword) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      var db, user, newPasswordTransformed, result;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context6.sent;\n              _context6.next = 5;\n              return db.collection(\"users\").findOne({\n                email: email\n              });\n\n            case 5:\n              user = _context6.sent;\n              _context6.t0 = user && user.password;\n\n              if (!_context6.t0) {\n                _context6.next = 11;\n                break;\n              }\n\n              _context6.next = 10;\n              return _bcrypt[\"default\"].compare(oldPassword, user.password);\n\n            case 10:\n              _context6.t0 = _context6.sent;\n\n            case 11:\n              if (!_context6.t0) {\n                _context6.next = 19;\n                break;\n              }\n\n              _context6.next = 14;\n              return _bcrypt[\"default\"].hash(newPassword, 8);\n\n            case 14:\n              newPasswordTransformed = _context6.sent;\n              _context6.next = 17;\n              return db.collection('users').updateOne({\n                _id: user._id\n              }, {\n                $set: {\n                  password: newPasswordTransformed\n                }\n              });\n\n            case 17:\n              result = _context6.sent;\n              return _context6.abrupt(\"return\", result.modifiedCount == 1);\n\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "email",
        "unique",
        "register",
        "userData",
        "Object",
        "entries",
        "key",
        "value",
        "res",
        "json",
        "status",
        "partner",
        "bcrypt",
        "hash",
        "password",
        "Date",
        "now",
        "user",
        "date_created",
        "jmbag",
        "account_type",
        "name",
        "surname",
        "technology",
        "year",
        "company",
        "adress",
        "about_us",
        "website",
        "contact_email",
        "contact_number",
        "telephone_number",
        "img_url",
        "insertOne",
        "insertResult",
        "insertedId",
        "userID",
        "code",
        "Error",
        "authenticateUser",
        "findOne",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "isValidUser",
        "req",
        "next",
        "console",
        "log",
        "authorization",
        "headers",
        "split",
        "type",
        "send",
        "verify",
        "locals",
        "sth",
        "isStudent",
        "body",
        "changeUserPassword",
        "oldPassword",
        "newPassword",
        "newPasswordTransformed",
        "updateOne",
        "_id",
        "$set",
        "result",
        "modifiedCount"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "import connect from './db'\r\nimport bcrypt from 'bcrypt'\r\nimport jwt from 'jsonwebtoken'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n(async () => {\r\n    let db = await connect();\r\n    db.collection('users').createIndex({ email: 1 }, { unique: true });\r\n})();\r\n\r\n\r\nexport default {\r\n    async register(userData){\r\n\r\n        for (const [key, value] of Object.entries(userData)) {\r\n            if(!value){\r\n              res.json({status: 'Missing data'})\r\n              return\r\n            }\r\n        }\r\n\r\n        let db = await connect()\r\n\r\n        let partner = {}\r\n        \r\n        let user = {\r\n            email: userData.email,\r\n            password: await bcrypt.hash(userData.password, 8),\r\n            date_created: Date.now()\r\n        }\r\n\r\n\r\n        if(userData.jmbag){\r\n            user.account_type = 'Student',\r\n            user.jmbag = userData.jmbag,\r\n            user.name = userData.name,\r\n            user.surname = userData.surname,\r\n            user.technology = userData.technology\r\n            user.year= userData.year\r\n        } else{\r\n            user.account_type = 'Poslodavac',\r\n            partner.company = userData.name\r\n            partner.technology= userData.technology,\r\n            partner.adress = userData.adress,\r\n            partner.about_us = userData.about_us,\r\n            partner.website = userData.website,\r\n            partner.date_created = Date.now()\r\n            partner.contact_email = userData.contact_email,\r\n            partner.contact_number = userData.telephone_number\r\n            partner.img_url = 'https://images.unsplash.com/photo-1493119508027-2b584f234d6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=80'\r\n        }\r\n        \r\n\r\n        try{\r\n            let insertResult = await db.collection('users').insertOne(user);\r\n      \r\n            if(insertResult && insertResult.insertedId){\r\n                delete user.password\r\n                partner.userID = ObjectID(insertResult.insertedId)\r\n\r\n                return partner \r\n            }\r\n        }\r\n        catch(e){\r\n            if (e.name ==\"MongoError\" && e.code == 11000){\r\n                throw new Error(\"User already exists\")\r\n            }\r\n        }   \r\n\r\n\r\n    },\r\n\r\n\r\n    async authenticateUser(email,password){\r\n        let db = await connect()\r\n        let user = await db.collection(\"users\").findOne({email : email})\r\n\r\n        // provjerava da li je ovaj hesh u bazi izveden iz cistog passworda\r\n        if(user && user.password && (await bcrypt.compare(password, user.password))){\r\n            //šifra za potpisivanje korisnika(kriptografski potpis) vežemo je uz naš backend, s tom šifrom potpisujemo \r\n            //tokene svih korisnika, kad nam korisnik vraća token provjeravamo da li je on potpisan s našom šifrom\r\n            //naš token sadrži sve podatke o useru\r\n            //password nije potrebno spremati u token jer smo ga već provjerili\r\n            delete user.password\r\n            let token = jwt.sign(user, process.env.JWT_SECRET, {\r\n                algorithm: \"HS512\",\r\n                expiresIn: \"1 week\"\r\n            })\r\n            \r\n            user.token = token\r\n\r\n            return user \r\n\r\n        }\r\n        else {\r\n            throw new Error('Cannot authenticate')\r\n        }\r\n    },\r\n\r\n    //ako nam isValidUser prode zovemo next, ako ne prode javljamo gresku\r\n    async isValidUser(req,res, next){\r\n        console.log('tu sam223:', )\r\n        try{\r\n            let authorization = req.headers.authorization.split(' ')\r\n            let type = authorization[0]\r\n            let token = authorization[1]\r\n            \r\n          \r\n    \r\n            if (type != 'Bearer'){\r\n                //console.log('type:' + type)\r\n               \r\n                res.status(401).send()\r\n                return false;\r\n            }\r\n            else {\r\n                //spremati u jwt kljuc podatke u korisniku da se moze na bilo kojem mjestu\r\n                //koristiti ti podaci o korisniku -> da se zna ko salje upit itd\r\n              \r\n                req.jwt = jwt.verify(token, process.env.JWT_SECRET)\r\n                res.locals.sth = 2\r\n                return next()\r\n            }\r\n        }\r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n    async isStudent(req,res, next){\r\n        console.log('tu sam22:', )\r\n        console.log({sth})\r\n\r\n        try{\r\n            console.log('tu sam22:', )\r\n    \r\n            if (req.body.account_type == ('student' || 'Student')){\r\n                console.log(req.jwt)\r\n                return next()\r\n                console.log('tu sam2')\r\n                \r\n            }\r\n            else {\r\n                res.status(401).send()\r\n                return false;\r\n\r\n            }\r\n        }\r\n        catch(e){\r\n            return res.status(401).send()\r\n        }\r\n    },\r\n\r\n\r\n    async changeUserPassword(email, oldPassword, newPassword){\r\n        let db = await connect()\r\n        \r\n        let user = await db.collection(\"users\").findOne({email : email})\r\n        \r\n\r\n        if (user && user.password && (await bcrypt.compare(oldPassword, user.password))){\r\n            let newPasswordTransformed = await bcrypt.hash(newPassword, 8)\r\n\r\n            let result = await db.collection('users').updateOne(\r\n                { _id: user._id },\r\n                {\r\n                    $set: {\r\n                        password: newPasswordTransformed,\r\n                    },\r\n                }\r\n            );\r\n            return result.modifiedCount == 1;\r\n        }\r\n    }\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1596545536424
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"filename\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\\\\src\\\\methods.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\FIlip-Probni\\\\moja_praksa\\\\moja_praksa_backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\methods.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
        "sourceFileName": "methods.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar methods = {\n  validateData: function validateData(data) {\n    for (var _i = 0, _Object$entries = Object.entries(data); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      if (!value) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  // jer je skoro identičan postupak za dodavanje partnera i projekta\n  pushData: function () {\n    var _pushData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(data, collectionName) {\n      var db, getPartner, insertResult, id;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (methods.validateData(data)) {\n                _context.next = 3;\n                break;\n              }\n\n              res.json({\n                status: 'Missing data'\n              });\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.next = 5;\n              return (0, _db[\"default\"])();\n\n            case 5:\n              db = _context.sent;\n              _context.prev = 6;\n\n              if (!(collectionName === 'projects')) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return db.collection(\"partners\").findOne({\n                userID: (0, _mongodb.ObjectID)(data.userID)\n              });\n\n            case 10:\n              getPartner = _context.sent;\n              data.partnerID = getPartner._id;\n\n            case 12:\n              _context.next = 14;\n              return db.collection(collectionName).insertOne(data);\n\n            case 14:\n              insertResult = _context.sent;\n              id = insertResult.insertedId;\n\n              if (!(insertResult && id)) {\n                _context.next = 18;\n                break;\n              }\n\n              return _context.abrupt(\"return\", id);\n\n            case 18:\n              return _context.abrupt(\"return\", id);\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](6);\n              throw new Error(\"Error accured during inserting project or partner\");\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 21]]);\n    }));\n\n    function pushData(_x, _x2) {\n      return _pushData.apply(this, arguments);\n    }\n\n    return pushData;\n  }(),\n  addPartner: function () {\n    var _addPartner = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(partnerData) {\n      var result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              delete partnerData.account_type;\n              _context2.next = 4;\n              return methods.pushData(partnerData, 'partners');\n\n            case 4:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              res.status(500).json({\n                error: _context2.t0.message\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    function addPartner(_x3) {\n      return _addPartner.apply(this, arguments);\n    }\n\n    return addPartner;\n  }(),\n  // identičan postupak za promjenu info partnera i projekta\n  changeInfo: function () {\n    var _changeInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(data, collectionName) {\n      var db, result, id;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              id = data.id;\n              delete data.id; //za ovakav update više odgovara put, a ne patch?\n\n              if (!(data.updateDoc === 'true')) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 8;\n              return db.collection(collectionName).updateOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              }, {\n                $set: data\n              });\n\n            case 8:\n              result = _context3.sent;\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.next = 13;\n              return db.collection(collectionName).deleteOne({\n                _id: (0, _mongodb.ObjectID)(id)\n              });\n\n            case 13:\n              result = _context3.sent;\n\n            case 14:\n              if (!(result.modifiedCount == 1 || result.deletedCount == 1)) {\n                _context3.next = 18;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", 'success');\n\n            case 18:\n              return _context3.abrupt(\"return\", 'fail');\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function changeInfo(_x4, _x5) {\n      return _changeInfo.apply(this, arguments);\n    }\n\n    return changeInfo;\n  }(),\n  //nece trebati ako su imena atributa ista\n  mapAttributes: function () {\n    var _mapAttributes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(projectData) {\n      var project;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              project = {\n                company: projectData.company,\n                project_description: projectData.description,\n                date_created: Date.now(),\n                contact: projectData.contact,\n                technologies: projectData.technologies,\n                preferences: projectData.preferences,\n                requirements: projectData.requirements,\n                duration: projectData.duration,\n                location: projectData.location,\n                note: projectData.note\n              };\n              return _context4.abrupt(\"return\", project);\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function mapAttributes(_x6) {\n      return _mapAttributes.apply(this, arguments);\n    }\n\n    return mapAttributes;\n  }(),\n  //  identičan postupak za pretragu partnera i projekta\n  search: function () {\n    var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(query, atributi, collectionName) {\n      var db, selekcija, pretraga, terms, cursor, results;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context5.sent;\n              selekcija = {};\n\n              if (query._any) {\n                pretraga = query._any;\n                terms = pretraga.split(' ');\n                console.log('terms:', terms);\n                selekcija = {\n                  $and: []\n                };\n                /*\r\n                terms.map(function(term){\r\n                    let or = { $or: [] };\r\n                    atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                    selekcija.$and.push(or);\r\n                })\r\n                */\n\n                terms.forEach(function (term) {\n                  var or = {\n                    $or: []\n                  };\n                  atributi.forEach(function (atribut) {\n                    or.$or.push(_defineProperty({}, atribut, new RegExp(term, \"i\")));\n                  });\n                  selekcija.$and.push(or);\n                });\n              }\n\n              _context5.next = 7;\n              return db.collection(collectionName).find(selekcija).sort({\n                company: 1\n              });\n\n            case 7:\n              cursor = _context5.sent;\n              _context5.next = 10;\n              return cursor.toArray();\n\n            case 10:\n              results = _context5.sent;\n              results.forEach(function (doc) {\n                doc.id = doc._id;\n                delete doc._id;\n              });\n              return _context5.abrupt(\"return\", results);\n\n            case 13:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function search(_x7, _x8, _x9) {\n      return _search.apply(this, arguments);\n    }\n\n    return search;\n  }()\n};\nvar _default = methods;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "methods.js"
      ],
      "names": [
        "methods",
        "validateData",
        "data",
        "Object",
        "entries",
        "key",
        "value",
        "pushData",
        "collectionName",
        "res",
        "json",
        "status",
        "db",
        "collection",
        "findOne",
        "userID",
        "getPartner",
        "partnerID",
        "_id",
        "insertOne",
        "insertResult",
        "id",
        "insertedId",
        "Error",
        "addPartner",
        "partnerData",
        "account_type",
        "result",
        "error",
        "message",
        "changeInfo",
        "updateDoc",
        "updateOne",
        "$set",
        "deleteOne",
        "modifiedCount",
        "deletedCount",
        "mapAttributes",
        "projectData",
        "project",
        "company",
        "project_description",
        "description",
        "date_created",
        "Date",
        "now",
        "contact",
        "technologies",
        "preferences",
        "requirements",
        "duration",
        "location",
        "note",
        "search",
        "query",
        "atributi",
        "selekcija",
        "_any",
        "pretraga",
        "terms",
        "split",
        "console",
        "log",
        "$and",
        "forEach",
        "term",
        "or",
        "$or",
        "atribut",
        "push",
        "RegExp",
        "find",
        "sort",
        "cursor",
        "toArray",
        "results",
        "doc"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\FIlip-Probni\\moja_praksa\\moja_praksa_backend\\src\\",
      "sourcesContent": [
        "/* Svrha ovog filea je odvojiti metode odnosno funkcije od ruta i handlera radi preglednosti, a metode su pisane radi redundancije koda */\r\nimport connect from './db.js'\r\nimport { ObjectID } from 'mongodb'\r\n\r\n\r\n\r\nlet methods  = {\r\n\r\n\r\n    validateData : (data) => {\r\n        for (const [key, value] of Object.entries(data)) {\r\n            if(!value){\r\n\r\n              return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n\r\n    \r\n\r\n    // jer je skoro identičan postupak za dodavanje partnera i projekta\r\n    pushData : async (data, collectionName) => {\r\n\r\n        if (!methods.validateData(data)) {\r\n            res.json({status: 'Missing data'})\r\n            return\r\n        }\r\n            \r\n        let db = await connect()\r\n        \r\n        try{\r\n\r\n            //projektu pridodajemo partnerID radi lakšeg mapiranja i rada s podacima\r\n            if(collectionName === 'projects') {\r\n                let getPartner  = await db.collection(\"partners\").findOne({userID: ObjectID(data.userID)})\r\n                data.partnerID = getPartner._id\r\n            }\r\n\r\n            \r\n            let insertResult = await db.collection(collectionName).insertOne(data);\r\n            let id = insertResult.insertedId\r\n\r\n            if(insertResult && id){ \r\n                 // 1. način\r\n                 return id\r\n                }\r\n                \r\n                /*\r\n                // pushanje projectId-a u listu projekata određenog partnera, 2. način\r\n\r\n                if(collectionName === 'projects'){\r\n                    let partnerID = data.partnerID\r\n                    delete data.partnerID\r\n                    \r\n                    await db.collection('partners').updateOne( { _id: ObjectID(partnerID) },{$addToSet:{ \"projects\": id}}, true);\r\n                }\r\n                */\r\n                return id\r\n            }\r\n        \r\n        catch(e){\r\n                throw new Error(\"Error accured during inserting project or partner\")\r\n        } \r\n    },\r\n\r\n\r\n   \r\n    addPartner : async (partnerData) => {\r\n        \r\n        try{\r\n            delete partnerData.account_type\r\n\r\n            let result = await methods.pushData(partnerData, 'partners')\r\n\r\n            return result\r\n        }\r\n        catch(e){\r\n            res.status(500).json({ error: e.message});\r\n        }   \r\n    },\r\n\r\n\r\n    // identičan postupak za promjenu info partnera i projekta\r\n    changeInfo : async (data, collectionName) => {\r\n        let db = await connect();\r\n        let result\r\n    \r\n        let id = data.id\r\n        delete data.id\r\n        \r\n        //za ovakav update više odgovara put, a ne patch?\r\n        if (data.updateDoc==='true')        result = await db.collection(collectionName).updateOne( { _id: ObjectID(id) },{ $set: data });\r\n        else                                result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } )\r\n\r\n        // 2 način\r\n        /*\r\n        else{\r\n            await db.collection('partners').updateOne( {}, {\r\n                $pull: { _id: ObjectID(id)  } } \r\n              )\r\n\r\n            result = await db.collection(collectionName).deleteOne( { _id: ObjectID(id) } );\r\n        } \r\n        */\r\n\r\n        if (result.modifiedCount == 1 || result.deletedCount == 1)  return 'success'\r\n        else return 'fail'\r\n    },\r\n\r\n\r\n    //nece trebati ako su imena atributa ista\r\n    mapAttributes : async (projectData) =>{\r\n     \r\n        let project = {\r\n                company: projectData.company,\r\n                project_description: projectData.description,\r\n                date_created: Date.now(),\r\n                contact: projectData.contact,\r\n                technologies: projectData.technologies,\r\n                preferences: projectData.preferences,\r\n                requirements: projectData.requirements,\r\n                duration: projectData.duration,\r\n                location: projectData.location,\r\n                note: projectData.note,\r\n        }\r\n        return project\r\n    },\r\n\r\n\r\n    \r\n    //  identičan postupak za pretragu partnera i projekta\r\n    search : async (query, atributi, collectionName) =>{\r\n        let db = await connect()\r\n\r\n        let selekcija = {}\r\n        \r\n        if(query._any){\r\n            let pretraga = query._any\r\n            let terms = pretraga.split(' ')\r\n            console.log('terms:',terms)\r\n\r\n            selekcija = {\r\n                $and: []\r\n            }\r\n\r\n            /*\r\n            terms.map(function(term){\r\n                let or = { $or: [] };\r\n                atributi.map(or.$or.push({ [atribut]: new RegExp(term, \"i\") }));\r\n                selekcija.$and.push(or);\r\n            })\r\n            */\r\n            \r\n            \r\n            terms.forEach((term) => {\r\n                let or = {\r\n                    $or: []\r\n                };\r\n\r\n                atributi.forEach(atribut => {\r\n                    or.$or.push({ [atribut]: new RegExp(term, \"i\") });\r\n                })\r\n                selekcija.$and.push(or);\r\n            });\r\n            \r\n            \r\n     }\r\n\r\n        let cursor = await db.collection(collectionName).find(selekcija).sort({company: 1})\r\n\r\n        let results =  await cursor.toArray()\r\n\r\n        results.forEach(doc => {\r\n            doc.id = doc._id\r\n            delete doc._id\r\n        })\r\n\r\n\r\n        return results\r\n    },\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default methods"
      ]
    },
    "sourceType": "script",
    "mtime": 1596551482711
  }
}